[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"# Project Description","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"\u003eThis project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"## What is AddressBook π (Abπ)?","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"**Abπ** is an improvement of **[AB3](https://se-education.org/addressbook-level3)** and it is optimized specifically for","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"users who prefer typing via the Command Line Interface(CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"It helps users keep track of their professional contacts, separating it from their personal contacts.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"**Basic Features in AB3:**","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"- [x] Add contacts.","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"- [x] Delete contacts.","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"- [x] Edit contacts.","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"- [x] Locating contacts by name.","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"- [x] Listing all contacts.","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"- [x] Clear all contacts.","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"- [x] Exit the program.","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"- [x] Saving the application data into a file.","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"- [x] Editing the data file.","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"**Upcoming Features in ABπ that is not in AB3:**","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"- [ ] Find contacts by their name, phone number, tags and email.","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"- [ ] Copy all emails into the clipboard.","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"- [ ] Prevent duplicated phone number and email.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"- [ ] Memo feature.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"- [ ] Shortcuts to invoke most recently used command.","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"## Instructions","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"~~**All you need to do is:**~~","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"Currently, there are no instructions to download ABπ because it is still in the development phase.","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"atmh":3,"-":3,"tandeshao":37}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"lovemathboy"},"content":"run {","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lovemathboy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lovemathboy":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"You can reach us at the email `e0544426@u.nus.edu` or `e0544387@u.nus.edu`.","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"### Alvin Tay Ming Hwee","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"\u003cimg src\u003d\"images/atmh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"[github](https://github.com/atmh) | [portfolio](team/atmh.md)","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"* Role: Scheduling and tracking.","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"* Responsibilities: In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"### Huang Xing Chen","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"\u003cimg src\u003d\"images/lovemathboy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"[github](http://github.com/lovemathboy) | [portfolio](team/lovemathboy.md)","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"* Role: Code Quality.","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards.","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"### Tan De Shao","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"\u003cimg src\u003d\"images/tandeshao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"[github](http://github.com/tandeshao) | [portfolio](team/tandeshao.md)","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"* Role: Deliverables and deadlines.","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"### Xu Peizhe","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"\u003cimg src\u003d\"images/xpzmichael.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"[github](http://github.com/xpzmichael) | [portfolio](team/xpzmichael.md)","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"* Role: Documentation.","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"atmh":21,"-":25}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"## Table of Content \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"[1. Acknowledgements](#1-acknowledgements) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"[2. Setting up, getting started](#2-setting-up-getting-started) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"[3. Design](#3-design) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.1. Architecture](#31-architecture) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.2. UI component](#32-ui-component) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.3. Logic component](#33-logic-component) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.4. Model component](#34-model-component) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.5. Storage component](#35-storage-component) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[3.6. Common classes](#36-common-classes) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"[4. Implementation](#4-implementation) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.1. Undo and redo feature](#41-undo-and-redo-feature) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.1.1. Design considerations](#411-design-considerations) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.2. Find feature](#42-find-feature) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.1. Design considerations](#421-design-considerations) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.3. Memo and ContactedDate data fields](#43-memo-and-contacteddate-data-fields) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.3.1. Design considerations](#431-design-considerations) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.4. Previous and next feature](#44-previous-and-next-feature) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"[5. Documentation, logging, testing, configuration, dev-ops](#5-documentation-logging-testing-configuration-dev-ops) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"[6. Appendix: Requirements](#6-appendix-requirements) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[6.1. Product scope](#61-product-scope) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[6.2. User stories](#62-user-stories) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[6.3. Use cases](#63-use-cases) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[6.4. Non-Functional Requirements](#64-non-functional-requirements) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[6.5. Glossary](#65-glossary) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"[7. Appendix: Instructions for manual testing](#7-appendix-instructions-for-manual-testing) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[7.1. Launch and shutdown](#71-launch-and-shutdown) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[7.2. Deleting a person](#72-deleting-a-person) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[7.3. Editing a person\u0027s memo](#73-editing-a-persons-memo) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[7.4. Saving data](#74-saving-data) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"## 1. Acknowledgements","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"* https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"## 2. Setting up, getting started","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"## 3. Design","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"### 3.1. Architecture","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"### 3.2. UI component","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"### 3.3. Logic component","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"### 3.4. Model component","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"tandeshao"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-T17-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"### 3.5. Storage component","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"### 3.6. Common classes","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"## 4. Implementation","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"### 4.1. Undo and redo feature","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"The address book undo and redo mechanism is managed by `StateAddressBook`, which extends `AddressBook`. It keeps track of the address book state history, stored internally as a `stateHistory` and `currentStateIndex`. `currentStateIndex` points to the current state of the address book. The number of undoable and redoable actions is capped by `UNDO_REDO_CAPACITY`, currently set to 20. Additionally, it implements the following operations:","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"* `StateAddressBook#undo()` — Restores the address book to its previous state.","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"* `StateAddressBook#redo()` — Restores the address book to a previously undid state.","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"* `StateAddressBook#saveState()` — Saves the current address book state in stateHistory.","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"* `StateAddressBook#isUndoable()` — Returns if the address book is undoable.","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"* `StateAddressBook#isRedoable()` — Returns if the address book is redoable.","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"These operations are exposed in the `Model` interface respectively as","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"* `Model#undoAddressBook()`","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"* `Model#redoAddressBook()`","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"* `Model#saveAddressBookState()`","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"* `Model#canUndoAddressBook()`","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"* `Model#canRedoAddressBook()`","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"Commands that do not modify the address book states will not call `Model#saveAddressBookState()`. The address book undo and redo mechanism only tracks commands that modify the address book state, the commands that are undoable and redoable are `add`, `edit`, `delete`, `clear` and `scrub`.","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"Given below is an example usage scenario and how undo and redo mechanism behaves at each step. For demonstration, `UNDO_REDO_CAPACITY` is set to 3.","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"Step 1. The user launches the application for the first time. The `StateAddressBook` will be initialized with the initial address book state, and the `currentStateIndex` points to the initial address book state.","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"atmh"},"content":"Step 2. The user executes `edit 1 n/Bob` command to edit the first person in the address book. After the `edit` command executes, it calls `Model#saveAddressBookState()`, which saves the modified state of the address book to `stateHistory`, and the `currentStateIndex` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"Step 3. The user executes `delete 2` to delete the second person. The `delete` command also calls `Model#saveAddressBookState()`, creating another modified address book state to be saved into the `stateHistory`. As before, `currentStateIndex` is incremented.","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a `Command#execute` fails, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into `stateHistory` and `currentStateIndex` will not change.","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"Step 4. The user executes `clear` to clear the address book. The `clear` command also calls `Model#saveAddressBookState()`, creating another modified address book state to be saved into the `stateHistory`. Similarly, `currentStateIndex` is incremented.","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"atmh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If `stateHistory#isFull()` is true, i.e. size of `stateHistory` is equal to `UNDO_REDO_CAPACITY` + 1, then the state at index 0 of `stateHistory` will be removed.","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"atmh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"atmh"},"content":"Step 5. The user decides that clearing his address book was not a good idea. He executes `undo` to restore his contacts. The `undo` command calls `Model#undoAddressBook()`, which will decrement the `currentStateIndex`, shifting it left once. `currentStateIndex` now points to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"atmh"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"Step 6. The user wants to revert his `delete 2` command from Step 3 as well. He executes `undo` to revert the deletion. Similarly to Step 5, the `delete` command calls `Model#undoAddressBook()`, which will decrement the `currentStateIndex`, shifting it left once. `currentStateIndex` now points to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"atmh"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"atmh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStateIndex` is at index 0, there are no previous address book states to restore. The `undo` command calls `Model#canUndoAddressBook()` to check if it is undoable. In this case, if `undo` is executed once more, return an error will be returned to the user rather than performing the undo mechanism.","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"atmh"},"content":"Step 7. The user can\u0027t make up his mind and decides to redo his undo. He executes `redo` to revert the previously undid command `delete 2`. The `delete` command calls `Model#redoAddressBook()`, which will increment the `currentStateIndex`, shifting it right once. `currentStateIndex` now points to the previous undid address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-19"},{"lineNumber":251,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":252,"author":{"gitId":"atmh"},"content":"![UndoRedoState6](images/UndoRedoState6.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** If `currentStateIndex` is at index `stateHistory.size() - 1`, pointing to the latest address book state, there are no undone AddressBook states to restore. The `redo` command calls `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than performing the redo mechanism.","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"atmh"},"content":"Step 8. The user executes the `list` command. Commands that do not modify the address book state, such as `list`, will not call `Model#saveAddressBookState()`. Hence, `stateHistory` does not change.","lastModifiedDate":"2022-03-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"atmh"},"content":"![UndoRedoState7](images/UndoRedoState7.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"atmh"},"content":"Step 9. The user executes `add n/Tom …​`, which calls `Model#saveAddressBookState()`. Since `currentStateIndex` is not pointing at the end of the `stateHistory`, all address book states after the `currentStateIndex` will be cleared by calling `StateAddressBook#clearAfterCurrentStateIndex()`. Why this is so is because it no longer makes sense to redo the `clear` command. This behaviour follows modern application undo and redo functionality.","lastModifiedDate":"2022-03-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"atmh"},"content":"![UndoRedoState8](images/UndoRedoState8.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"atmh"},"content":"\u003cimg src\u003d\"images/SaveStateActivityDiagram.png\" width\u003d\"224\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"atmh"},"content":"#### 4.1.1. Design considerations:","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"atmh"},"content":"* **Current implementation:** Saves the entire address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"atmh"},"content":"    * Workaround: Limit the number of undoable and redoable actions, using `UNDO_REDO_CAPACITY`. Currently, it is set to 20.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"atmh"},"content":"* **Alternative:** Individual command knows how to undo and redo by itself.","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"atmh"},"content":"    * Pros: `stateHistory` will use less memory. E.g. for `delete` it only needs to save the person being deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"atmh"},"content":"    * Cons: It will take a considerable amount of effort to implement and maintain. Commands that are developed in the future, if applicable, must also support this, which adds to the complexity. It must be done meticulously to ensure that the implementation of each individual command is correct.","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"atmh"},"content":"    ","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"atmh"},"content":"**Aspect: stateHistory data structure:**","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"atmh"},"content":"* **Current implementation:** `stateHistory` is an `ArrayList`.","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"atmh"},"content":"    * Pros: Easy to implement and less prone to bugs.","lastModifiedDate":"2022-03-19"},{"lineNumber":288,"author":{"gitId":"atmh"},"content":"    * Cons: Inefficiency of removing old states. Since `stateHistory` is an `ArrayList`, when `StateAddressBook#saveState()` is called and `StateAddressBook#isFull()` is true, i.e. `stateHistory.size()` is equal to `UNDO_REDO_CAPACITY` + 1, the first index is removed via `ArrayList.remove(0)`, which has a time complexity of O(n).","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"atmh"},"content":"* **Alternative 1:** Use a doubly linked list with next and previous pointers. ","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"atmh"},"content":"    * Pros: O(1) time complexity for all `StateAddressBook` methods.","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"atmh"},"content":"    * Cons: Java in-built lists do not support next and previous pointers. We will need to carefully implement a doubly linked list and ensure that it is bug free.","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"atmh"},"content":"* **Alternative 2:** Use a `Deque` to store previous states and a `Stack` to store undid states.","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"atmh"},"content":"    * Pros: O(1) time complexity for all `StateAddressBook` methods.","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"atmh"},"content":"    * Cons: It can be tricky to implement the interactions between undo and redo. For example `undo`, followed by `redo`, and then `undo` again. The interaction between undo and redo needs to be managed carefully.","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"atmh"},"content":"### 4.2. Find feature","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"tandeshao"},"content":"The address book find command allow users to search contacts based on their name, email, phone, address, tags, memo and contacted date. When the user keys in a find command, the user input is parsed through a `FindCommandParser` and if a valid input is given, the `FindCommand#execute(Model)` method will be invoked. Doing this will effectively filter the person list in the `Addressbook` and this filtered list will be returned to the Ui for display.","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"tandeshao"},"content":"Given below is a sequence diagram to show the execution flow of the find command and a walk-through for each step of the execution:","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"tandeshao"},"content":"\u003cimg src\u003d\"images/FindSequenceDiagram.png\"/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"tandeshao"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"tandeshao"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"tandeshao"},"content":"\u003cimg src\u003d\"images/FindPersonPredicate.png\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":307,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"tandeshao"},"content":"Step 1. When a user invokes a find command from the Ui, `LogicManager` will be called, which parses the user input into `AddressbookParser#parseCommand(String)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"tandeshao"},"content":"Step 2. `FindCommandParser` will then be instantiated and `FindCommandParser#parse(String)` is invoked. If a valid input is provided, `FindCommandParser#createArgMap(String)`is called.","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"tandeshao"},"content":"Since a user can key in multiple valid parameters to increase the scope of a search (i.e. search by name and tags), we will need a way to identify different parts of the user input and match the input to their corresponding prefix. This can be achieved with the `ArgumentMultimap` class where it will store the descriptions to search a person by.","lastModifiedDate":"2022-03-27"},{"lineNumber":313,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"tandeshao"},"content":"Step 3. The `ArgumentMultimap` object is passed as an argument into the  `FindPersonPredicate` constructor and the object created is returned to `FindCommandParser`.","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** Two note-worthy classes that are created in `FindPersonPredicate` but not shown in the sequence diagram is the `ExactWordMatchPredicate` and `PartialWordMatchPredicate` which encapsulate the logic of conducting exact word match and partial word match on a person\u0027s attribute respectively. They are used in the `FindPersonPredicate#test(Person)` method during the filter process and to conduct exact word match/partial word match depending on the person\u0027s attribute. More information will be given in the design consideration. ","lastModifiedDate":"2022-03-26"},{"lineNumber":318,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"tandeshao"},"content":"Step 4. `FindCommandParser` will then use the created `FindPersonPredicate` object to create the `FindCommand` object and this object is returned to `LogicManager`.","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"tandeshao"},"content":"Step 5. `LogicManager` will then call`FindCommand#execute(Model)` method and this method will invoke ","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"tandeshao"},"content":"`Model#updateFilteredPersonList(PersonContainsKeywordsPredicate)` where it will update the filter for the person list in the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"tandeshao"},"content":"Step 6. After the filter has been updated, each person in the person list will be tested against the predicate to see if any of the information in the person\u0027s attribute matches any of the keywords provided by the user. The filtered list is created and returned to the Ui.","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":328,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"atmh"},"content":"#### 4.2.1. Design Considerations:","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"tandeshao"},"content":"**Aspect: How the find feature executes:** ","lastModifiedDate":"2022-03-30"},{"lineNumber":332,"author":{"gitId":"tandeshao"},"content":"* **Current implementation:** Each invocation of the find command filters the original person list. ","lastModifiedDate":"2022-03-30"},{"lineNumber":333,"author":{"gitId":"tandeshao"},"content":"    * Pros: It is easy to implement. ","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"tandeshao"},"content":"    * Cons: Users might want to filter the filtered person list even further after viewing it but with the current implementation, this is not possible.  ","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"tandeshao"},"content":"    * Workaround: To simulate the chaining of multiple find commands, users will have to remember their search condition(s) for the first find and add on/modify the search condition(s) in subsequent find commands. A history feature is developed to assist users to achieve that as it returns the most recent command that is parsed into the application. By invoking the history command (which can be done by pressing the up arrow key), the search condition of the previous find command can be retrieved and all the user have to do is to add on to the returned search condition(s).  ","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"tandeshao"},"content":"    ","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"tandeshao"},"content":"* **Alternative 1:** Allow chaining of the find command so that filtering of the filtered person list can be performed.  ","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"tandeshao"},"content":"    * Pros: It is a useful feature to have. ","lastModifiedDate":"2022-03-23"},{"lineNumber":339,"author":{"gitId":"tandeshao"},"content":"    * Cons: It is costly in terms of time and effort to develop as the current implementation can already achieve a similar functionality. To allow chaining of the find command, we will have to change the data structure that stores the filtered person list and since there are multiple classes in the application that relies on this list, changing it might require us to change certain components in other classes as well.","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"tandeshao"},"content":"**Aspect: Matching criteria of the find command:**","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"tandeshao"},"content":"* **Current implementation:** Different search criteria for different search parameters. \u003cbr /\u003e ","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"tandeshao"},"content":"The following table shows the available matching criteria for Abπ and a description to explain the implementation details of the matching criteria:","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"tandeshao"},"content":"| Matching criteria                | Description                                                                                                                                                                                                                                                                                                        | ","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"tandeshao"},"content":"|----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"tandeshao"},"content":"| Partial string matching          | Does a case-insensitive partial match between two strings where it will check if the query string is contained within the compared string. Note that the order of character matters and this includes the whitespace character.                                      |  ","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"tandeshao"},"content":"| Exact string matching            | Does a case-insensitive exact match between two strings where it will check if the query string is equivalent to the compared string.                                                                                                                                                                              |","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"tandeshao"},"content":"| Contacted Date matching criteria | When given a valid positive integer \"n\", the criteria selects people that had not been contacted for at least n days (relative to the current day). Note that when no positive integer is specified and the user only types in `find c/`, the criteria would select only people who had not been contacted at all. | ","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"tandeshao"},"content":"Below is a table that shows the matching criteria that is used for each person\u0027s attribute and each of the entry is followed with an example:","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** For all matching criteria, consecutive whitespaces in the query string is treated as a single whitespace. For example, `find n/Alex_ _ _Yeoh` would be treated as `find n/Alex_Yeoh` where \"_\" represents a single whitespace in the query string.","lastModifiedDate":"2022-03-30"},{"lineNumber":362,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":365,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":366,"author":{"gitId":"tandeshao"},"content":"| Attribute      | Prefix | Matching criteria       | Example                                                                                                         | ","lastModifiedDate":"2022-03-30"},{"lineNumber":367,"author":{"gitId":"tandeshao"},"content":"|----------------|--------|-------------------------|-----------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":368,"author":{"gitId":"tandeshao"},"content":"| Name           | n/     | Partial string matching | find n/Alex would match with \"alexa\".                                                                           |  ","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"tandeshao"},"content":"| Phone Number   | p/     | Partial string matching | find p/9040 would match with \"90400204\".                                                                        |","lastModifiedDate":"2022-03-30"},{"lineNumber":370,"author":{"gitId":"tandeshao"},"content":"| Email          | e/     | Partial string matching | find e/@gmail would match with anybody that has the @gmail domain.                                              | ","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"tandeshao"},"content":"| Address        | a/     | Partial string matching | find a/street would match with anybody that has the string \"street\" in their address.                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"tandeshao"},"content":"| Memo           | m/     | Partial string matching | find m/Lover would match with anybody that has the string \"lover\" in their memo.                                |","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"tandeshao"},"content":"| Contacted Date | c/     | Contacted Date Matching | find c/5 would match with anybody that had not been contacted for more than 5 days relative to the current day. |","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"tandeshao"},"content":"| Tags           | t/     | Exact string matching   | find t/Family would only match with anybody that has a tag that is equivalent to the string \"family\".           | ","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"tandeshao"},"content":" Apart from the `c/` prefix, when multiple of the same prefix is specified in the find command, the search result is equivalent to combining the set of results from the first prefix and the set of results from the second prefix. For instance the result that is shown from `find n/alex n/yeoh` is the same as doing a union operation on the set of results from `find n/alex` and `find n/yeoh`. For `c/`, only the input arguments from the last `c/` prefix will be parsed into the find command. For example, `find c/ c/10` would only show contacts that had not been contacted for at least 10 days from the current date.        ","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"tandeshao"},"content":"  * Pros: Allows for a more accurate search that meets the needs of the user (as opposed to adopting a single search criteria for all the person\u0027s attribute). ","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"tandeshao"},"content":"    * Tags was chosen to follow the exact string match criteria because users are likely to remember the full word of a tag and search for them.","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"tandeshao"},"content":"    * For contacted date, a special matching criteria is created specifically for this attribute because the semantics of finding a person by their last contacted date is different from the other attributes. ","lastModifiedDate":"2022-03-30"},{"lineNumber":386,"author":{"gitId":"tandeshao"},"content":"    * As for the remaining attributes (name, phone number, email, address and memo), a partial string match criteria was adopted because it allows for more flexibility in the search. ","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"tandeshao"},"content":"      * For instance, if a user could only remember a certain part of the string for that specific attribute, this partial matching criteria is able to help the user filter out possible results that he/she might want. ","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"tandeshao"},"content":"      * On the other hand, if the user would like to perform a more restrictive search on the address book, he/she can simply type in more characters in the query string.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"tandeshao"},"content":"    ","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"tandeshao"},"content":"  * Cons: Edge cases that may cause the search to be ineffective are present and one such test case would be: `find e/gmail` where the intended effect the user might want is to search for all contacts that have the domain name set as \"gmail\". However, the email \"redherringmail@yahoo\" will be matched with the user query and this search result does not meet the intended effect the user might want.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"tandeshao"},"content":"  * Temporary workaround: Instead of searching for \"gmail\", users are able to search for \"@gmail\" if they would like to find all contacts that have the domain name set as \"gmail\".  ","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"tandeshao"},"content":"  ","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** A word is defined as consecutive characters that is bounded by whitespaces.","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"tandeshao"},"content":"e.g. \"This is a sentence!\" contains the word \"This\", \"is\", \"a\" and \"sentence! ","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":398,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":400,"author":{"gitId":"atmh"},"content":"### 4.3. Memo and ContactedDate data fields","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"atmh"},"content":"The address book `Memo` and `ContactedDate` are data fields, part of `Person`. `Memo` allow users to store miscellaneous information about a `Person`, while `ContactedDate` allow users to keep track of the last contacted date of a `Person`. `Memo` and `ContactedDate` are optional fields, that is, both can be empty. If `Memo` is empty, it will not be displayed. Whereas for `ContactedDate`, if it is empty, it will be displayed as `Not contacted`. All `Person` with empty `Memo` or `ContactedDate` will share the same static final empty instance, `EMPTY_MEMO` or `EMPTY_CONTACTED_DATE` respectively.","lastModifiedDate":"2022-03-27"},{"lineNumber":403,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":404,"author":{"gitId":"atmh"},"content":"A `Person` `Memo` and `ContactDate` can be added during the `add` command or edited by the `edit` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"atmh"},"content":"Given below is an example usage scenario and how `Memo` can be edited by the `edit` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"atmh"},"content":"Step 1. The user wants to edit the `Memo` of the first person in the address book and executes `edit 1 m/Avid hiker`.","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"atmh"},"content":"The following sequence diagram shows how the `edit 1 m/Avid hiker` operation works:","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":412,"author":{"gitId":"atmh"},"content":"![EditMemoSequenceDiagram](images/EditMemoSequenceDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":413,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"atmh"},"content":"Editing of ContactedDate via the `edit` command works similarly, the only difference is the `c/` prefix.","lastModifiedDate":"2022-03-27"},{"lineNumber":415,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"atmh"},"content":"The `Memo` and `ContactedDate` can also be added during the `add` command. The sequence is similar to the `edit 1 m/Avid hiker` diagram and for brevity, it will be omitted. The following are the differences of the sequence diagram:","lastModifiedDate":"2022-03-27"},{"lineNumber":417,"author":{"gitId":"atmh"},"content":"- `AddCommandParser` instead of `EditCommandParser`","lastModifiedDate":"2022-03-27"},{"lineNumber":418,"author":{"gitId":"atmh"},"content":"- `AddCommand` instead of `EditCommand`","lastModifiedDate":"2022-03-27"},{"lineNumber":419,"author":{"gitId":"atmh"},"content":"- `Model#addPerson(Person)` instead of `Model#setPerson(Person, Person)`","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"atmh"},"content":"- `Model#updateFilteredPersonList(Predicate)` will not be called.","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"atmh"},"content":"#### 4.3.1. Design considerations:","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":424,"author":{"gitId":"atmh"},"content":"**Aspect: Command to modify `Memo` and `ContactedDate`:**","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"atmh"},"content":"* **Current implementation:** Modification of `Memo` and `ContactedDate` are integrated into `add` and `edit` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":427,"author":{"gitId":"atmh"},"content":"    * Pros: Both fields can be optionally added during the `add` command or edited with the `edit` command. This builds upon existing commands, fewer commands for the users to remember. Adheres to the DRY principle and the Single Responsibility Principle.","lastModifiedDate":"2022-03-27"},{"lineNumber":428,"author":{"gitId":"atmh"},"content":"    * Cons: Requires more rigorous testing of `add` and `edit` command as this increases the number of possible arguments that can be parsed by `AddCommandParser` and `EditCommandParser` respectively.","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"atmh"},"content":"* **Alternative:** Implement individual commands to edit `Memo` and `ContactedDate`.","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"atmh"},"content":"    * Pros: `Memo` and `ContactedDate` will be separated from the `add` and `edit` command. It can only be edited by its respective command.","lastModifiedDate":"2022-03-27"},{"lineNumber":432,"author":{"gitId":"atmh"},"content":"    * Cons: There will be a lot of code duplication. The new commands to edit `Memo` and `ContactedDate` will be similar to the `edit` command. We feel that this would violate the DRY principle.","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":435,"author":{"gitId":"atmh"},"content":"### 4.4. Previous and next feature","lastModifiedDate":"2022-03-28"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"atmh"},"content":"## 5. Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2022-03-28"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"atmh"},"content":"## 6. Appendix: Requirements","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"atmh"},"content":"### 6.1. Product scope","lastModifiedDate":"2022-03-28"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"xpzmichael"},"content":"* Marcus is a 26 years old fresh graduate and has started working as a financial advisor.","lastModifiedDate":"2022-02-27"},{"lineNumber":457,"author":{"gitId":"xpzmichael"},"content":"* He is well versed in tech and prefers a command-line interface for performing tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":458,"author":{"gitId":"xpzmichael"},"content":"* Due to the nature of his work, he stores numerous client contacts on his google contacts, but dislikes it’s interface.","lastModifiedDate":"2022-02-27"},{"lineNumber":459,"author":{"gitId":"xpzmichael"},"content":"* He dislikes mixing his professional and personal contacts.","lastModifiedDate":"2022-02-27"},{"lineNumber":460,"author":{"gitId":"xpzmichael"},"content":"* He wants a way to store his clientele details in a separate place.","lastModifiedDate":"2022-02-27"},{"lineNumber":461,"author":{"gitId":"xpzmichael"},"content":"* He likes to get things done fast.","lastModifiedDate":"2022-02-27"},{"lineNumber":462,"author":{"gitId":"xpzmichael"},"content":"* He prefers typing over using a mouse.","lastModifiedDate":"2022-02-27"},{"lineNumber":463,"author":{"gitId":"xpzmichael"},"content":"* He is reasonably comfortable using CLI apps.","lastModifiedDate":"2022-03-03"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":466,"author":{"gitId":"xpzmichael"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-27"},{"lineNumber":467,"author":{"gitId":"xpzmichael"},"content":"- Manage contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2022-03-03"},{"lineNumber":468,"author":{"gitId":"xpzmichael"},"content":"- Display all relevant information of clients on a single application.","lastModifiedDate":"2022-02-27"},{"lineNumber":469,"author":{"gitId":"xpzmichael"},"content":"- Saves the insurance agent time and effort to look for a contact.","lastModifiedDate":"2022-02-27"},{"lineNumber":470,"author":{"gitId":"xpzmichael"},"content":"- Allow users to consolidate notes pertaining to their clients in a convenient way.","lastModifiedDate":"2022-02-27"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"atmh"},"content":"### 6.2. User stories","lastModifiedDate":"2022-03-28"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                                              | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"atmh"},"content":"|----------|----------|-----------------------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":480,"author":{"gitId":"-"},"content":"| `* * *`  | new user | see usage instructions                                    | refer to instructions when I forget how to use the App                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"atmh"},"content":"| `* * *`  | new user | see the app already populated with sample contacts        | see how the app will look when it’s running                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":482,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | add my new contacts                                       | store my contacts in the app                                                  |","lastModifiedDate":"2022-02-27"},{"lineNumber":483,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | list all my contacts                                      | see all my contacts in the app                                                |","lastModifiedDate":"2022-02-27"},{"lineNumber":484,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | edit a contact                                            | correct mistakes I’ve made when adding in the contacts                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":485,"author":{"gitId":"tandeshao"},"content":"| `* * *`  | user     | find my contacts                                          | access my desired contact without having to sieve through my entire phonebook |","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | save my contacts in the phonebook                         | whenever I re-launch the application, my contacts will still be in it         |","lastModifiedDate":"2022-02-27"},{"lineNumber":487,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | create tags and group the contacts using them             | separate my work and personal contacts                                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":488,"author":{"gitId":"xpzmichael"},"content":"| `* * *`  | user     | clear all my entries with a single command                | remove all my contacts without having to manually delete them one at a time   |","lastModifiedDate":"2022-02-27"},{"lineNumber":489,"author":{"gitId":"-"},"content":"| `* * *`  | user     | delete a person                                           | remove entries that I no longer need                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"| `* * *`  | user     | find a person by name                                     | locate details of persons without having to go through the entire list        |","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"atmh"},"content":"| `* * *`  | user     | undo my actions                                           | restore previous address book states                                          |","lastModifiedDate":"2022-03-19"},{"lineNumber":492,"author":{"gitId":"atmh"},"content":"| `* * *`  | user     | redo my actions                                           | restore previous undid address book states                                    |","lastModifiedDate":"2022-03-19"},{"lineNumber":493,"author":{"gitId":"atmh"},"content":"| `* *`    | user     | not have duplicated phone number or email                 | add and edit contacts without keeping track of duplicates                     |","lastModifiedDate":"2022-03-27"},{"lineNumber":494,"author":{"gitId":"atmh"},"content":"| `* *`    | user     | invoke my most recently used command                      | add/modify/delete multiple contacts in a more efficient manner                |","lastModifiedDate":"2022-03-27"},{"lineNumber":495,"author":{"gitId":"atmh"},"content":"| `* *`    | user     | find contacts by their name, phone number, tags and email | find the contacts I want quickly                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":496,"author":{"gitId":"atmh"},"content":"| `* *`    | user     | have a memo for each contact                              | keep track of miscellaneous information about a person                        |","lastModifiedDate":"2022-03-27"},{"lineNumber":497,"author":{"gitId":"atmh"},"content":"| `* *`    | user     | keep track of the last contacted date of a person         | identify how long it has been since I last contacted a person                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":498,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":499,"author":{"gitId":"atmh"},"content":"### 6.3. Use cases","lastModifiedDate":"2022-03-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"xpzmichael"},"content":"1.  User requests to list persons.","lastModifiedDate":"2022-03-03"},{"lineNumber":508,"author":{"gitId":"xpzmichael"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2022-03-03"},{"lineNumber":509,"author":{"gitId":"xpzmichael"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":510,"author":{"gitId":"xpzmichael"},"content":"4.  AddressBook deletes the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"xpzmichael"},"content":"**Use case: Edit a person**","lastModifiedDate":"2022-02-27"},{"lineNumber":527,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":528,"author":{"gitId":"xpzmichael"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":529,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":530,"author":{"gitId":"xpzmichael"},"content":"1.  User requests to list persons.","lastModifiedDate":"2022-03-03"},{"lineNumber":531,"author":{"gitId":"xpzmichael"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2022-03-03"},{"lineNumber":532,"author":{"gitId":"xpzmichael"},"content":"3.  User requests to Edit a specific person in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":533,"author":{"gitId":"xpzmichael"},"content":"4.  AddressBook update the person with new information.","lastModifiedDate":"2022-03-03"},{"lineNumber":534,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":535,"author":{"gitId":"xpzmichael"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":536,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":537,"author":{"gitId":"xpzmichael"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":538,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":539,"author":{"gitId":"xpzmichael"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-27"},{"lineNumber":540,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":541,"author":{"gitId":"xpzmichael"},"content":"  Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":542,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":543,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":544,"author":{"gitId":"xpzmichael"},"content":"**Use case: Adding a tag to a person**","lastModifiedDate":"2022-02-27"},{"lineNumber":545,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":546,"author":{"gitId":"xpzmichael"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":547,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":548,"author":{"gitId":"xpzmichael"},"content":"1.  User find a person.","lastModifiedDate":"2022-03-03"},{"lineNumber":549,"author":{"gitId":"xpzmichael"},"content":"2.  AddressBook shows the searching result of the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":550,"author":{"gitId":"xpzmichael"},"content":"3.  User requests to add a tap to a specific person.","lastModifiedDate":"2022-03-03"},{"lineNumber":551,"author":{"gitId":"xpzmichael"},"content":"4.  AddressBook adds that tag to the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":552,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":553,"author":{"gitId":"xpzmichael"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":554,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":555,"author":{"gitId":"xpzmichael"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":556,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":557,"author":{"gitId":"xpzmichael"},"content":"* 2a. Cannot find the user.","lastModifiedDate":"2022-02-27"},{"lineNumber":558,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":559,"author":{"gitId":"xpzmichael"},"content":"  Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":560,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":561,"author":{"gitId":"xpzmichael"},"content":"* 3a. The tag is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":562,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":563,"author":{"gitId":"xpzmichael"},"content":"    * 3a1. The tag exist already.","lastModifiedDate":"2022-02-27"},{"lineNumber":564,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":565,"author":{"gitId":"xpzmichael"},"content":"      ABπ show notification message.","lastModifiedDate":"2022-03-03"},{"lineNumber":566,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":567,"author":{"gitId":"xpzmichael"},"content":"      Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":568,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":569,"author":{"gitId":"xpzmichael"},"content":"    * 3a2. The tag exceeds the max length.","lastModifiedDate":"2022-02-27"},{"lineNumber":570,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":571,"author":{"gitId":"xpzmichael"},"content":"      ABπ show error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":572,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":573,"author":{"gitId":"xpzmichael"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-27"},{"lineNumber":574,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":575,"author":{"gitId":"xpzmichael"},"content":"**Use case: Adding memo to a person**","lastModifiedDate":"2022-02-27"},{"lineNumber":576,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":577,"author":{"gitId":"xpzmichael"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":578,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":579,"author":{"gitId":"xpzmichael"},"content":"1.  User find a person.","lastModifiedDate":"2022-03-03"},{"lineNumber":580,"author":{"gitId":"xpzmichael"},"content":"2.  AddressBook shows the searching result of the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":581,"author":{"gitId":"xpzmichael"},"content":"3.  User requests to add memo to a specific person.","lastModifiedDate":"2022-03-03"},{"lineNumber":582,"author":{"gitId":"xpzmichael"},"content":"4.  AddressBook adds that memo to the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":583,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":584,"author":{"gitId":"xpzmichael"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":585,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":586,"author":{"gitId":"xpzmichael"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":587,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":588,"author":{"gitId":"xpzmichael"},"content":"* 2a. Cannot find the user.","lastModifiedDate":"2022-02-27"},{"lineNumber":589,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":590,"author":{"gitId":"xpzmichael"},"content":"  Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":591,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":592,"author":{"gitId":"xpzmichael"},"content":"* 3a. The memo is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":593,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":594,"author":{"gitId":"xpzmichael"},"content":"    * 3a1. The memo exceeds the max length.","lastModifiedDate":"2022-02-27"},{"lineNumber":595,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":596,"author":{"gitId":"xpzmichael"},"content":"      ABπ show error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":597,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":598,"author":{"gitId":"xpzmichael"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-27"},{"lineNumber":599,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":600,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"atmh"},"content":"### 6.4. Non-Functional Requirements","lastModifiedDate":"2022-03-28"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"xpzmichael"},"content":"4. The main window should be resizable in order to fit different screen size.","lastModifiedDate":"2022-02-27"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"atmh"},"content":"### 6.5. Glossary","lastModifiedDate":"2022-03-28"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"atmh"},"content":"* **OS**: Operating System","lastModifiedDate":"2022-03-28"},{"lineNumber":614,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"atmh"},"content":"* **Abπ**: AddressBook pi","lastModifiedDate":"2022-03-28"},{"lineNumber":616,"author":{"gitId":"atmh"},"content":"* **DRY**: Don\u0027t repeat yourself","lastModifiedDate":"2022-03-28"},{"lineNumber":617,"author":{"gitId":"atmh"},"content":"* **JSON**: JavaScript Object Notation","lastModifiedDate":"2022-03-28"},{"lineNumber":618,"author":{"gitId":"atmh"},"content":"* **OOP**: Object-oriented programming","lastModifiedDate":"2022-03-28"},{"lineNumber":619,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"atmh"},"content":"## 7. Appendix: Instructions for manual testing","lastModifiedDate":"2022-03-28"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"atmh"},"content":"### 7.1. Launch and shutdown","lastModifiedDate":"2022-03-28"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"atmh"},"content":"### 7.2. Deleting a person","lastModifiedDate":"2022-03-28"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"atmh"},"content":"### 7.3. Editing a person\u0027s memo","lastModifiedDate":"2022-03-28"},{"lineNumber":667,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":668,"author":{"gitId":"atmh"},"content":"1. Editing a person\u0027s memo while all persons are being shown","lastModifiedDate":"2022-03-19"},{"lineNumber":669,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":670,"author":{"gitId":"atmh"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-03-19"},{"lineNumber":671,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":672,"author":{"gitId":"atmh"},"content":"    2. Test case: `edit 1 m/interested in xx policy`\u003cbr\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":673,"author":{"gitId":"atmh"},"content":"       Expected: First contact\u0027s memo is edited to \"interested in xx policy\". Details of the edited contact shown in the status message.","lastModifiedDate":"2022-03-19"},{"lineNumber":674,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":675,"author":{"gitId":"atmh"},"content":"    3. Test case: `edit 2 m/`\u003cbr\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":676,"author":{"gitId":"atmh"},"content":"       Expected: Second contact\u0027s memo is cleared. Details of the edited contact shown in the status message.","lastModifiedDate":"2022-03-19"},{"lineNumber":677,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":678,"author":{"gitId":"atmh"},"content":"    4. Other incorrect edit commands to try: `edit`, `edit 1 bob`, `edit x m/VP`, `...` (where x is larger than the list size or smaller than 1)\u003cbr\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":679,"author":{"gitId":"atmh"},"content":"       Expected: Invalid command message displaying the format for proper command usage.","lastModifiedDate":"2022-03-19"},{"lineNumber":680,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":681,"author":{"gitId":"atmh"},"content":"### 7.4. Saving data","lastModifiedDate":"2022-03-28"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xpzmichael":100,"atmh":176,"-":307,"tandeshao":104}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"## Overview","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"AddressBook pi (Abπ) is a **360° all-rounded desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI). Abπ is catered towards fast-typers and individuals who want an organized address book with key features including efficient filtering of contacts based on various attributes (name, email, tags, etc), copying of all emails in the address book and a memo section that allows you to note down notable details about a person. Whether you are an insurance agent who needs to manage numerous client contacts, or a student leader who needs to contact a large number of students, Abπ has got you covered. So what are you waiting for? Download and try out Abπ today!","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"## Table of Content \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"[1. Introduction](#1-introduction) \u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"\u0026nbsp;\u0026nbsp;[1.1. Conventions](#11-conventions)  ","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"[2. Quick Start](#2-quick-start) \u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"\u0026nbsp;\u0026nbsp;[2.1. Installation](#21-installation) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[2.2. System Requirements](#22-system-requirements) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"[3. About](#3-about) \u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"[4. Features](#4-features) \u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.1. Adding and Editing a person](#41-adding-and-editing-a-person) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.1.1. Adding a person](#411-adding-a-person-add) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.1.2. Editing a person](#412-editing-a-person-edit) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.2. Adding and Editing a person\u0027s tag](#42-adding-and-editing-a-persons-tag) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.1. Adding tags to a person](#421-adding-tags-to-a-person-addtag) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.2. Deleting tags of a person](#422-deleting-tags-of-a-person-deletetag) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;[4.3. Removing persons](#43-removing-persons) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.3.1. Deleting a person](#431-deleting-a-person-delete) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.3.2. Scrubbing address book](#432-scrubbing-address-book-scrub) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.3.3. Clearing all entries](#433-clearing-all-entries-clear) \u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.4. Displaying person details](#44-displaying-person-details) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.4.1. Viewing person details](#441-viewing-person-details-view) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.5. Filtering the address book](#45-filtering-the-address-book) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.5.1. Finding person by their attributes](#451-finding-person-by-their-attributes-find) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.5.2. Listing all persons](#452-listing-all-persons-list) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.6. Getting all emails](#46-getting-all-emails) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.6.1. Copying Emails](#461-copying-emails-copyemails) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.7. Quality of Life](#47-quality-of-life) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.7.1. Undoing commands](#471-undoing-commands-undo) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.7.2. Redoing commands](#472-redoing-commands-redo) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.7.3. Retrieving recent commands](#473-retrieving-recent-commands-up_arrow_key-or-down_arrow_key) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.8. Miscellaneous](#48-miscellaneous) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.8.1. Viewing help](#481-viewing-help-help) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.8.2. Exiting the program](#482-exiting-the-program-exit) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;[4.9. Extra information regarding the features](#49-extra-information-regarding-the-features) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.9.1. Preventing duplicate entries (phone and email)](#491-preventing-duplicate-entries-phone-and-email) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.9.2. Saving the data](#492-saving-the-data) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.9.3. Editing the data file](#493-editing-the-data-file) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.9.4. Predictive viewing](#494-predictive-viewing) \u003cbr/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"[5. FAQ](#5-faq) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"[6. Command Summary](#6-command-summary) \u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"----","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"## 1. Introduction","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"This document is the user guide for AddressBook Level 3.14 (Abπ), an all-rounded desktop app for managing contacts. It is primarily targeted towards fast-typers and individuals who prefer working on a Command-Line Interface (CLI).   ","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"*If you\u0027re unfamiliar with Command-Line Interfaces (CLIs), you can find out more about them [here](https://en.wikipedia.org/wiki/Command-line_interface)!*","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"For users who are interested in using Abπ, this guide is for you as it will help you find out about the different features Abπ offers and the different commands that are available for you to use it.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"**Before we begin, let us understand the different technical terminologies that will be used in this user guide.**","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":" Word | What it means                                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"------|---------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"Command box| Text box in the Abπ that allows user to type in texts.                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"Command| A sentence that causes Abπ to do something when typed into the command box.     |","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"Command word | The first word of every command.                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"Parameters | Information that is supplied by the user.                                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"Execute | The process by which Abπ reads the instructions written by user and acts on it. |","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"String | A programming terminology that describes an ordered sequence of characters.      |","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"### 1.1. Conventions","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"When this document is read, certain words or sentences are represented in different fonts, typefaces, sizes and weights. This highlighting is systematic where different words will be represented in the same style to indicate their inclusion in a specific category. Below is a table that shows what those categories are and how they are represented by each format/symbol.","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"Symbol | What it means |","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"-----|----------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"`add` | Words/sentences that have this format of display are texts/keyboard commands that can cause a response in Abπ","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"*Italics* | Sentences that are in italics represent additional information.","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":":exclamation: | Warning/cautionary statement that should be read. ","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":":bulb: | Extra tip that may be useful to the reader.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":":information_source: | Important information to take note.          ","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"[here](\") |Words that are in this format are clickable links that directs you to a certain webpage.","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"------------","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"## 2. Quick start","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"### 2.1. Installation","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"2. Download the latest Abπ.jar from [here](https://github.com/AY2122S2-CS2103T-T17-4/tp/releases).","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"3. Copy the file to the folder you want to use as the home folder for your AddressBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"4. Double-click the file to start the app. The GUI similar to below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter on your keyboard will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"   * `list`: Lists all contacts.","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"   * `addn/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tandeshao"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tandeshao"},"content":"6. Refer to the [features](#4-features) below for details of each command.","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tandeshao"},"content":"### 2.2. System Requirements","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tandeshao"},"content":"Ideally, the machine you are running on should be able to run Java. Below is a list of system specifications that supports Abπ.","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"tandeshao"},"content":"_For more information on Java, click [here](https://www.oracle.com/java/technologies/downloads/)_","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tandeshao"},"content":"### Windows","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tandeshao"},"content":"* Windows 10 (8u51 and above)","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"* Windows 8.x (Desktop)","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"* Windows 7 SP1","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"* Windows Vista SP2","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"tandeshao"},"content":"* Windows Server 2008 R2 SP1 (64-bit)","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tandeshao"},"content":"* Windows Server 2012 and 2012 R2 (64-bit)","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tandeshao"},"content":"* RAM: 128 MB","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tandeshao"},"content":"* Disk space: 124 MB for JRE; 2 MB for Java Update","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tandeshao"},"content":"* Processor: Minimum Pentium 2 266 MHz processor","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tandeshao"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"tandeshao"},"content":"### Mac OS X","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tandeshao"},"content":"* Intel-based Mac running Mac OS X 10.8.3+, 10.9+","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tandeshao"},"content":"* Administrator privileges for installation","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tandeshao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tandeshao"},"content":"## 3. About","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tandeshao"},"content":"This section will bring you through the Graphical User Interface (GUI) of Abπ.","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"![UiGuide](images/UiGuide.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tandeshao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tandeshao"},"content":"## 4. Features","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"tandeshao"},"content":"* Words in upper case are the parameters to be supplied by the user. e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"* Items in square brackets are optional. e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"tandeshao"},"content":"* Items with `…`​ after them can be used multiple times including zero times. e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"tandeshao"},"content":"* Parameters can be in any order. e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"tandeshao"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken. e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"* Commands that do not take in parameters (`help`, `list`, `copyemails`, `undo`, `redo`, `previous`, `next`, `clear`, `exit`) must match the command format exactly, otherwise it will not be recognized. This is to protect from accidental invocations of the wrong command. e.g. if you want to delete the first person and mistakenly call `clear 1` instead of `delete 1`, it will be interpreted as an invalid command to protect you from accidentally clearing the entire address book unintentionally. The proper format is to execute clear is just `clear`.","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"### 4.1. Adding and Editing a person","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"#### 4.1.1. Adding a person: `add`","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [c/CONTACTED DATE] [m/MEMO] [t/TAG]…​`","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":" Contacted Date and Memo is optional","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":" A person can have any number of tags (including 0)","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"* `add n/Alice Eng p/98765432 e/aliceeng@example.com a/Alice street`","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 c/01-01-2020 m/Avid free climber`","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 m/Partner in crime t/criminal`","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"#### 4.1.2. Editing a person: `edit`","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [c/CONTACTED DATE] [m/MEMO] [t/TAG]…​`","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"* You can remove all the person’s tags or memo by typing `t/` or `m/` respectively without specifying text after it.","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"* You can edit a peron\u0027s contacted date to \"Not contacted\" by typing `c/` without specifying a date after it.","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"* `edit 2 n/Betsy Crower t/` edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"* `edit 2 m/Avid free climber` edits the memo of the 2nd person to be `Avid free climber`.","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"* `edit 2 c/01-01-2020` edits the contacted date of the 2nd person to be `Last contacted on 01-01-2020`.","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"* `edit 2 m/ c/` edits the memo of the 2nd person to be empty and the contacted date to be `Not contacted`.","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":218,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"### 4.2. Adding and Editing a person\u0027s tag","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"#### 4.2.1. Adding tags to a person: `addtag`","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"tandeshao"},"content":"Appends one or more tags to a specified person in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"tandeshao"},"content":"Format: `addtag INDEX t/TAG…`","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"tandeshao"},"content":"* Appends one or more tags to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"tandeshao"},"content":"* If any of the tag to be appended already exists in the person\u0027s tag list, the command will be rejected.","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"tandeshao"},"content":"* `addtag 1 t/friends` appends the tag \"friends\" to the 1st person in the displayed person list.","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"tandeshao"},"content":"* `addtag 2 t/colleagues t/friends` appends the tag \"colleagues\" and \"friends\" to the 2nd person in the displayed person list.","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"atmh"},"content":"#### 4.2.2. Deleting tags of a person: `deletetag`","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"atmh"},"content":"Deletes one or more tags of a specified person in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"atmh"},"content":"Format: `deletetag INDEX t/TAG…`","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"atmh"},"content":"* Deletes one or more tags of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"atmh"},"content":"* If any of the tag to be deleted does not exist, the command will be rejected.","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"atmh"},"content":"* `deletetag 1 t/friends` deletes the tag \"friends\" of the 1st person if the tag exists.","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"atmh"},"content":"* `deletetag 2 t/colleagues t/friends` deletes the tag \"colleagues\" and \"friends\" of the 2nd person if both tags exist.","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"atmh"},"content":"### 4.3. Removing persons","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"atmh"},"content":"#### 4.3.1. Deleting a person: `delete`","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":266,"author":{"gitId":"atmh"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":268,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":270,"author":{"gitId":"atmh"},"content":"#### 4.3.2. Scrubbing address book: `scrub`","lastModifiedDate":"2022-03-30"},{"lineNumber":271,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"tandeshao"},"content":"Cleans up the address book of unwanted contacts.","lastModifiedDate":"2022-03-30"},{"lineNumber":273,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":274,"author":{"gitId":"tandeshao"},"content":"Format: `scrub [p/PHONE] [e/EMAIL DOMAIN] [t/TAG]…​`","lastModifiedDate":"2022-03-30"},{"lineNumber":275,"author":{"gitId":"tandeshao"},"content":"* Delete contacts that match any of the phone number, email domain or tag specified from the command.","lastModifiedDate":"2022-03-30"},{"lineNumber":276,"author":{"gitId":"tandeshao"},"content":"* At least one parameter must be present.","lastModifiedDate":"2022-03-30"},{"lineNumber":277,"author":{"gitId":"tandeshao"},"content":"* The scrub command only scrubs contacts that have an exact match with any of the specified parameters.","lastModifiedDate":"2022-03-30"},{"lineNumber":278,"author":{"gitId":"tandeshao"},"content":"* This match is case-insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** Email domain is defined to be the string that is after the \"@\" symbol (inclusive). For example, a valid scrub command that removes contacts based on their email domain is: `scrub e/@gmail` or `scrub e/@gmail.com`. Note that `scrub e/tester@gmail.com` would result in an invalid command format error since \"e/\" only takes in a valid domain name. ","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":284,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-30"},{"lineNumber":285,"author":{"gitId":"tandeshao"},"content":" When there is at least two identical prefix specified in the scrub command, the result is equivalent to doing the scrub operation for the first specified parameter, followed by doing the scrub operation for the subsequent specified parameter. For instance the result that is shown from `scrub p/90400203 p/90400202` is the same as doing `scrub p/90400203` on the existing contact list followed by conducting `scrub p/90400202` on the resulted contact list from the first scrub command.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":286,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"tandeshao"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":289,"author":{"gitId":"tandeshao"},"content":"* `scrub e/@gmail.com` would scrub contacts that have the \"@gmail.com\" domain name for their email.","lastModifiedDate":"2022-03-30"},{"lineNumber":290,"author":{"gitId":"tandeshao"},"content":"* `scrub e/@gmail` would scrub contacts that have the \"@gmail\" domain name and this includes \"@gmail.com\" and \"@gmail.sg\".","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"tandeshao"},"content":"* `scrub p/90200402` would scrub contacts that have the number \"90200402\".","lastModifiedDate":"2022-03-30"},{"lineNumber":292,"author":{"gitId":"tandeshao"},"content":"* `scrub t/family` would scrub contacts that have the tag \"family\".","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":294,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":295,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":296,"author":{"gitId":"atmh"},"content":"#### 4.3.3. Clearing all entries: `clear`","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":302,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":303,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"lovemathboy"},"content":"### 4.4. Displaying person details","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"lovemathboy"},"content":"#### 4.4.1. Viewing person details: `view`","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"lovemathboy"},"content":"Displays the detailed description of the selected person on the right side of the User Interface.","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":310,"author":{"gitId":"lovemathboy"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":311,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":312,"author":{"gitId":"lovemathboy"},"content":"* Displays detailed information of person at the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":313,"author":{"gitId":"lovemathboy"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-31"},{"lineNumber":314,"author":{"gitId":"lovemathboy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":315,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":316,"author":{"gitId":"lovemathboy"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"lovemathboy"},"content":"* `list` followed by `view 2` displays the 2nd person in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":318,"author":{"gitId":"lovemathboy"},"content":"* `find n/John` followed by `view 1` displays the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":319,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":320,"author":{"gitId":"lovemathboy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-31"},{"lineNumber":321,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"lovemathboy"},"content":":information_source: **Note:** Abπ will try to predict which person you\u0027re trying to view as you execute other commands. As an example, when you add a new person, Abπ will automatically display the newly added person without the need of a `view` command. For more information on the predictive behavior, check out [4.9.4. Predictive viewing](#494-predictive-viewing).","lastModifiedDate":"2022-03-31"},{"lineNumber":323,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":324,"author":{"gitId":"lovemathboy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":325,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":326,"author":{"gitId":"lovemathboy"},"content":"### 4.5. Filtering the address book","lastModifiedDate":"2022-03-31"},{"lineNumber":327,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":328,"author":{"gitId":"lovemathboy"},"content":"#### 4.5.1. Finding person by their attributes: `find`","lastModifiedDate":"2022-03-31"},{"lineNumber":329,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":330,"author":{"gitId":"tandeshao"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2022-02-20"},{"lineNumber":331,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":332,"author":{"gitId":"tandeshao"},"content":"Format: `find [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [m/MEMO] [c/Days] [t/TAG]…​`","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"tandeshao"},"content":"Below is a table that shows the different matching criteria that is present in the app:","lastModifiedDate":"2022-03-30"},{"lineNumber":335,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"tandeshao"},"content":"| Matching criteria                | Attributes that uses the criteria        | Description                                                                                                                                                                                                                                                                                                        | ","lastModifiedDate":"2022-03-30"},{"lineNumber":337,"author":{"gitId":"tandeshao"},"content":"|----------------------------------|------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"tandeshao"},"content":"| Partial string matching          | Name, Phone number, Email, Address, Memo | Does a case-insensitive partial match between two strings where it will check if the query string is contained within the compared string. Note that the order of character matters and this includes the whitespace character.                                                                                    |  ","lastModifiedDate":"2022-03-30"},{"lineNumber":339,"author":{"gitId":"tandeshao"},"content":"| Exact string matching            | Tags                                     | Does a case-insensitive exact match between two strings where it will check if the query string is equivalent to the compared string.                                                                                                                                                                              |","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"tandeshao"},"content":"| Contacted Date matching criteria | Contacted Date                           | When given a valid positive integer \"n\", the criteria selects people that had not been contacted for at least n days (relative to the current day). Note that when no positive integer is specified and the user only types in `find c/`, the criteria would select only people who had not been contacted at all. |","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":342,"author":{"gitId":"tandeshao"},"content":"Examples:","lastModifiedDate":"2022-02-20"},{"lineNumber":343,"author":{"gitId":"tandeshao"},"content":"* `find n/Alex` would match with \"alexa\".","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"tandeshao"},"content":"* `find p/9040` would match with \"90400204\".","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"tandeshao"},"content":"* `find e/@gmail` would match with anybody that has the \"@gmail\" domain.","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"tandeshao"},"content":"* `find a/street` would match with anybody that has the string \"street\" in their address.","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"tandeshao"},"content":"* `find m/Lover` would match with anybody that has the string \"lover\" in their memo.","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"tandeshao"},"content":"* `find c/5` would match with anybody that had not been contacted for more than 5 days relative to the current day.","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"tandeshao"},"content":"*  `find t/Family` would only match with anybody that has a tag that is equivalent to the string \"family\".","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e  ","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"tandeshao"},"content":":information_source: **Note:** For all matching criteria, consecutive whitespaces in the query string is treated as a single whitespace. For example, `find n/Alex_ _ _Yeoh` would be treated as `find n/Alex_Yeoh` where \"_\" represents a single whitespace in the query string.","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"tandeshao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"tandeshao"},"content":" Apart from the `c/` prefix,  when there is at least two identical prefix specified in the find command, the search result that is displayed to the user is equivalent to conducting a set union operation on the set of results from the first prefix and the set of results from the subsequent prefixes. For instance the result that is shown from `find n/alex n/yeoh` is the same as doing a union operation on the set of results from `find n/alex` and `find n/yeoh`. For `c/`, only the input parameters from the last `c/` prefix will be used in the find command. For example, `find c/ c/10` would only show contacts that had not been contacted for at least 10 days from the current date.        ","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"tandeshao"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":363,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":364,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":365,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":366,"author":{"gitId":"lovemathboy"},"content":"#### 4.5.2. Listing all persons: `list`","lastModifiedDate":"2022-03-31"},{"lineNumber":367,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":368,"author":{"gitId":"atmh"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":370,"author":{"gitId":"atmh"},"content":"Format: `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"atmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":374,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":375,"author":{"gitId":"lovemathboy"},"content":"### 4.6. Getting all emails","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"lovemathboy"},"content":"#### 4.6.1. Copying Emails: `copyemails`","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"atmh"},"content":"Copies a semicolon-separated list of all displayed emails to clipboard.","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"atmh"},"content":"Format: `copyemails`","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"atmh"},"content":"* `list` followed by `copyemails` will copy all emails currently displayed in the list to your clipboard.","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"atmh"},"content":"* When you paste from clipboard, a semicolon-separated list will appear. (E.g. \"johndoe@example.com; betsycrowe@example.com\")","lastModifiedDate":"2022-03-30"},{"lineNumber":386,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":388,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"lovemathboy"},"content":"### 4.7. Quality of Life","lastModifiedDate":"2022-03-31"},{"lineNumber":390,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"lovemathboy"},"content":"#### 4.7.1. Undoing commands: `undo`","lastModifiedDate":"2022-03-31"},{"lineNumber":392,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":393,"author":{"gitId":"atmh"},"content":"Undo previous commands that modified data, which includes: `add`, `edit`, `delete`, `clear` and `scrub`.","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":395,"author":{"gitId":"atmh"},"content":"Format: `undo`","lastModifiedDate":"2022-03-26"},{"lineNumber":396,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":397,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":398,"author":{"gitId":"atmh"},"content":"* `undo` after calling `delete 1` restores the address book to its previous state prior to the deletion.","lastModifiedDate":"2022-03-26"},{"lineNumber":399,"author":{"gitId":"atmh"},"content":"* `undo` after calling `edit 1 n/Bob` restores the address book to its previous state prior to the edit.","lastModifiedDate":"2022-03-26"},{"lineNumber":400,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":401,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"lovemathboy"},"content":"#### 4.7.2. Redoing commands: `redo`","lastModifiedDate":"2022-03-31"},{"lineNumber":404,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"atmh"},"content":"Redo reverses the `undo` command.","lastModifiedDate":"2022-03-29"},{"lineNumber":406,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":407,"author":{"gitId":"atmh"},"content":"Format: `redo`","lastModifiedDate":"2022-03-26"},{"lineNumber":408,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":409,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":410,"author":{"gitId":"atmh"},"content":"* `redo` after calling `undo` restores the address book to its previous state prior to undo.","lastModifiedDate":"2022-03-29"},{"lineNumber":411,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":412,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":413,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":414,"author":{"gitId":"lovemathboy"},"content":"#### 4.7.3. Retrieving recent commands: `UP_ARROW_KEY` or `DOWN_ARROW_KEY`","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":416,"author":{"gitId":"atmh"},"content":"By pressing the `UP_ARROW_KEY` button or the `DOWN_ARROW_KEY` button on your keyboard, you can easily retrieve your recent commands and the recent command would autofill into the text box.","lastModifiedDate":"2022-03-29"},{"lineNumber":417,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":418,"author":{"gitId":"atmh"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":419,"author":{"gitId":"tandeshao"},"content":"* If the recent commands are `find n/Anny` `find n/Bob` `find n/Cathy`.","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"tandeshao"},"content":"* Pressing `UP_ARROW_KEY` once will fill-in the textbox with \"find n/Cathy\".","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"tandeshao"},"content":"* Then pressing `UP_ARROW_KEY` again will fill-in the textbox with \"find n/Bob\".","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"tandeshao"},"content":"* Then pressing `DOWN_ARROW_KEY` once will fill-in the textbox with \"find n/Cathy\".","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":424,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"lovemathboy"},"content":"### 4.8. Miscellaneous","lastModifiedDate":"2022-03-31"},{"lineNumber":427,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":428,"author":{"gitId":"lovemathboy"},"content":"#### 4.8.1. Viewing help: `help`","lastModifiedDate":"2022-03-31"},{"lineNumber":429,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":430,"author":{"gitId":"atmh"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":432,"author":{"gitId":"atmh"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":434,"author":{"gitId":"atmh"},"content":"Format: `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":435,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":436,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"lovemathboy"},"content":"#### 4.8.2. Exiting the program: `exit`","lastModifiedDate":"2022-03-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2022-03-22"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-03-22"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":444,"author":{"gitId":"tandeshao"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":446,"author":{"gitId":"lovemathboy"},"content":"### 4.9. Extra information regarding the features","lastModifiedDate":"2022-03-31"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":448,"author":{"gitId":"lovemathboy"},"content":"#### 4.9.1. Preventing duplicate entries (phone and email) ","lastModifiedDate":"2022-03-31"},{"lineNumber":449,"author":{"gitId":"tandeshao"},"content":"Abπ helps to manage duplicates by preventing duplicate entries of phone number and email when using the add and edit commands. All phone numbers and emails in Abπ will be unique.","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":451,"author":{"gitId":"lovemathboy"},"content":"#### 4.9.2. Saving the data","lastModifiedDate":"2022-03-31"},{"lineNumber":452,"author":{"gitId":"atmh"},"content":"Abπ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":454,"author":{"gitId":"lovemathboy"},"content":"#### 4.9.3. Editing the data file","lastModifiedDate":"2022-03-31"},{"lineNumber":455,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":456,"author":{"gitId":"atmh"},"content":"Abπ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-27"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":458,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-03-22"},{"lineNumber":459,"author":{"gitId":"atmh"},"content":" If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-22"},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":462,"author":{"gitId":"lovemathboy"},"content":"#### 4.9.4. Predictive viewing","lastModifiedDate":"2022-03-31"},{"lineNumber":463,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":464,"author":{"gitId":"lovemathboy"},"content":"Abπ will pre-emptively update the display after various commands:","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":466,"author":{"gitId":"lovemathboy"},"content":"* After an `add` command, the newly added person will be automatically displayed. This allows you to check if all the details of the person you just added are correct without needing to execute an additional `view` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":467,"author":{"gitId":"lovemathboy"},"content":"* Similarly, when you `redo` an `add` command, the newly added person will be automatically displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":468,"author":{"gitId":"lovemathboy"},"content":"* After a deletion command (such as `delete` or `clear`), followed by an `undo` command, the deleted person(s) will be restored and automatically displayed. This allows you to check if the person you just deleted was the correct person without needing to execute an additional `view` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":469,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":470,"author":{"gitId":"lovemathboy"},"content":"In addition, Abπ aims to keep all displayed information updated:","lastModifiedDate":"2022-03-31"},{"lineNumber":471,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":472,"author":{"gitId":"lovemathboy"},"content":"* If the person currently on display is removed from the address book, the display will be blank. ","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"lovemathboy"},"content":"* If the person currently on display has their details changed, the display will contain the newly updated details.","lastModifiedDate":"2022-03-31"},{"lineNumber":474,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":475,"author":{"gitId":"lovemathboy"},"content":"Hence, there is no need to worry about the display containing outdated information.","lastModifiedDate":"2022-03-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":477,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"atmh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":480,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":481,"author":{"gitId":"tandeshao"},"content":"## 5. FAQ","lastModifiedDate":"2022-03-27"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"atmh"},"content":"**How do I save in Abπ?**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":484,"author":{"gitId":"atmh"},"content":"There is no need to save manually. Abπ automatically saves the data after any command that changes the data.","lastModifiedDate":"2022-03-27"},{"lineNumber":485,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":486,"author":{"gitId":"atmh"},"content":"**Where does Abπ store its data?**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":487,"author":{"gitId":"atmh"},"content":"Abπ data is stored in data folder located at Abπ\u0027s home directory, the data file name is \"addressbook.json\". Specifically \"[_Abπ location_]/data/addressbook.json\".","lastModifiedDate":"2022-03-30"},{"lineNumber":488,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":489,"author":{"gitId":"atmh"},"content":"**How do I transfer my data to another computer?**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":490,"author":{"gitId":"atmh"},"content":"Simply overwrite the \"addressbook.json\" data file with your previous \"addressbook.json\" data file.","lastModifiedDate":"2022-03-30"},{"lineNumber":491,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":492,"author":{"gitId":"atmh"},"content":"**What happens if I executed a command unintentionally?**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":493,"author":{"gitId":"atmh"},"content":"Fret not, Abπ supports the `undo` and `redo` commands, which follows modern application undo and redo functionality.","lastModifiedDate":"2022-03-27"},{"lineNumber":494,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":495,"author":{"gitId":"atmh"},"content":"**Why is my data gone?**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":496,"author":{"gitId":"atmh"},"content":"When the data file is corrupted, an empty address book will be shown. Do not worry, Abπ has made a backup of your previous data file, named as \"backup.json\", located at \"[_Abπ location_]/data/backup.json\". Fix the \"backup.json\" into the proper json format, rename it as \"addressbook.json\" and overwrite the existing data file.","lastModifiedDate":"2022-03-30"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"atmh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":501,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":502,"author":{"gitId":"tandeshao"},"content":"## 6. Command summary","lastModifiedDate":"2022-03-27"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"atmh"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [c/CONTACTED DATE] [m/MEMO] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 c/01-01-2020 m/Avid hiker t/friend t/colleague`","lastModifiedDate":"2022-03-27"},{"lineNumber":507,"author":{"gitId":"atmh"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [c/CONTACTED DATE] [m/MEMO] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-03-27"},{"lineNumber":508,"author":{"gitId":"atmh"},"content":"**AddTag** | `addtag INDEX t/TAG…` e.g.,`addtag 1 t/friends`","lastModifiedDate":"2022-03-30"},{"lineNumber":509,"author":{"gitId":"atmh"},"content":"**DeleteTag** | `deletetag INDEX t/TAG…` e.g.,`deletetag 1 t/friends`","lastModifiedDate":"2022-03-30"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-03-30"},{"lineNumber":511,"author":{"gitId":"tandeshao"},"content":"**Scrub** | `scrub [p/PHONE] [e/EMAIL DOMAIN] [t/TAG]…​` \u003cbr\u003e e.g., `scrub e/@gmail.com`","lastModifiedDate":"2022-03-30"},{"lineNumber":512,"author":{"gitId":"atmh"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-03-30"},{"lineNumber":513,"author":{"gitId":"lovemathboy"},"content":"**View** | `view INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":514,"author":{"gitId":"tandeshao"},"content":"**Find** | `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [m/MEMO] [t/TAG] [c/Days]…​` \u003cbr\u003e e.g., `find n/James Jake`","lastModifiedDate":"2022-03-27"},{"lineNumber":515,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":516,"author":{"gitId":"atmh"},"content":"**CopyEmails**| `copyemails`","lastModifiedDate":"2022-03-30"},{"lineNumber":517,"author":{"gitId":"atmh"},"content":"**Undo** | `undo`","lastModifiedDate":"2022-03-22"},{"lineNumber":518,"author":{"gitId":"atmh"},"content":"**Redo** | `redo`","lastModifiedDate":"2022-03-22"},{"lineNumber":519,"author":{"gitId":"atmh"},"content":"**Recent commands**| Pressing `UP_ARROW_KEY` or `DOWN_ARROW_KEY`","lastModifiedDate":"2022-03-30"},{"lineNumber":520,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":521,"author":{"gitId":"atmh"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-03-28"},{"lineNumber":522,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xpzmichael":3,"atmh":150,"lovemathboy":71,"-":119,"tandeshao":179}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"atmh"},"content":"    content: \"ABπ\";","lastModifiedDate":"2022-02-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"atmh":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"StateAddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"StateAddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" ContactedDate","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Memo","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":8,"-":13,"tandeshao":1}},{"path":"docs/diagrams/EditMemoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"@startuml","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"!include style.puml","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"[-\u003e LogicManager : execute(\"edit 1 m/Avid hiker\")","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"activate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 m/Avid hiker\")","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"create EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"1 m/Avid hiker\")","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"create EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"activate EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"destroy EditCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"LogicManager -\u003e EditCommand : execute(Model)","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"activate EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"EditCommand -\u003e Model : setPerson(Person, Person)","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"activate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"deactivate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(Predicate)","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"activate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"deactivate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"create CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"activate CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"@enduml","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"atmh":75}},{"path":"docs/diagrams/FindPersonPredicate.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"mainframe sd get FindPersonPredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"participant \"predicate:FindPersonPredicate\" as FindPersonPredicate LOGIC_COLOR","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"FindCommandParser -\u003e FindCommandParser : createArgMap(\" n/alice\")","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"create ArgMultimap","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"FindCommandParser -\u003e ArgMultimap","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"activate ArgMultimap","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"ArgMultimap --\u003e FindCommandParser : argMultimap","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"deactivate ArgMultimap","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"FindCommandParser --\u003e FindCommandParser : argMultimap","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"create FindPersonPredicate","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"FindCommandParser -\u003e FindPersonPredicate : FindPersonPredicate(argMultimap)","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"activate FindPersonPredicate","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"FindPersonPredicate --\u003e FindCommandParser : predicate","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":28}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"participant \"command:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"skinparam BoxPadding 10","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"[-\u003e LogicManager : execute(\"find n/alice\")","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/alice\")","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"create FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\" n/alice\")","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"ref over FindCommandParser : get FindPersonPredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"create FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicate)","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"activate FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"FindCommand --\u003e FindCommandParser: command","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"FindCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"LogicManager -\u003e FindCommand : execute(Model)","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"activate FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"FindCommand --\u003e LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tandeshao":73}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"Class StateAddressBook","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"Class ContactedDate","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"Class Memo","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"StateAddressBook .up.|\u003e AddressBook","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"Model .left.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"Model .right.\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"ModelManager -right-\u003e \"1\" StateAddressBook","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"ModelManager -left-\u003e \"1\" UserPrefs","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"StateAddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\" ContactedDate","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"Person *--\u003e \"1\"Memo","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":16,"-":37,"tandeshao":3}},{"path":"docs/diagrams/PersonAttributeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"Name -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"Phone -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"Email -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"Address -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"Memo -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"Tag -up-|\u003e PersonAttribute","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"Person *-up-\u003e \"1\" Name","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"Person *-up-\u003e \"1\" Phone","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"Person *-up-\u003e \"1\" Email","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"Person *-up-\u003e \"1\" Address","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"Person *-up-\u003e \"0..1\" Memo","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tandeshao":20}},{"path":"docs/diagrams/SaveStateActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"if () then ([command modifies data])","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"    :Clean redundant states;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    :Save AddressBook to","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    stateHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":3,"-":12}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title Initial","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State0 as \"__state0:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"State0 -[hidden]right-\u003e State1","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"hide State1","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State0","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":14,"-":9}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"edit 1 n/Bob\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State0 as \"__state0:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State0 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"State0 -[hidden]right-\u003e State1","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"hide State2","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":14,"-":10}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"delete 2\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State0 as \"__state0:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State0 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"State0 -[hidden]right-\u003e State1","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":14,"-":9}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"clear\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State3 as \"__state3:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State2 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"note bottom of State1: state0 deleted","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":15,"-":11}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"undo\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State3 as \"__state3:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State3 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":12,"-":11}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"undo\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State3 as \"__state3:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State2 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State3 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":13,"-":10}},{"path":"docs/diagrams/UndoRedoState6.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"@startuml","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"!include style.puml","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"redo\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State3 as \"__state3:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State3 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"@end","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":23}},{"path":"docs/diagrams/UndoRedoState7.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"@startuml","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"!include style.puml","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"list\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State3 as \"__state3:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State3 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"@end","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":23}},{"path":"docs/diagrams/UndoRedoState8.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"@startuml","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"!include style.puml","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"skinparam ClassFontColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"skinparam ClassBorderColor BLACK_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"skinparam ClassHeaderBackgroundColor ORANGE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"title After \"add n/Tom ...\" command","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"package stateHistory {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    class State1 as \"__state1:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    class State2 as \"__state2:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    class State4 as \"__state4:AddressBook__\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"class State1 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"class State2 WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"State2 -[hidden]right-\u003e State4","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"class Pointer as \"currentStateIndex\" WHITE_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"Pointer -up-\u003e State4","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"note right on link: state3 deleted","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"@end","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":24}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"participant \":StateAddressBook\" as StateAddressBook MODEL_COLOR","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"Model -\u003e StateAddressBook : undo()","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"activate StateAddressBook","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"StateAddressBook -\u003e StateAddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"StateAddressBook --\u003e Model :","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"deactivate StateAddressBook","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":6,"-":47}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"!define BLACK_COLOR #000000","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"!define WHITE_COLOR #FFFFFF","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"!define ORANGE_COLOR #FFEFC4","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"atmh":4,"-":75}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"title: Abπ","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T17-4/tp/branch/master/graph/badge.svg?token\u003dC3O19DLUN8)](https://codecov.io/gh/AY2122S2-CS2103T-T17-4/tp)","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"**Abπ is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"* If you are interested in using Abπ, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"* If you are interested about developing Abπ, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"atmh":6,"-":13}},{"path":"docs/team/atmh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"title: Alvin Tay\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"### Project: AddressBook Level π (Abπ)","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"AddressBook - Level π is a desktop address book application that can quickly store, edit and search for contacts via a single command, perfect for users who prefer typing. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about (update) kLoC.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"* **New Feature** (to update): Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"* **Code contributed** (to update): [RepoSense link]()","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"* **Project management** (to update):","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"* **Enhancements to existing features** (to update):","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"* **Documentation** (to update):","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"* **Community** (to update):","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"  * Setting up the GitHub organisation and team repo","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"  * Maintaining the issue tracker","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"  * Release management","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"atmh":12,"-":29}},{"path":"docs/team/lovemathboy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"title: Huang Xing Chen\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"### Project: AddressBook Level π (Abπ)","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"AddressBook - Level π is a desktop address book application that can quickly store, edit and search for contacts via a single command, perfect for users who prefer typing. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about (update) kLoC.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"* **New Feature** (`To Be Updated`): Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":"  * Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"* **Code contributed** (`To Be Updated`): [RepoSense link]()","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"* **Project management** (`To Be Updated`):","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"* **Enhancements to existing features** (`To Be Updated`):","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"* **Documentation** (`To Be Updated`):","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"* **Community** (`To Be Updated`):","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"  * Maintaining overall code quality.","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lovemathboy":11,"-":29}},{"path":"docs/team/tandeshao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"title: Tan De Shao\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"`To be added soon` tags are added beside the headings to show that the information under the headings are just placeholders and does not accurately represent the project progression.","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"### Project: AddressBook Level π (Abπ)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"AddressBook - Level π is a desktop address book application that can quickly store, edit and search for contacts via a single command, perfect for users who prefer typing. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about (update) kLoC.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.(`to be added soon`)","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"* **Code contributed**: [RepoSense link]() (`to be added soon`)","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"* **Project management**: (`to be added soon`)","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"* **Documentation**: (`to be added soon`)","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"* **Community**: (`to be added soon`)","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":29,"tandeshao":10}},{"path":"docs/team/xpzmichael.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"title: Xu Peizhe\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"`To be added soon` tags are added beside the headings to show that the information under the headings are just placeholders and does not accurately represent the project progression.","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"### Project: AddressBook Level π (Abπ)","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"AddressBook - Level π is a desktop address book application that can quickly store, edit and search for contacts via a single command, perfect for users who prefer typing. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about (update) kLoC.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.(`to be added soon`)","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"* **Code contributed**: [RepoSense link]() (`to be added soon`)","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"* **Project management**: (`to be added soon`)","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"* **Documentation**: (`to be added soon`)","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"* **Community**: (`to be added soon`)","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xpzmichael":10,"-":29}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"Let\u0027s walk you through the implementation of a new command — `memo`.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"`memo INDEX r/REMARK` (e.g., `memo 2 r/Likes baseball`)","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"## Create a new `memo` command","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":" * Changes the memo of an existing person in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"    public static final String COMMAND_WORD \u003d \"memo\";","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"        return new CommandResult(\"Hello from memo\");","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `memo` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"![Output displayed](../images/add-memo/RemarkHello.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"![The relationship between RemarkCommand and Command](../images/add-memo/CommandInterface.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"            + \": Edits the memo of the person identified \"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"            + \"Existing memo will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"    private final String memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"     * @param index of the person in the filtered person list to edit the memo","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"     * @param memo of the person to be updated to","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"    public RemarkCommand(Index index, String memo) {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        requireAllNonNull(index, memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), memo));","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 memo.equals(e.memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"Now let’s move on to writing a parser that will extract the index and memo from the input provided by the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-memo/ParserInterface.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"This appears to be what we need to get a String of the memo. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"atmh"},"content":"    String memo \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"    return new RemarkCommand(index, memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"atmh"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a memo given to a person.","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"atmh"},"content":"## Add a placeholder element for memo to the UI","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"atmh"},"content":"private Label memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"atmh"},"content":"\u003cLabel fx:id\u003d\"memo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$memo\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"atmh"},"content":"![$memo shows up in each entry](../images/add-memo/$Remark.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"atmh"},"content":"    memo.setText(person.getRemark().value);","lastModifiedDate":"2022-03-06"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"atmh"},"content":"![The memo label is bound properly!](../images/add-memo/RemarkBound.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added memo to Person: %1$s\";","lastModifiedDate":"2022-03-06"},{"lineNumber":336,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed memo from Person: %1$s\";","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"atmh"},"content":"                personToEdit.getAddress(), memo, personToEdit.getTags());","lastModifiedDate":"2022-03-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"atmh"},"content":"     * the memo is added to or removed from","lastModifiedDate":"2022-03-06"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"atmh"},"content":"        String message \u003d !memo.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"atmh"},"content":"![Congratulations!](../images/add-memo/RemarkComplete.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"atmh"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a memo works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2022-03-06"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"atmh"},"content":"![Using the context menu to jump to tests](../images/add-memo/ContextMenu.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"atmh"},"content":"![Creating a test for `execute`.](../images/add-memo/CreateTest.png)","lastModifiedDate":"2022-03-06"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"atmh":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"**If you have done the [Add `memo` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `memo`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"atmh":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath(),","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"                userPrefs.getBackupFilePath());","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"atmh":1,"-":181,"tandeshao":2}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * Returns true if any word in {@code sentence1} matches with any word","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     * from {@code sentence2}.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     *      *       containsWordIgnoreCaseForTwoSentence(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     *      *       containsWordIgnoreCaseForTwoSentence(\"ABc def\", \"DEF DEF\") \u003d\u003d true","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     *      *       containsWordIgnoreCaseForTwoSentence(\"ABc def\", \"AB de\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     *      *       \u003c/pre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     * @param sentence1 Cannot be null.","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     * @param sentence2 Cannot be null.","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     * @return Result of the check.","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    public static boolean containsWordIgnoreCaseForTwoSentence(String sentence1, String sentence2) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(sentence1);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(sentence2);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        // Split sentence by white space.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        String[] wordsInPreppedSentence1 \u003d sentence1.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        String[] wordsInPreppedSentence2 \u003d sentence2.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        return Arrays.stream(wordsInPreppedSentence1)","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"                .anyMatch(word -\u003e Arrays.stream(wordsInPreppedSentence2).anyMatch(word::equalsIgnoreCase));","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"tandeshao":25}},{"path":"src/main/java/seedu/address/logic/CommandRemark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":" * Indicates the type of CommandResult object.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":" * HELP for HelpCommand.","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":" * EXIT for ExitCommand.","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":" * HISTORY for PreviousCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":" * UI_IRRELEVANT for anything else.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"public enum CommandRemark {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":"    HELP,","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"    EXIT,","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"    HISTORY,","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    UI_IRRELEVANT","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"xpzmichael":15}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.ReadOnlyProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"    /** Returns the current person on display */","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"    ReadOnlyProperty\u003cPerson\u003e getPersonOnDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"    void addPersonOnDisplayListener(ChangeListener\u003c? super Person\u003e listener);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lovemathboy":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.ReadOnlyProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.CommandList;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"xpzmichael"},"content":"        //If command is executed successfully, record the command.","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(commandText);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"lovemathboy"},"content":"    public ReadOnlyProperty\u003cPerson\u003e getPersonOnDisplay() {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"lovemathboy"},"content":"        return model.getPersonOnDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"lovemathboy"},"content":"    public void addPersonOnDisplayListener(ChangeListener\u003c? super Person\u003e listener) {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"lovemathboy"},"content":"        model.addPersonOnDisplayListener(listener);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xpzmichael":3,"lovemathboy":12,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"            + \"[\" + PREFIX_CONTACTED_DATE + \"CONTACTED DATE] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"            + \"[\" + PREFIX_MEMO + \"MEMO] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"            + PREFIX_CONTACTED_DATE + \"01-01-2022 \"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"            + PREFIX_MEMO + \"Avid free climber \"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This phone number or \"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"            + \"email already exists in the address book\";","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"     * @param person Person to be added.","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     * Executes the add command and returns the result message.","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"     * @param model {@code Model} which the add command should operate on.","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"     * @return feedback message of the add operation result for display.","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"     * @throws CommandException If an error occurs during add command execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"     * Checks if two {@code AddCommand} is equal.","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code AddCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"     * @return If equal true; otherwise false.","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":25,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":" * A command that allows users to append tags to the end of the specified person\u0027s current tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Appends the specified tags identified\"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"            + \"by the index number used in the displayed person set. \"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"            + PREFIX_TAG + \"friend \";","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_APPEND_TAG_SUCCESS \u003d \"Appended tag: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_MISSING_PREFIX \u003d \"At least one \" + PREFIX_TAG + \" must be provided.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"%s is already present in the person.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    private final Index index;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    private final Set\u003cTag\u003e tagsToAppend;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     * Constructs AddTagCommand for appending tags to a person identified by the index number in the displayed person","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     * set.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     * @param index Index position of the person in the set.","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * @param tagsToAppend Set of tags to append to the person\u0027s current tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e tagsToAppend) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        this.tagsToAppend \u003d tagsToAppend;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * Executes the main logic of the AddTagCommand. Appends a set of tags to the back of the current person\u0027s tag","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     * set.","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     * @return Message that should be reflected in the {@link seedu.address.ui.Ui}.","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e personTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e duplicatedTags \u003d findDuplicatedTags(personTags, tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"        if (!duplicatedTags.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TAG, duplicatedTags));","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        return new CommandResult(String.format(MESSAGE_APPEND_TAG_SUCCESS, tagsToAppend));","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"     * Finds tags that are present in the current person\u0027s tag set and the tags to be appended to the person.","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"     * @param personTags Tag set obtained from the current person.","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"     * @param tagsToAppend Set of tags to append to the current person\u0027s tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"     * @return Set of tags that is present in both the current person\u0027s tag set and the tags to be appended.","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    private Set\u003cTag\u003e findDuplicatedTags(Set\u003cTag\u003e personTags, Set\u003cTag\u003e tagsToAppend) {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e duplicatedTags \u003d new HashSet\u003c\u003e(tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"        duplicatedTags.retainAll(personTags); //set intersection","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"        return duplicatedTags;","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"     * Creates a new person with the new tags appended to the end of the person\u0027s tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"     * @param personToEdit The reference person whose attributes are copied into the newly created person. Requires","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"     *                     it to be non-null.","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"     * @param tagsToAppend Set of tags that are appended to the newly created person\u0027s tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"     * @return A new person with the updated tag set.","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"    private Person createEditedPerson(Person personToEdit, Set\u003cTag\u003e tagsToAppend) {","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"        Name personName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"tandeshao"},"content":"        Phone personPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"tandeshao"},"content":"        Email personEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"tandeshao"},"content":"        Address personAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"tandeshao"},"content":"        ContactedDate personContactedDate \u003d personToEdit.getContactedDate();","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"tandeshao"},"content":"        Memo personMemo \u003d personToEdit.getMemo();","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e personTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e updatedTags \u003d createUpdatedTags(personTags, tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"tandeshao"},"content":"        return new Person(personName, personPhone, personEmail, personAddress, personContactedDate, personMemo,","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"tandeshao"},"content":"                updatedTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"     * Creates a new tag set that contains tags from both the given set parameters.","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"     * @param personTags Tags from the specified person.","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"tandeshao"},"content":"     * @param tagsToAppend Tags to append.","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"tandeshao"},"content":"     * @return A new tag set that contains all the tags from both the sets.","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"tandeshao"},"content":"    private Set\u003cTag\u003e createUpdatedTags(Set\u003cTag\u003e personTags, Set\u003cTag\u003e tagsToAppend) {","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e updatedTagSet \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"tandeshao"},"content":"        updatedTagSet.addAll(tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"tandeshao"},"content":"        return updatedTagSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"tandeshao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"tandeshao"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"tandeshao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"tandeshao"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"tandeshao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"tandeshao"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"tandeshao"},"content":"        AddTagCommand command \u003d (AddTagCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"tandeshao"},"content":"        return index.equals(command.index)","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 tagsToAppend.equals(command.tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tandeshao":157}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all entries from the address book.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":5,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":" * Records the recent user inputs.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":" * Only the latest MAX_RECORD_NUMBER inputs will be recorded.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"public class CommandList {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"    private static CommandList commandList \u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    private static final int MAX_RECORD_NUMBER \u003d 20;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"    private int pointer \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    private final ArrayList\u003cString\u003e inputHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    private CommandList() {}","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"     * Records the latest user input.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"     * @param lastCommand the last user input.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"    public void record(String lastCommand) {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"        if (lastCommand.equalsIgnoreCase(PreviousCommand.COMMAND_WORD)","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"                || lastCommand.equalsIgnoreCase(NextCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"        inputHistory.add(lastCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"        if (inputHistory.size() \u003e MAX_RECORD_NUMBER) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"            clearOldCommands();","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"        pointer++;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"    /** Gets the history pointed by pointer. */","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"    public String getCurrentCommand() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"        return inputHistory.get(pointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"    private void clearOldCommands() {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"xpzmichael"},"content":"        inputHistory.remove(0);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"xpzmichael"},"content":"    public static CommandList getList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"xpzmichael"},"content":"        if (commandList \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"xpzmichael"},"content":"            commandList \u003d new CommandList();","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"xpzmichael"},"content":"        return commandList;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"xpzmichael"},"content":"    /** Increase the pointer value by 1. */","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"xpzmichael"},"content":"    public void increasePointer() throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"xpzmichael"},"content":"        if (pointer \u003e\u003d inputHistory.size() - 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"xpzmichael"},"content":"            throw new CommandException(NextCommand.MESSAGE_ON_NO_NEXT);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"xpzmichael"},"content":"        pointer++;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"xpzmichael"},"content":"    /** Decreases the pointer value by 1. */","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"xpzmichael"},"content":"    public void decreasePointer() throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"xpzmichael"},"content":"        if (pointer \u003c\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"xpzmichael"},"content":"            throw new CommandException(PreviousCommand.MESSAGE_ON_NO_PREVIOUS);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"xpzmichael"},"content":"        pointer--;","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"xpzmichael"},"content":"    /** Reset the pointer to point to the place for next command. */","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"xpzmichael"},"content":"    public void resetPointer() {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"xpzmichael"},"content":"        pointer \u003d inputHistory.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"xpzmichael"},"content":"    /** Clears all history in CommandList. Only used in test currently. */","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"xpzmichael"},"content":"    public void clearAllCommands() {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"xpzmichael"},"content":"        pointer \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"xpzmichael"},"content":"        inputHistory.clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"xpzmichael"},"content":"    /** return the pointer value. This method is used only in test. */","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"xpzmichael"},"content":"    public int getPointer() {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"xpzmichael"},"content":"        return pointer;","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"xpzmichael":80}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"    private final CommandRemark commandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"    public CommandResult(String feedbackToUser, CommandRemark commandRemark) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"        this.commandRemark \u003d commandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"        if (commandRemark !\u003d CommandRemark.HISTORY) {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"            CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"        this(feedbackToUser, CommandRemark.UI_IRRELEVANT);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"xpzmichael"},"content":"        return commandRemark \u003d\u003d CommandRemark.HELP;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"xpzmichael"},"content":"        return commandRemark \u003d\u003d CommandRemark.EXIT;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"xpzmichael"},"content":"    public boolean isHistory() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"xpzmichael"},"content":"        return commandRemark \u003d\u003d CommandRemark.HISTORY;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"xpzmichael"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"xpzmichael"},"content":"     * Gets what need to be filled in.","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"xpzmichael"},"content":"     * @return text.","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"xpzmichael"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"xpzmichael"},"content":"    public String getNewCommandTextField() {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"xpzmichael"},"content":"        String text \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"xpzmichael"},"content":"        if (isHistory()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"xpzmichael"},"content":"            text \u003d CommandList.getList().getCurrentCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"xpzmichael"},"content":"        return text;","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"xpzmichael"},"content":"                \u0026\u0026 commandRemark \u003d\u003d ((CommandResult) other).commandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"xpzmichael"},"content":"        return Objects.hash(feedbackToUser, commandRemark);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":28,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/CopyEmailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lovemathboy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lovemathboy"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":" * Copies the emails of the currently displayed list of people to clipboard.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lovemathboy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"public class CopyEmailsCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"    public static final String COMMAND_WORD \u003d \"copyemails\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"    public static final String EMAIL_LIST_SEPARATOR \u003d \"; \";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lovemathboy"},"content":"    public static final String MESSAGE_EMPTY_EMAIL_LIST \u003d \"There are no emails to copy!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lovemathboy"},"content":"    public static final String MESSAGE_COPY_EMAILS_FAILURE \u003d \"Unable to copy to clipboard.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"    public static final String MESSAGE_COPY_EMAILS_SUCCESS \u003d \"Successfully copied \\\"%s\\\" to clipboard!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"            + \": Copies a comma-separated list of all displayed emails to clipboard.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"lovemathboy"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(CopyEmailsCommand.class.getName());","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"        LOGGER.log(Level.INFO, \"Executing CopyEmailsCommand#execute(Model)\");","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"        String emailString \u003d getAllEmails(lastShownList);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"        if (emailString.length() \u003d\u003d 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"            LOGGER.log(Level.INFO, \"Empty email list\");","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"            throw new CommandException(MESSAGE_EMPTY_EMAIL_LIST);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"            StringSelection stringSelection \u003d new StringSelection(emailString);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"            Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"            clipboard.setContents(stringSelection, null);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"lovemathboy"},"content":"            String message \u003d String.format(MESSAGE_COPY_EMAILS_SUCCESS, emailString);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"lovemathboy"},"content":"            LOGGER.log(Level.INFO, \"CopyEmailsCommand#execute(Model) success\");","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"            return new CommandResult(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lovemathboy"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lovemathboy"},"content":"            LOGGER.log(Level.INFO, \"Failed to copy emails to clipboard\");","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"lovemathboy"},"content":"            throw new CommandException(MESSAGE_COPY_EMAILS_FAILURE);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lovemathboy"},"content":"     * Extracts the emails from a list of {@link seedu.address.model.person.Person Persons}","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lovemathboy"},"content":"     * @param lastShownList A list of {@link seedu.address.model.person.Person Person} objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lovemathboy"},"content":"     * @return A {@code EMAIL_LIST_SEPARATOR}-separated list of emails.","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lovemathboy"},"content":"    private String getAllEmails(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lovemathboy"},"content":"        StringBuilder emailString \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lovemathboy"},"content":"        for (Person person: lastShownList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lovemathboy"},"content":"            if (emailString.length() !\u003d 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lovemathboy"},"content":"                emailString.append(EMAIL_LIST_SEPARATOR);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lovemathboy"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lovemathboy"},"content":"            emailString.append(person.getEmail().toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lovemathboy"},"content":"        return emailString.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"lovemathboy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"lovemathboy"},"content":"        return other instanceof CopyEmailsCommand; // All CopyEmailsCommand are identical","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"atmh":4,"lovemathboy":73}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":" * Deletes a person identified using its displayed index from the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":1,"lovemathboy":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":" * Deletes tags of an existing person in the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    public static final String COMMAND_WORD \u003d \"deletetag\";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the specified tags of the person identified \"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"            + PREFIX_TAG + \"friend\";","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted tag: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_MISSING_PREFIX \u003d \"At least one \" + PREFIX_TAG + \" must be provided.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_MISSING_TAG \u003d \"%s does not exist in the specified person.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    private final Index index;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    private final Set\u003cTag\u003e tagsToDelete;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"     * Creates a DeleteTagCommand to delete tags of the person at the specified index with","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"     * tagsToDelete.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"     * @param index Index of the person in the filtered person list to edit.","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"     * @param tagsToDelete Tags to delete.","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"    public DeleteTagCommand(Index index, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        requireNonNull(tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        this.tagsToDelete \u003d tagsToDelete;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"     * Executes the delete tag command and returns the result message.","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"     * @param model {@code Model} which the delete tag command should operate on.","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"     * @return Feedback message of the delete tag operation result for display.","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     * @throws CommandException If an error occurs during delete tag command execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e personTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e missingTags \u003d findMissingTags(personTags, tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        if (!missingTags.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"            throw new CommandException(String.format(MESSAGE_MISSING_TAG, missingTags));","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d createEditedPersonWithTagsDeleted(personToEdit, tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, tagsToDelete));","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"     * Finds missing tags that are to be deleted but does not exist in personTags.","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"     * @param personTags Tags that belongs to a person.","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"     * @param tagsToDelete Tags to delete.","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"     * @return A set of tags that contains missing tags that are to be deleted but does not exist in personTags.","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    private Set\u003cTag\u003e findMissingTags(Set\u003cTag\u003e personTags, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e missingTags \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"        missingTags.removeAll(personTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"        return missingTags;","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"     * Creates an edited {@code Person} with certain tags deleted.","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"     * @param personToEdit {@code Person} to be edited.","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"     * @param tagsToDelete Tags to delete.","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"     * @return Edited {@code Person} with tags deleted.","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    private Person createEditedPersonWithTagsDeleted(Person personToEdit, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        requireNonNull(tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        Name personName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        Phone personPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"        Email personEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"        Address personAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"        ContactedDate personContactedDate \u003d personToEdit.getContactedDate();","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"        Memo personMemo \u003d personToEdit.getMemo();","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e personTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e updatedTags \u003d createUpdatedTagsWithTagsDeleted(personTags, tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"        return new Person(personName, personPhone, personEmail, personAddress, personContactedDate, personMemo,","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"                updatedTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"     * Creates a set of tag with certain tags deleted.","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"     * @param personTags Tags belonging to a {@code Person}.","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"     * @param tagsToDelete Tags to delete.","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"     * @return A set of tag with certain tags deleted.","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"    private Set\u003cTag\u003e createUpdatedTagsWithTagsDeleted(Set\u003cTag\u003e personTags, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e updatedTagSet \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"        updatedTagSet.removeAll(tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"        return updatedTagSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code DeleteTagCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code DeleteTagCommand} object.","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"     * @return If equal true; otherwise false.","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"        // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand dt \u003d (DeleteTagCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"        return index.equals(dt.index)","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 tagsToDelete.equals(dt.tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"atmh":162,"lovemathboy":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"            + \"[\" + PREFIX_CONTACTED_DATE + \"CONTACTED DATE] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"            + \"[\" + PREFIX_MEMO + \"MEMO] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This phone number or \"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"            + \"email already exists in the address book\";","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     * Creates an EditCommand to edit the person at the specified index with editPersonDescriptor.","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"     * @param index Index of the person in the filtered person list to edit.","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"     * @param editPersonDescriptor Details to edit the person with.","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"     * Executes the edit command and returns the result message.","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"     * @param model {@code Model} which the edit command should operate on.","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"     * @return Feedback message of the edit operation result for display.","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"     * @throws CommandException If an error occurs during edit command execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        if (model.hasPersonExcept(editedPerson, personToEdit)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}.","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"        ContactedDate updatedContactedDate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"                editPersonDescriptor.getContactedDate().orElse(personToEdit.getContactedDate());","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"        Memo updatedMemo \u003d editPersonDescriptor.getMemo().orElse(personToEdit.getMemo());","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"                updatedContactedDate, updatedMemo, updatedTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code EditCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code EditCommand} object.","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"     * @return If equal true; otherwise false.","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"        private ContactedDate contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"        private Memo memo;","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"            setContactedDate(toCopy.contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"            setMemo(toCopy.memo);","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, contactedDate, memo, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"        public void setContactedDate(ContactedDate contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"            this.contactedDate \u003d contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"atmh"},"content":"        public Optional\u003cContactedDate\u003e getContactedDate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"atmh"},"content":"            return Optional.ofNullable(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"atmh"},"content":"        public void setMemo(Memo memo) {","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"atmh"},"content":"            this.memo \u003d memo;","lastModifiedDate":"2022-03-12"},{"lineNumber":229,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":231,"author":{"gitId":"atmh"},"content":"        public Optional\u003cMemo\u003e getMemo() {","lastModifiedDate":"2022-03-12"},{"lineNumber":232,"author":{"gitId":"atmh"},"content":"            return Optional.ofNullable(memo);","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"atmh"},"content":"        /**","lastModifiedDate":"2022-03-18"},{"lineNumber":253,"author":{"gitId":"atmh"},"content":"         * Checks if two {@code EditCommand} is equal.","lastModifiedDate":"2022-03-18"},{"lineNumber":254,"author":{"gitId":"atmh"},"content":"         *","lastModifiedDate":"2022-03-18"},{"lineNumber":255,"author":{"gitId":"atmh"},"content":"         * @param other the other {@code EditCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":256,"author":{"gitId":"atmh"},"content":"         * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-18"},{"lineNumber":257,"author":{"gitId":"atmh"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"atmh"},"content":"                    \u0026\u0026 getContactedDate().equals(e.getContactedDate())","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"atmh"},"content":"                    \u0026\u0026 getMemo().equals(e.getMemo())","lastModifiedDate":"2022-03-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"atmh":62,"lovemathboy":1,"-":219}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandRemark.EXIT);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xpzmichael":2,"atmh":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * Finds and lists all persons in address book whose attribute","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" * contains any of the tokenized argument. Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"            + \": Finds all persons whose contact details matches any of \"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"            + \"Parameters: \\n \"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"            + \"KEYWORD\" + \"n/ [NAME_PARAMETER]...\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"            + \"p/ [PHONE_PARAMETER]\" + \"...\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"            + \"e/ [EMAIL_PARAMETER]...\\n\" + \"a/ [ADDRESS_PARAMETER]...\\n\" + \"t/ [TAG_PARAMETER]...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"            + \"m/ [MEMO_PARAMETER]...\\n\" + \"Example: \" + COMMAND_WORD + \" n/ alice bob charlie\" + \" e/ alice@gmail.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    public static final String NO_PREFIX_MESSAGE \u003d \"At least one field to find must be provided.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    private final FindPersonPredicate predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public FindCommand(FindPersonPredicate predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * Executes the main logic of the FindCommand.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * Filters for {@link seedu.address.model.person.Person Persons} that meets the","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * {@link #predicate} condition.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * @return message that should be reflected in the {@link seedu.address.ui.Ui}.","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code FindCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code FindCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"atmh":2,"lovemathboy":1,"-":33,"tandeshao":24}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, CommandRemark.HELP);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a list of all persons in the address book.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":3,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/NextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":" * Invokes the next command that was typed in by user and auto-fill in the text box.","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"public class NextCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    public static final String COMMAND_WORD \u003d \"next\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_ON_HISTORY_SUCCESS \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_ON_NO_NEXT \u003d \"No next command available!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"            + \": Invoke the next command \\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"    public NextCommand() {}","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().increasePointer();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"        return new CommandResult(MESSAGE_ON_HISTORY_SUCCESS, CommandRemark.HISTORY);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two NextCommand methods are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"     * @param other The other NextCommand object.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"     * @return Result of the check.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"        return other instanceof NextCommand; //Any two NextCommand should be identical.","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"xpzmichael":39,"atmh":1,"lovemathboy":1}},{"path":"src/main/java/seedu/address/logic/commands/PreviousCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":" * Invokes the previous command that was typed in by user and auto-fill in the text box.","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"public class PreviousCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    public static final String COMMAND_WORD \u003d \"previous\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_ON_HISTORY_SUCCESS \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_ON_NO_PREVIOUS \u003d \"No previous command available!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"            + \": Invoke previously used command \"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"    public PreviousCommand() {}","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().decreasePointer();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"        return new CommandResult(MESSAGE_ON_HISTORY_SUCCESS, CommandRemark.HISTORY);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two PreviousCommand methods are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"     * @param other The other PreviousCommand object.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"     * @return Result of the check.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"        return other instanceof PreviousCommand; //Any two HistoryCommands should be identical.","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"xpzmichael":40,"lovemathboy":1}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import seedu.address.model.StateAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" * Restores the {@code Model}\u0027s address book to its previous undid state.","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"            + \": Restores the address book to its previous undid state. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"            + \"(Up to \" + StateAddressBook.UNDO_REDO_CAPACITY + \" redo)\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_REDO_SUCCESS \u003d \"Redo success!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_REDO_EMPTY \u003d \"There is nothing to redo (Max \"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"            + StateAddressBook.UNDO_REDO_CAPACITY + \" redoable actions)\";","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(RedoCommand.class.getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"     * Executes the redo command and returns the result message.","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"     * Restores the {@code Model}\u0027s address book to its previous undid state.","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"     * @param model {@code Model} which the redo command should operate on.","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"     * @return feedback message of the redo operation result for display.","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"     * @throws CommandException If an error occurs during redo command execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing RedoCommand#execute(Model)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Model\u0027s stateAddressBook is not redoable\");","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"            throw new CommandException(MESSAGE_REDO_EMPTY);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        model.redoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"RedoCommand#execute(Model) success\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        return new CommandResult(MESSAGE_REDO_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code RedoCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code RedoCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        return other instanceof RedoCommand; // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"xpzmichael":1,"atmh":63,"lovemathboy":1}},{"path":"src/main/java/seedu/address/logic/commands/ScrubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.ScrubPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":" * Command that encapsulates the logic of removing contacts that matches the conditions specified by the given","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":" * predicate.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"public class ScrubCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    public static final String COMMAND_WORD \u003d \"scrub\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"            + \": Deletes the person if that person contains the phone number/tag/email(domain) specified by the \"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"            + \"user.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"            + \"Multiple phone numbers are separated by a whitespace. \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"            + \"Parameters: [p/Phone Numbers] [t/tags] [e/Email domain]\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"            + \"Examples: \" + COMMAND_WORD + \" p/90400201 90400202 90400203\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_SCRUB_SUCCESS \u003d \"Successfully scrubbed %s person\";","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_WRONG_DOMAIN_FORMAT \u003d \"Email scrubbing allows only domain name as a parameter.\"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"            + \"\\nFor example: @domain or @domain.com\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    public static final String NO_VALID_PREFIX \u003d \"At least 1 valid prefix must be provided!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    private final ScrubPersonPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    public ScrubCommand(ScrubPersonPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * Executes the ScrubCommand and returns the result message.","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     * @return Result of the execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * @throws CommandException If an error occurs during the execution of the ScrubCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        int numberOfDeletedPerson \u003d removePersonThatMatchesDescription(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS); // To show all currently available person","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        return new CommandResult(String.format(MESSAGE_SCRUB_SUCCESS, numberOfDeletedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"     * Removes any person from the address book that matches the description described by the {@link #predicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"     * @param model {@code Model} which the deletion should happen in.","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"     * @return Number of person that has been deleted from the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"    private int removePersonThatMatchesDescription(Model model) {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        ObservableList\u003cPerson\u003e personsToDelete \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        int numberOfDeletedPerson \u003d personsToDelete.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        model.deleteAllPerson(personsToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        return numberOfDeletedPerson;","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     * Checks if two ScrubCommand are the same.","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @param other ScrubCommand to be checked against.","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     * @return True if both are the same ScrubCommand, false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"                || (other instanceof ScrubCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 predicate.equals(((ScrubCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":79}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import seedu.address.model.StateAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" * Restores the {@code Model}\u0027s address book to its previous state.","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"            + \": Restores the address book to its previous state. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"            + \"(Up to \" + StateAddressBook.UNDO_REDO_CAPACITY + \" undo)\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Undo success!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_UNDO_EMPTY \u003d \"There is nothing to undo (Max \"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"            + StateAddressBook.UNDO_REDO_CAPACITY + \" undoable actions)\";","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(UndoCommand.class.getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"     * Executes the undo command and returns the result message.","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"     * Restores the {@code Model}\u0027s address book to its previous state.","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"     * @param model {@code Model} which the undo command should operate on.","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"     * @return feedback message of the undo operation result for display.","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"     * @throws CommandException If an error occurs during undo command execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing UndoCommand#execute(Model)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Model\u0027s stateAddressBook is not undoable\");","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"            throw new CommandException(MESSAGE_UNDO_EMPTY);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"UndoCommand#execute(Model) success\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code UndoCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code UndoCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        return other instanceof UndoCommand; // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"atmh":64,"lovemathboy":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lovemathboy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":" * Displays the details of a person identified using its displayed index from the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"lovemathboy"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"            + \": Displays detailed information of the person identified by \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lovemathboy"},"content":"            + \"the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lovemathboy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lovemathboy"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewed Person: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"lovemathboy"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"        model.updatePersonOnDisplay(personToView);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"     * Checks if two {@code ViewCommand} are equal.","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"lovemathboy"},"content":"     * @param other the other {@code ViewCommand} object.","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"lovemathboy"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"lovemathboy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"lovemathboy"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"lovemathboy"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"lovemathboy":60}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":" * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xpzmichael":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddCommandParser.class.getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing AddCommandParser#parse(String)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"                ArgumentTokenizer.tokenize(args, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Invalid command format\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        ContactedDate contactedDate \u003d ContactedDate.EMPTY_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        if (argMultimap.getValue(PREFIX_CONTACTED_DATE).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"            contactedDate \u003d ParserUtil.parseContactedDate(argMultimap.getValue(PREFIX_CONTACTED_DATE).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"        Memo memo \u003d Memo.EMPTY_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"        if (argMultimap.getValue(PREFIX_MEMO).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"            memo \u003d ParserUtil.parseMemo(argMultimap.getValue(PREFIX_MEMO).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        Person person \u003d new Person(name, phone, email, address, contactedDate, memo, tagList);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"AddCommandParser#parse(String) success\");","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"atmh":25,"-":58,"tandeshao":2}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" * Parses input arguments and creates a new AddTagCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddTagCommandParser.class.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand and","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     * returns an AddTagCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        LOGGER.log(Level.INFO, \"Executing AddTagCommandParser#parse(String)\");","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        Index index;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Invalid command format\");","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"PREFIX_TAG not specified\");","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(AddTagCommand.MESSAGE_MISSING_PREFIX);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        Set\u003cTag\u003e tagsToAppend \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        LOGGER.log(Level.INFO, \"AddTagCommandParser#parse(String) success\");","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        return new AddTagCommand(index, tagsToAppend);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tandeshao":54}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.commands.CopyEmailsCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.NextCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.PreviousCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.ScrubCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddressBookParser.class.getName());","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing AddressBookParser#parseCommand(String)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Invalid command format\");","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to AddCommandParser\");","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to EditCommandParser\");","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to DeleteCommandParser\");","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        case ScrubCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Parsed to ScrubCommandParser\");","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"            return new ScrubCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to FindCommandParser\");","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Parsed to ClearCommand\");","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to ListCommand\");","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to ExitCommand\");","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to HelpCommand\");","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":103,"author":{"gitId":"lovemathboy"},"content":"        case CopyEmailsCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, CopyEmailsCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to CopyEmailsCommand\");","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"lovemathboy"},"content":"            return new CopyEmailsCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"xpzmichael"},"content":"        case PreviousCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, PreviousCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"xpzmichael"},"content":"            LOGGER.log(Level.INFO, \"Parsed to PreviousCommand\");","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"xpzmichael"},"content":"            return new PreviousCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"xpzmichael"},"content":"        case NextCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, NextCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"xpzmichael"},"content":"            LOGGER.log(Level.INFO, \"Parsed to NextCommand\");","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"xpzmichael"},"content":"            return new NextCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, UndoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to UndoCommand\");","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"            requireEmpty(arguments, RedoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to RedoCommand\");","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Parsed to AddTagCommand\");","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"lovemathboy"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"lovemathboy"},"content":"            LOGGER.log(Level.INFO, \"Parsed to ViewCommand\");","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"lovemathboy"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Parsed to DeleteTagCommand\");","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Unknown command\");","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"     * Checks if the given argument is empty, otherwise throws ParseException.","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"     * @param arguments Arguments to be checked.","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"     * @param messageUsage Message usage.","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If arguments is not empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"    private void requireEmpty(String arguments, String messageUsage) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, messageUsage));","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":10,"atmh":53,"lovemathboy":9,"-":74,"tandeshao":13}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     **/","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * Returns the list of prefixes in the {@link #argMultimap}.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     * @return Prefixes that are in the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    public List\u003cPrefix\u003e getAllAvailablePrefix() {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        Set\u003cPrefix\u003e setOfKeys \u003d argMultimap.keySet();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        setOfKeys.remove(new Prefix(\"\")); //removes preamble","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        return new ArrayList\u003c\u003e(setOfKeys);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * Checks if there is an argument for the specified prefix.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     * @param prefix Prefix to be checked against.","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     * @return True if there is an argument for that prefix, false otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"    public boolean contains(Prefix prefix) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"        return argMultimap.containsKey(prefix);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * Checks if {@link #argMultimap} is empty.","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @return true if {@link #argMultimap} is empty. False otherwise.","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        return argMultimap.isEmpty();","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"     * Checks if {@link #argMultimap} contains no valid prefix.","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"     * @return True if no valid prefix is in the argument map. False otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"    public boolean hasNoValidPrefix() {","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"        return Arrays.stream(ARRAY_OF_PREFIX).noneMatch(argMultimap::containsKey);","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"                || (other instanceof ArgumentMultimap // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 argMultimap.equals(((ArgumentMultimap) other).argMultimap)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"        return argMultimap.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"tandeshao":58}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"    public static final Prefix PREFIX_CONTACTED_DATE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"    public static final Prefix PREFIX_MEMO \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    /** List containing prefix definitions */","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    public static final Prefix[] ARRAY_OF_PREFIX \u003d new Prefix[]{PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_CONTACTED_DATE, PREFIX_MEMO, PREFIX_TAG};","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"atmh":3,"-":15,"tandeshao":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"atmh":1,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":" * Parses input arguments and creates a new DeleteTagCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DeleteTagCommandParser.class.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTagCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"     * and returns an DeleteTagCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing DeleteTagCommandParser#parse(String)\");","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        Index index;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Invalid command format\");","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"PREFIX_TAG not specified\");","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"            throw new ParseException(DeleteTagCommand.MESSAGE_MISSING_PREFIX);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"DeleteTagCommandParser#parse(String) success\");","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        return new DeleteTagCommand(index, tagsToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"atmh":55}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(EditCommandParser.class.getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"Executing EditCommandParser#parse(String)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"                ArgumentTokenizer.tokenize(args, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Invalid command format\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"        if (argMultimap.getValue(PREFIX_CONTACTED_DATE).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"            editPersonDescriptor.setContactedDate(ParserUtil","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"                    .parseContactedDate(argMultimap.getValue(PREFIX_CONTACTED_DATE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"        if (argMultimap.getValue(PREFIX_MEMO).isPresent()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"            editPersonDescriptor.setMemo(ParserUtil.parseMemo(argMultimap.getValue(PREFIX_MEMO).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"            LOGGER.log(Level.INFO, \"Message not edited\");","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        LOGGER.log(Level.INFO, \"EditCommandParser#parse(String) success\");","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"atmh":20,"-":79,"tandeshao":2}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.commands.FindCommand.NO_PREFIX_MESSAGE;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    public static final String MESSAGE_INCORRECT_FORMAT \u003d \"Only non-negative integer argument is allowed \"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"            + \"for ContactedDate. (Non-negative value is within the range of 0 to 2147483647)\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FindCommandParser.class.getName());","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     * Parses the given {@code String} of arguments into the FindCommand. Trims off all","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     * leading and trailing white space and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        LOGGER.log(Level.INFO, \"Parsing user input\");","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        String processedInput \u003d processInput(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap argMultimap \u003d createArgMap(processedInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        if (argMultimap.contains(PREFIX_CONTACTED_DATE)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"            checkValidContacted(argMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d new FindPersonPredicate(argMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        return new FindCommand(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     * Cleans up user input and make it appropriate to be parsed into an ArgumentMultimap object.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     * @param args Unmodified user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     * @return Valid input string that can be used for the ArgumentMultimap object.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException Thrown when the user argument is empty.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    private String processInput(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        // Removes trailing whitespace from the user input","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        String trimmedArgs \u003d args.stripTrailing();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        // Regex to replace 2 or more consecutive whitespaces with a single whitespace between words","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        String modifiedString \u003d trimmedArgs.replaceAll(\"\\\\s{2,}\", \" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        if (modifiedString.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Input is empty\");","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        return modifiedString;","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     * Parses the given user argument and check if there is any valid prefix.","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     * If no valid prefix is found, a parse exception is thrown. Else, a new ArgumentMultimap is created.","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     * @param modifiedString user input that has its trailing and leading whitespaces removed.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     * @return ArgumentMultimap that stores the description to search a person by.","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException if there are no valid prefix in the user input.","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"    private ArgumentMultimap createArgMap(String modifiedString) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(modifiedString, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        if (argMultimap.hasNoValidPrefix()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Input has no valid prefix\");","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(NO_PREFIX_MESSAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        return argMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"     * Checks if a valid ContactedDate argument is given for the FindCommand. Only non-negative integer values are","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"     * allowed as argument.Non-negative value is within the range of 0 to 2147483647. If the ContactedDate argument is","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"     * empty, it would be of the form \" c/\" and that is a valid user argument for the ContactedDate prefix. See","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"     * ContactedDateMatchPredicate for more details.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * @param argMultimap Stores description to search a person by.","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException Thrown when an invalid ContactedDate argument is received by the FindCommandParser.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"    private void checkValidContacted(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        String contactedDateArg \u003d argMultimap.getValue(PREFIX_CONTACTED_DATE).orElse(\"\");","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"        // If contactedDateArg is empty, it is a valid argument.","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"        if (!contactedDateArg.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"            try {","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"                int parsedIntArg \u003d Integer.parseInt(contactedDateArg);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"                if (parsedIntArg \u003c 0) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"                    throw new ParseException(MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"            } catch (NumberFormatException formatException) {","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"                throw new ParseException(MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"atmh":1,"-":24,"tandeshao":75}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code name} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code phone} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code address} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code email} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"     * Parses a {@code String contactedDate} into a {@code ContactedDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code contactedDate} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"    public static ContactedDate parseContactedDate(String contactedDate) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"        requireNonNull(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        String trimmedContactedDate \u003d contactedDate.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        if (!ContactedDate.isValidContactedDate(trimmedContactedDate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"            throw new ParseException(ContactedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        if (contactedDate.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"            return ContactedDate.EMPTY_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        return new ContactedDate(trimmedContactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"     * Parses a {@code String memo} into an {@code Memo}.","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code memo} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"    public static Memo parseMemo(String memo) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        requireNonNull(memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"        String trimmedMemo \u003d memo.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"        if (!Memo.isValidMemo(trimmedMemo)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"            throw new ParseException(Memo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"        if (trimmedMemo.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"            return Memo.EMPTY_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"        return new Memo(trimmedMemo);","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"     * @throws ParseException If the given {@code tag} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"atmh":44,"-":118,"tandeshao":1}},{"path":"src/main/java/seedu/address/logic/parser/ScrubCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.commands.ScrubCommand.NO_VALID_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.ScrubCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.ScrubPersonPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":" * Parser for the {@link ScrubCommand} class. Ensures that arguments that","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":" * are passed in the ScrubCommand is in correct format.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"public class ScrubCommandParser implements Parser\u003cScrubCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ScrubCommandParser.class.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * Parses the given {@code String} of arguments into the ScrubCommand. Trims off all","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * leading and trailing white space and returns a ScrubCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    public ScrubCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        LOGGER.log(Level.INFO, \"Parsing user input\");","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        String modifiedArguments \u003d processArguments(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(modifiedArguments, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        if (argumentMultimap.hasNoValidPrefix()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Input has no valid prefix\");","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(NO_VALID_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        if (argumentMultimap.contains(PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"            checkCorrectEmailFormat(argumentMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate predicate \u003d new ScrubPersonPredicate(argumentMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        return new ScrubCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"     * Process arguments to ensure they are in the right format for ScrubCommand. Some checks that","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"     * include finding if valid prefix (phone, email, tags) are present in the argument","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"     * and invalid prefix (address, memo, name) are not present in the argument. Email processing","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"     * is also done here where the email argument is checked if it follows the correct format (only domain name","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     * allowed as argument).","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * @param args User input that is processed.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     * @return Processed string that is ready to be parsed into ScrubCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException Thrown when the string does not follow a valid format.","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    private String processArguments(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        // Removes trailing whitespace","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"        String trimmedArgs \u003d args.stripTrailing();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"        // Regex to replace 2 or more consecutive whitespaces with a single whitespace between words","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        String processedArgs \u003d trimmedArgs.replaceAll(\"\\\\s{2,}\", \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        boolean containsValidPrefix \u003d containsPrefix(processedArgs, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        boolean containsInvalidPrefix \u003d containsPrefix(processedArgs, PREFIX_ADDRESS, PREFIX_MEMO, PREFIX_NAME);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        if (containsInvalidPrefix || !containsValidPrefix || processedArgs.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"            LOGGER.log(Level.INFO, \"Input is invalid\");","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScrubCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        return processedArgs;","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"     * Helper method for {@link #processArguments(String)} to check if the given string argument contains any of the","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"     * prefixes.","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"     * @param args String argument to be checked.","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * @param prefixes Array of prefixes that are checked against.","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @return true if any prefix in prefixes is within the args, false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"    private boolean containsPrefix(String args, Prefix... prefixes) {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        return Arrays.stream(prefixes).anyMatch(prefix -\u003e args.contains(prefix.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"    private void parseDomain(String arg) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"        // regex that takes everything after @","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"        String regexForDomainName \u003d \"(@)(.*)\";","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"        Pattern pattern \u003d Pattern.compile(regexForDomainName);","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"        Matcher matcher \u003d pattern.matcher(arg);","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"        boolean argMatches \u003d matcher.matches();","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"        if (!argMatches) {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"            throw new ParseException(ScrubCommand.MESSAGE_WRONG_DOMAIN_FORMAT);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"     * Checks if the email description provided by the user is in a correct format. Email argument in the scrub command","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"     * has to only contain the domain name, and it has to start with \"@\". Note that there can be multiple emails in a","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"     * single scrub query. E.g. \"scrub e/ @mail.com @gmail.com\".","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"     * @param argMultimap Email description to be checked.","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"     * @throws ParseException Thrown when the email description is not in a valid format.","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"    private void checkCorrectEmailFormat(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"        List\u003cString\u003e emailArgs \u003d argMultimap.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"        for (String emailArg : emailArgs) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"            parseDomain(emailArg);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tandeshao":115}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lovemathboy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ScrubCommandParser.class.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lovemathboy"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"        LOGGER.log(Level.INFO, \"Parsing user input\");","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"lovemathboy"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lovemathboy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"lovemathboy"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"lovemathboy"},"content":"            LOGGER.log(Level.INFO, \"Input not valid\");","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"lovemathboy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"lovemathboy":35}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book,","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"     * excluding {@code except}.","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"    public boolean hasPersonExcept(Person person, Person except) {","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"        requireNonNull(except);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"        return persons.containsExcept(person, except);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"     * Removes all person from the {@code AddressBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"     * @param personsToRemove List of person to remove from the {@code AddressBook}","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"    public void removePersons(Person... personsToRemove) {","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"        persons.removeAll(personsToRemove);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"atmh":12,"-":118,"tandeshao":9}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.ReadOnlyProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book,","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     * excluding {@code except}.","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"    boolean hasPersonExcept(Person person, Person except);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"lovemathboy"},"content":"     * Updates the current {@code personOnDisplay} to {@code person}.","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"lovemathboy"},"content":"     * @param person The {@code Person} object to update {@code personOnDisplay} with.","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"lovemathboy"},"content":"    void updatePersonOnDisplay(Person person);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"lovemathboy"},"content":"     * Returns a read only copy of the Person object on display.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"lovemathboy"},"content":"     * @return a read only copy of the Person object on display.","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"lovemathboy"},"content":"    ReadOnlyProperty\u003cPerson\u003e getPersonOnDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"lovemathboy"},"content":"     * Adds a listener for when the personOnDisplay changes.","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"lovemathboy"},"content":"     * @param listener ChangeListener that reacts to the Person object changing.","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"lovemathboy"},"content":"    void addPersonOnDisplayListener(ChangeListener\u003c? super Person\u003e listener);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"     * Restores address book to its previous state.","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    void undoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"     * Restores address book to its previous undid state.","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"    void redoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"     * Returns true if address book is undoable; otherwise returns false.","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"     * @return true if undoable; false otherwise.","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"     * Returns true if address book is redoable; otherwise returns false.","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"     * @return true if redoable; false otherwise.","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"     * Saves the current address book state.","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"    void saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"tandeshao"},"content":"     * Deletes the list of person from model.","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tandeshao"},"content":"     * @param persons List of person to delete.","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"tandeshao"},"content":"    void deleteAllPerson(ObservableList\u003cPerson\u003e persons);","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xpzmichael":1,"atmh":35,"lovemathboy":23,"-":87,"tandeshao":6}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.ReadOnlyProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    private final StateAddressBook stateAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"    private final SimpleObjectProperty\u003cPerson\u003e personOnDisplay;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        this.stateAddressBook \u003d new StateAddressBook(addressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.stateAddressBook.getPersonList());","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"        personOnDisplay \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"        this.stateAddressBook.getPersonList().addListener(this::handleListChangeListener);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        this.stateAddressBook.resetData(addressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        return stateAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        return stateAddressBook.hasPerson(person);","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book,","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"     * excluding {@code except}.","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    public boolean hasPersonExcept(Person person, Person except) {","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        requireNonNull(except);","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"        return stateAddressBook.hasPersonExcept(person, except);","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"        stateAddressBook.removePerson(target);","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"tandeshao"},"content":"     * Deletes all the persons from the model.","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"tandeshao"},"content":"     * @param persons List of person to delete.","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"tandeshao"},"content":"    public void deleteAllPerson(ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"        Person[] personsToDelete \u003d Arrays.stream(persons.toArray())","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"                .map(o -\u003e (Person) o).toArray(Person[]::new);","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"tandeshao"},"content":"        stateAddressBook.removePersons(personsToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"        stateAddressBook.addPerson(person);","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"        stateAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"     * {@code stateAddressBook}","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"lovemathboy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person on Display Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"lovemathboy"},"content":"    public ReadOnlyProperty\u003cPerson\u003e getPersonOnDisplay() {","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"lovemathboy"},"content":"        return personOnDisplay;","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"lovemathboy"},"content":"    public void updatePersonOnDisplay(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"lovemathboy"},"content":"        personOnDisplay.set(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"lovemathboy"},"content":"     * Removes the current {@code personOnDisplay}.","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"lovemathboy"},"content":"    private void removePersonOnDisplay() {","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"lovemathboy"},"content":"        updatePersonOnDisplay(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"lovemathboy"},"content":"     * Updates the {@code personOnDisplay} according to how the list changes.","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"lovemathboy"},"content":"     * If a {@code Person} was added, change the {@code personOnDisplay} to the newly added {@code Person}.","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"lovemathboy"},"content":"     * If a {@code Person} was modified, update the {@code Person}\u0027s data","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"lovemathboy"},"content":"     * If a {@code Person} was deleted, delete the {@code personOnDisplay} if it\u0027s the same as the Person deleted.","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"lovemathboy"},"content":"     * @param change Contains all the modifications to the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"lovemathboy"},"content":"    private void handleListChangeListener(ListChangeListener.Change\u003c? extends Person\u003e change) {","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"lovemathboy"},"content":"        change.next();","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"lovemathboy"},"content":"        List\u003c? extends Person\u003e addedList \u003d change.getAddedSubList();","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"lovemathboy"},"content":"        List\u003c? extends Person\u003e removedList \u003d change.getRemoved();","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"lovemathboy"},"content":"        if (change.getAddedSize() \u003e change.getRemovedSize()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"lovemathboy"},"content":"            updateDisplayUponAddition(addedList, removedList);","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"lovemathboy"},"content":"            return;","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"lovemathboy"},"content":"        // There\u0027s no point checking if the person on display needs to change or delete if it doesn\u0027t exist.","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"lovemathboy"},"content":"        if (personOnDisplay.get() \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"lovemathboy"},"content":"            return;","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"lovemathboy"},"content":"        if (change.getAddedSize() \u003d\u003d change.getRemovedSize()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"lovemathboy"},"content":"            updateDisplayUponModification(addedList, removedList);","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"lovemathboy"},"content":"        } else if (change.getAddedSize() \u003c change.getRemovedSize()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"lovemathboy"},"content":"            updateDisplayUponDeletion(addedList, removedList);","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"lovemathboy"},"content":"     * Updates {@code personOnDisplay} when {@code Person} are added to the {@code AddressBook}.","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"lovemathboy"},"content":"     * @param addedList List of {@code Person} added.","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"lovemathboy"},"content":"     * @param removedList List of {@code Person} removed.","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"lovemathboy"},"content":"    private void updateDisplayUponAddition(","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"lovemathboy"},"content":"            List\u003c? extends Person\u003e addedList, List\u003c? extends Person\u003e removedList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"lovemathboy"},"content":"        addedList.forEach(person -\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"lovemathboy"},"content":"            if (!removedList.contains(person)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"lovemathboy"},"content":"                updatePersonOnDisplay(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"lovemathboy"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"lovemathboy"},"content":"        });","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"lovemathboy"},"content":"     * Updates {@code personOnDisplay} when {@code Person} are modified in the {@code AddressBook}.","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"lovemathboy"},"content":"     * @param addedList List of {@code Person} added.","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"lovemathboy"},"content":"     * @param removedList List of {@code Person} removed.","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"lovemathboy"},"content":"    private void updateDisplayUponModification(","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"lovemathboy"},"content":"            List\u003c? extends Person\u003e addedList, List\u003c? extends Person\u003e removedList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"lovemathboy"},"content":"        assert addedList.size() \u003d\u003d removedList.size();","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"lovemathboy"},"content":"        Person curPerson \u003d personOnDisplay.get();","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"lovemathboy"},"content":"        for (int i \u003d 0; i \u003c removedList.size(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"lovemathboy"},"content":"            if (curPerson.equals(removedList.get(i))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"lovemathboy"},"content":"                updatePersonOnDisplay(addedList.get(i));","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"lovemathboy"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"lovemathboy"},"content":"     * Updates {@code personOnDisplay} when {@code Person} are deleted from the {@code AddressBook}.","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"lovemathboy"},"content":"     * @param addedList List of {@code Person} added.","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"lovemathboy"},"content":"     * @param removedList List of {@code Person} removed.","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"lovemathboy"},"content":"    private void updateDisplayUponDeletion(","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"lovemathboy"},"content":"            List\u003c? extends Person\u003e addedList, List\u003c? extends Person\u003e removedList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"lovemathboy"},"content":"        Person curPerson \u003d personOnDisplay.get();","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"lovemathboy"},"content":"        if (removedList.contains(curPerson) \u0026\u0026 !addedList.contains(curPerson)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"lovemathboy"},"content":"            removePersonOnDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"lovemathboy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"lovemathboy"},"content":"    public void addPersonOnDisplayListener(ChangeListener\u003c? super Person\u003e listener) {","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"lovemathboy"},"content":"        personOnDisplay.addListener(listener);","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"atmh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo and redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":265,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":266,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":267,"author":{"gitId":"atmh"},"content":"     * Restores address book to its previous state.","lastModifiedDate":"2022-03-18"},{"lineNumber":268,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":269,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":270,"author":{"gitId":"atmh"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":271,"author":{"gitId":"atmh"},"content":"        stateAddressBook.undo();","lastModifiedDate":"2022-03-19"},{"lineNumber":272,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":273,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":274,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":275,"author":{"gitId":"atmh"},"content":"     * Restores address book to its previous undid state.","lastModifiedDate":"2022-03-18"},{"lineNumber":276,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":277,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":278,"author":{"gitId":"atmh"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":279,"author":{"gitId":"atmh"},"content":"        stateAddressBook.redo();","lastModifiedDate":"2022-03-19"},{"lineNumber":280,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":282,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":283,"author":{"gitId":"atmh"},"content":"     * Returns true if address book is undoable; otherwise returns false.","lastModifiedDate":"2022-03-18"},{"lineNumber":284,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":285,"author":{"gitId":"atmh"},"content":"     * @return true if undoable; false otherwise.","lastModifiedDate":"2022-03-18"},{"lineNumber":286,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":287,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":288,"author":{"gitId":"atmh"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":289,"author":{"gitId":"atmh"},"content":"        return stateAddressBook.isUndoable();","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":292,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":293,"author":{"gitId":"atmh"},"content":"     * Returns true if address book is redoable; otherwise returns false.","lastModifiedDate":"2022-03-18"},{"lineNumber":294,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":295,"author":{"gitId":"atmh"},"content":"     * @return true if redoable; false otherwise.","lastModifiedDate":"2022-03-18"},{"lineNumber":296,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":297,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":298,"author":{"gitId":"atmh"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":299,"author":{"gitId":"atmh"},"content":"        return stateAddressBook.isRedoable();","lastModifiedDate":"2022-03-19"},{"lineNumber":300,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":302,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":303,"author":{"gitId":"atmh"},"content":"     * Saves the current address book state.","lastModifiedDate":"2022-03-19"},{"lineNumber":304,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":305,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":306,"author":{"gitId":"atmh"},"content":"    public void saveAddressBookState() {","lastModifiedDate":"2022-03-19"},{"lineNumber":307,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-19"},{"lineNumber":308,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":310,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":311,"author":{"gitId":"atmh"},"content":"     * Checks if two {@code ModelManager} is equal.","lastModifiedDate":"2022-03-22"},{"lineNumber":312,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":313,"author":{"gitId":"atmh"},"content":"     * @param obj the other {@code ModelManager} object.","lastModifiedDate":"2022-03-22"},{"lineNumber":314,"author":{"gitId":"atmh"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-22"},{"lineNumber":315,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":330,"author":{"gitId":"atmh"},"content":"        return stateAddressBook.equals(other.stateAddressBook)","lastModifiedDate":"2022-03-19"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"atmh":68,"lovemathboy":111,"-":143,"tandeshao":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    Path getBackupFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"tandeshao":2}},{"path":"src/main/java/seedu/address/model/StateAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import seedu.address.model.exceptions.InvalidRedoException;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import seedu.address.model.exceptions.InvalidUndoException;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":" * Address book that contains the state history, inherits from {@code AddressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":" * Solution below adapted from","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":" * https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature.","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"public class StateAddressBook extends AddressBook {","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"    /** Limits the number of undo and redo. */","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    public static final int UNDO_REDO_CAPACITY \u003d 20;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    /** Lists that contains the address book state history. */","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"    private final List\u003cReadOnlyAddressBook\u003e stateHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"    /** Index of the current state in {@code stateHistory}. */","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    private int currentStateIndex;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"     * Creates a {@code StateAddressBook} with a given initial state.","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"     * @param initialState initial state of the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    public StateAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"        super(initialState);","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"        assert initialState !\u003d null : \"initialState should not be null\";","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        stateHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        stateHistory.add(new AddressBook(initialState));","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        currentStateIndex \u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"     * Restores address book state to its previous state.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"     * @throws InvalidUndoException If {@code stateHistory} is not undoable.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    public void undo() throws InvalidUndoException {","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        if (!isUndoable()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"            throw new InvalidUndoException();","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        currentStateIndex--;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        resetData(stateHistory.get(currentStateIndex));","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"     * Restores address book state to its previous undid state.","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"     * @throws InvalidRedoException If {@code stateHistory} is not redoable.","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"    public void redo() throws InvalidRedoException {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        if (!isRedoable()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"            throw new InvalidRedoException();","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        currentStateIndex++;","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        resetData(stateHistory.get(currentStateIndex));","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"     * Returns true if {@code stateHistory} is undoable. Otherwise, returns false.","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"     * @return true if undoable; false otherwise.","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"        return currentStateIndex \u003e 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"     * Returns true if {@code stateHistory} is redoable. Otherwise, returns false.","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"     * @return true if redoable; otherwise false.","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"    public boolean isRedoable() {","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"        return currentStateIndex + 1 \u003c stateHistory.size();","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"     * Saves the current address book state.","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"    public void saveState() {","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"        clearAfterCurrentStateIndex();","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"        if (isFull()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"            stateHistory.remove(0);","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"            currentStateIndex--;","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"        stateHistory.add(new AddressBook(this));","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"        currentStateIndex++;","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"     * Clears the {@code stateHistory} after the current state index.","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"    private void clearAfterCurrentStateIndex() {","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"        stateHistory.subList(currentStateIndex + 1, stateHistory.size()).clear();","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"     * Returns true if {@code stateHistory} is full, i.e. equal to UNDO_REDO_CAPACITY + 1 to account for initial state,","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"     * otherwise returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"     * @return true if full; otherwise false.","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    private boolean isFull() {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        return stateHistory.size() \u003d\u003d UNDO_REDO_CAPACITY + 1;","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"     * Checks if two {@code StateAddressBook} is equal.","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"     * @param other the other {@code StateAddressBook} object.","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"     * @return true if equal; otherwise false.","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"                || (other instanceof StateAddressBook // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 stateHistory.equals(((StateAddressBook) other).stateHistory)","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 currentStateIndex \u003d\u003d (((StateAddressBook) other).currentStateIndex));","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":128}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    private final Path backupFilePath \u003d Paths.get(\"data\", \"backup.json\");","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"    public Path getBackupFilePath() {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        return backupFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"tandeshao":8}},{"path":"src/main/java/seedu/address/model/exceptions/InvalidRedoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":" * Signals that the operation will fail as there is nothing to redo.","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"public class InvalidRedoException extends RuntimeException {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"    public InvalidRedoException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"        super(\"There is nothing to redo.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":10}},{"path":"src/main/java/seedu/address/model/exceptions/InvalidUndoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":" * Signals that the operation will fail as there is nothing to undo.","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"public class InvalidUndoException extends RuntimeException {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"    public InvalidUndoException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"        super(\"There is nothing to undo.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"atmh":10}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"    private static final int MAXIMUM_LENGTH \u003d 800;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses should not be blank or start with a space, \"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"            + \"and it cannot exceed\" + MAXIMUM_LENGTH + \"characters\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{0,\" + (MAXIMUM_LENGTH - 1) + \"}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"    public final String address;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        return address;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 address.equals(((Address) other).address)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        return address.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":4,"atmh":5,"-":50}},{"path":"src/main/java/seedu/address/model/person/ContactedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":" * Represents a Person\u0027s contacted status in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContactedDate(String)}","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"public class ContactedDate {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    /** String message that represents the prefix last contacted on. */","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_CONTACTED_PREFIX \u003d \"Last contacted on %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"    /** String message that represents not contacted. */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_NOT_CONTACTED \u003d \"Not contacted\";","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    /** String that represents the dd-mm-yyyy date format. */","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-uuuu\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"     * A strict {@code DateTimeFormatter} of {@code DATE_FORMAT}, strict enforces and prevents invalid leap dates","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"     * and invalid dates such as February 30.","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT)","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    /** String message that represents message constraints. */","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"ContactedDate can be empty or \"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"            + \"a valid date following the dd-mm-yyyy format that is not in the future.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    /** A static {@code contactedDate} object that represents an empty contacted date. */","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"    public static final ContactedDate EMPTY_CONTACTED_DATE \u003d new ContactedDate(\"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    /** String representation of {@code ContactedDate}. */","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    public final String contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"     * Constructs a {@code ContactedDate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"     * @param contactedDate A valid contacted date.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"    public ContactedDate(String contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        requireNonNull(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        checkArgument(isValidContactedDate(contactedDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        this.contactedDate \u003d contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"     * Returns true if a given string is a valid contacted date.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"     * @param contactedDate A contacted date to be checked for validity.","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"     * @return If valid true; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"    public static boolean isValidContactedDate(String contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        if (contactedDate \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        return contactedDate.isEmpty() || isValidDate(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"     * Returns true if a given string is a valid date that follows the {@code DATE_FORMAT} and is not in the future,","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"     * otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"     * @param contactedDate A contacted date to be checked for validity.","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"     * @return If valid {@code DATE_FORMAT} and not in the future, true; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"    private static boolean isValidDate(String contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"        LocalDate contactedDateFormatted;","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"            contactedDateFormatted \u003d LocalDate.parse(contactedDate, DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"            // Invalid date format.","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        // contactedDateFormatted will be instantiated in the try block","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        return contactedDateFormatted.compareTo(today) \u003c\u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"     * Returns true if {@code ContactedDate} is equal to {@code EMPTY_CONTACTED_DATE}, false otherwise.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"     * @return If {@code ContactedDate} is equal to {@code EMPTY_CONTACTED_DATE}, true; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        return this.equals(EMPTY_CONTACTED_DATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"     * Returns string representation of {@code ContactedDate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"     * @return String representation of {@code ContactedDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"            return MESSAGE_NOT_CONTACTED;","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"        return String.format(MESSAGE_CONTACTED_PREFIX, this.contactedDate);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"     * Checks if two {@code ContactedDate} object is equal.","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"     * @param other The other {@code ContactedDate} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"     * @return If equal true; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"                || (other instanceof ContactedDate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 contactedDate.equals(((ContactedDate) other).contactedDate)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"     * Returns hashcode of {@code ContactedDate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"     * @return Hashcode of {@code ContactedDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"        return contactedDate.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"atmh":135}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"    private static final int MAXIMUM_LENGTH \u003d 400;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"            + \"1. The total length of email should not exceed \" + MAXIMUM_LENGTH + \" characters\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"            + \"2. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"            + \"3. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"xpzmichael"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\";","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?\u003d^.{1,\" + MAXIMUM_LENGTH + \"}$)\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"            + LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"    public final String email;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        return email;","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 email.equals(((Email) other).email)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        return email.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":7,"atmh":5,"-":61}},{"path":"src/main/java/seedu/address/model/person/Memo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":" * Represents a Person\u0027s memo in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMemo(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"public class Memo {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"    /** Maximum characters allowed. */","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"    public static final int MAXIMUM_CHARACTERS \u003d 1000;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"    /** String message that represents message constraints. */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Memo can take any values, up to a maximum of \"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"            + MAXIMUM_CHARACTERS + \" characters\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    /** Every character is allowed, up to a maximum of MAXIMUM_CHARACTERS. */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"    public static final String VALIDATION_REGEX \u003d \".{0,\" + MAXIMUM_CHARACTERS + \"}\";","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"    /** A static empty {@code Memo} object. */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    public static final Memo EMPTY_MEMO \u003d new Memo(\"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    /** String representation of Memo. */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    public final String memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"     * Constructs a {@code Memo}.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"     * @param memo A valid memo.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    public Memo(String memo) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        requireNonNull(memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        checkArgument(isValidMemo(memo), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"     * Returns true if a given string is a valid memo.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"     * @param memo A memo to be checked for validity.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"     * @return If valid true; otherwise false.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    public static boolean isValidMemo(String memo) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        return memo.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"     * Returns true if {@code Memo} is equal to {@code EMPTY_MEMO}, false otherwise.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"     * @return If {@code Memo} is equal to {@code EMPTY_MEMO}, true; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        return this.equals(EMPTY_MEMO);","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"     * Returns string representation of {@code Memo}.","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"     * @return String representation of {@code Memo}.","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"        return memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"     * Checks if two {@code Memo} object is equal.","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"     * @param other The other {@code Memo} object.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"     * @return If equal true; otherwise false.","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"                || (other instanceof Memo // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 memo.equals(((Memo) other).memo)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"     * Returns hashcode of {@code Memo}.","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"     * @return Hashcode of {@code Memo}.","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"        return memo.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"atmh":89,"tandeshao":1}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"            \"Names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"                    + \"and its length should be between 1 and 800 (including spaces)\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    public static final String NAME_CHARACTER_LIMIT \u003d \"{0,799}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]\" + NAME_CHARACTER_LIMIT;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":4,"atmh":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    private final ContactedDate contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    private final Memo memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"                  ContactedDate contactedDate, Memo memo, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        this.contactedDate \u003d contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"     * Returns name.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"     * @return name.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"     * Returns phone.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"     * @return phone.","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     * Returns email.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"     * @return email.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"     * Returns address.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"     * @return address.","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"     * Returns contactedDate.","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"     * @return contactedDate.","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"    public ContactedDate getContactedDate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        return contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"     * Returns memo.","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"     * @return memo.","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    public Memo getMemo() {","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        return memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"     * Returns true if memo is empty, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"     * @return If memo is empty true; otherwise false.","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"    public boolean isMemoEmpty() {","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"        return memo.isEmpty();","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"     * Returns true if both persons have the same phone or email.","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"     * @param otherPerson The other {@code Person}.","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"     * @return true if both persons have the same phone or email; otherwise false.","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"     * @param other The other Object.","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"     * @return true if both persons have the same identity and data fields; otherwise false.","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 otherPerson.getContactedDate().equals(getContactedDate())","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 otherPerson.getMemo().equals(getMemo())","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"     * Returns hashcode of Person.","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"     * @return hashcode of Person.","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"        return Objects.hash(name, phone, email, address, contactedDate, memo, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"     * Returns string representation of Person.","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"     * @return string representation of Person.","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"                .append(\"; Contacted Date: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"                .append(getContactedDate());","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"        if (!memo.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"            builder.append(\" Memo: \").append(getMemo());","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"            tags.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"                    .forEach(tag -\u003e builder.append(String.format(\"[%s]\", tag)));","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":84,"-":118}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"            \"Phone numbers should only contain numbers, and it should be 3 to 31 digits long\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    private static final int PHONE_NUMBER_MAXIMUM \u003d 31;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,\" + PHONE_NUMBER_MAXIMUM + \"}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"    public final String phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        return phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"                \u0026\u0026 phone.equals(((Phone) other).phone)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        return phone.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xpzmichael":3,"atmh":5,"-":45}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"     * Returns true if the list contains an equivalent person as the given argument,","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"     * excluding a specified person.","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"    public boolean containsExcept(Person toCheck, Person except) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        requireNonNull(except);","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        return internalList.stream().anyMatch((person -\u003e !person.equals(except) \u0026\u0026 person.isSamePerson(toCheck)));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"     * Removes all the persons that matches from the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"     * @param persons The persons to be deleted.","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    public void removeAll(Person... persons) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        internalList.removeAll(persons);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"atmh":10,"-":137,"tandeshao":9}},{"path":"src/main/java/seedu/address/model/person/predicate/ContactedDateMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":" * A class that encapsulates the logic of contacted status check for a {@link Person}.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"public class ContactedDateMatchPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    private final ArgumentMultimap argMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     * Constructs ContactStatusMatchPredicate for the {@link FindCommand}.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     * @param argMultimap Description of the user query that was passed into the FindCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    public ContactedDateMatchPredicate(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        this.argMultimap \u003d argMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * Conducts a check on the last contacted date of the {@link seedu.address.model.person.Person Person} to","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * check if the person is eligible to be included in the filtered list. Eligibility is decided by an","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     * integer argument passed into the find command where \"find c/1\" represents choosing contacts that were","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * contacted 1 or more days ago. If no integer argument is found, contacts that had not been contacted are chosen.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * @param person Person to be tested.","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * @return True if person was last contacted n or more days ago, where n is an integer argument retrieved from","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     * the user query. If the user query contains no integer, contacts that were not contacted are selected instead.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * false otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        String userArg \u003d argMultimap.getValue(PREFIX_CONTACTED_DATE).orElse(\"\");","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        if (userArg.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"            String personContactedDate \u003d person.getContactedDate().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"            return personContactedDate.equals(ContactedDate.MESSAGE_NOT_CONTACTED);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"            int expectedDaysBetweenDates \u003d Integer.parseInt(userArg);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"            String personContactedStatus \u003d person.getContactedDate().contactedDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"            if (personContactedStatus.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"                LocalDate lastContactedDate \u003d LocalDate.parse(personContactedStatus, ContactedDate.DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"                return expectedDaysBetweenDates \u003c\u003d ChronoUnit.DAYS.between(lastContactedDate, today);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tandeshao":57}},{"path":"src/main/java/seedu/address/model/person/predicate/DomainMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * Tests if the person email matches the specified domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" * A {@link Person} passes the check if his domain (e.g. @gmail) matches the","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":" * user argument or if his entire domain name (e.g. @gmail.com) matches the user argument.","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"public class DomainMatchPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    private final List\u003cString\u003e emailArg;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * Constructor for DomainMatchPredicate.","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     * @param emailArg Email argument obtained from the user.","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    public DomainMatchPredicate(List\u003cString\u003e emailArg) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        this.emailArg \u003d emailArg;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     * Tests if a person\u0027s email domain is identical to the domain (e.g. @gmail) or the entire domain name (e.g. @gmail","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * .com) of the user argument. This test is case-insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * @param person Person to be checked against.","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     * @return true if domain name is identical to the email argument, false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        String domain \u003d retrieveDomain(person.getEmail()).toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        String entireDomainName \u003d retrieveEntireDomainName(person.getEmail()).toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        return emailArg.stream().anyMatch(email -\u003e domain.equals(email.toLowerCase())","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"                || entireDomainName.equals(email.toLowerCase()));","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * Retrieves the domain of the person. E.g. \"@gmail\".","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     * @param email Email to retrieve the domain from.","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of the domain.","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    private String retrieveDomain(Email email) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        String emailString \u003d email.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        int startIndex \u003d getStartIndex(emailString);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        int endIndex \u003d getEndIndex(emailString, startIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        return emailString.substring(startIndex, endIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"     * Retrieves the entire domain name of the person including the domain name after \".\". For e.g. \"@gmail.com\".","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"     * @param email Email to retrieve the entire domain name from.","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of the entire domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    private String retrieveEntireDomainName(Email email) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        String emailString \u003d email.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        int startIndex \u003d getStartIndex(emailString);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        return emailString.substring(startIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     * Gets the ending index of the entire domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     * @param emailString String to retrieve the ending index from.","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @param startIndex Starting index of the domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     * @return Ending index of the entire domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"    private int getEndIndex(String emailString, int startIndex) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        int endIndex \u003d startIndex + 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        while (endIndex \u003c emailString.length() \u0026\u0026 emailString.charAt(endIndex) !\u003d \u0027.\u0027) {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"            endIndex++;","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"        return endIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"     * Gets the starting index of the domain name. This index is the index at which the \u0027@\u0027 character is found.","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @param emailString String to retrieve the starting index from.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     * @return Starting index of the domain name.","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"    private int getStartIndex(String emailString) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"        while (startIndex \u003c emailString.length() \u0026\u0026 emailString.charAt(startIndex) !\u003d \u0027@\u0027) {","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"            startIndex++;","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"        return startIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":94}},{"path":"src/main/java/seedu/address/model/person/predicate/ExactWordMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" * A class that encapsulates the logic of exact word match between a person\u0027s attribute","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":" * and the description for that attribute (supplied by the user).","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"public class ExactWordMatchPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    private final List\u003cString\u003e descriptions;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    private final Prefix prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     * Constructor for ExactWordMatchPredicate","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * @param prefix use to retrieve the corresponding {@link Person} attribute.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     * @param descriptions descriptions that are tested against.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    public ExactWordMatchPredicate(Prefix prefix, List\u003cString\u003e descriptions) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        this.descriptions \u003d descriptions;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * Conducts a case-insensitive check on the {@link seedu.address.model.person.Person Person}.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     * Checks if the Person\u0027s attribute (the attribute that corresponds to {@link #prefix})","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * has any word that matches exactly to any word in the given description.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     * @param person person to be tested.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     * @return true if person contains the word, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        if (PREFIX_TAG.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"            return person.getTags().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"                    .anyMatch(tag -\u003e exactWordMatching(descriptions, tag.toString()));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_MEMO.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"            return exactWordMatching(descriptions, person.getMemo().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_ADDRESS.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"            return exactWordMatching(descriptions, person.getAddress().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_NAME.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"            return exactWordMatching(descriptions, person.getName().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_EMAIL.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"            return exactWordMatching(descriptions, person.getEmail().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        } else { // for phone prefix","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"            return exactWordMatching(descriptions, person.getPhone().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     * Loops through the list of strings to see if there is any case-insensitive exact word matching between the","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     * attribute and description.","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     * @param descriptions List of strings to be checked against. Guaranteed be non-null.","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     * @param attribute Person attribute to be checked against. Guaranteed to be non-null.","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"     * @return True if any of the word in the description list matches any word in the person attribute.","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"    private boolean exactWordMatching(List\u003cString\u003e descriptions, String attribute) {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        return descriptions.stream().anyMatch(description -\u003e StringUtil.containsWordIgnoreCaseForTwoSentence(attribute,","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"                description));","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":72}},{"path":"src/main/java/seedu/address/model/person/predicate/FindPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":" * Tests if a {@link seedu.address.model.person.Person Person}","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" * matches any of the description given.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"public class FindPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     * Descriptor from {@link FindCommandParser}.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    private final ArgumentMultimap descriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * Constructs Predicate function.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * @param descriptor description to search a person by.","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    public FindPersonPredicate(ArgumentMultimap descriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * Conducts a case-insensitive check on the {@link seedu.address.model.person.Person Person}.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     * Checks if the Person\u0027s attributes (the attribute that corresponds to {@link Prefix}) matches any of","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * the following criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     * Tag uses exact word check, where \"find n/redherring\" would only match with the name \"redherring\".","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     * Contacted date uses a special check where \"find c/1\" would result in choosing person that had not been","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     * contacted for more than 1 day ago.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * The other remaining attributes (phone, memo, address, email, name) uses a partial word match where \"find","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     * n/kay\" would result in a match with \"kay\", \"kaylee\", \"kayla\", \"okay\" and \"pokaya\".","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     * Note, using the same prefix more than once in a single query is the same as running the find command more than","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     * once on the filter list and combining the outcome of both filtered result into a single output list. For","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     * example, \"find n/benedict\" and \"find n/alex\" would match with both \"alex\" and \"benedict\".","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     * @param person person to be tested.","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * @return true if person contains the word, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        List\u003cPrefix\u003e prefixes \u003d descriptor.getAllAvailablePrefix();","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"            if (testPersonAttribute(person, prefix)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     * Checks if the attribute that corresponds with the attribute matches with the predicate.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     * @param person person to be tested.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     * @param attribute the prefix that identifies which attribute of the person should the predicate be","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"     *               testing against.","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     * @return true if the person\u0027s attribute passes the test, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"    private boolean testPersonAttribute(Person person, Prefix attribute) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        Predicate\u003cPerson\u003e predicateToTestAgainst;","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        if (attribute.equals(PREFIX_CONTACTED_DATE)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"            predicateToTestAgainst \u003d new ContactedDateMatchPredicate(descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        } else if (attribute.equals(PREFIX_TAG)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"            predicateToTestAgainst \u003d new ExactWordMatchPredicate(attribute,","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"                    descriptor.getAllValues(attribute));","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"            predicateToTestAgainst \u003d new PartialWordMatchPredicate(attribute,","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"                    descriptor.getAllValues(attribute));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"        return predicateToTestAgainst.test(person);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * Equal method to check if two {@link FindPersonPredicate} are equal.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"     * @param other other PersonContainsKeywordsPredicate object.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"     * @return true if both {@link FindPersonPredicate} object are the same, false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"                || (other instanceof FindPersonPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 descriptor.equals(((FindPersonPredicate) other).descriptor)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":95}},{"path":"src/main/java/seedu/address/model/person/predicate/PartialWordMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" * A class that encapsulates the logic of partial word match between a Person\u0027s attribute and the","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" * description for that attribute (supplied by the user).","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"public class PartialWordMatchPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    private final List\u003cString\u003e descriptions;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    private final Prefix prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     * Constructor for PartialWordMatchPredicate","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     * @param prefix use to retrieve the corresponding {@link Person} attribute.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * @param descriptions descriptions that are tested against.","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public PartialWordMatchPredicate(Prefix prefix, List\u003cString\u003e descriptions) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        this.descriptions \u003d descriptions;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * Conducts a case-insensitive partial match on both the attribute and description.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * For example: \"memo\" would match with \"This is a memo\".","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * @param attribute person attribute that is tested.","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * @param descriptions description that is supplied by the user.","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     * @return true if there is a partial match between attribute and description, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    private boolean caseInsensitivePartialMatch(String attribute, List\u003cString\u003e descriptions) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        return descriptions.stream().anyMatch(description -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"            attribute.toLowerCase().contains(description.toLowerCase()));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     * Conducts a case-insensitive check on the {@link seedu.address.model.person.Person Person}.","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     * Checks if the Person\u0027s attribute (the attribute that corresponds to {@link #prefix})","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * has any word that partially matches the given description.","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     * @param person person to be tested.","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     * @return true if person contains the word, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        if (PREFIX_EMAIL.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"            return caseInsensitivePartialMatch(person.getEmail().toString(), descriptions);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_NAME.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"            return caseInsensitivePartialMatch(person.getName().toString(), descriptions);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_PHONE.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"            return caseInsensitivePartialMatch(person.getPhone().toString(), descriptions);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_MEMO.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"            return caseInsensitivePartialMatch(person.getMemo().toString(), descriptions);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        } else if (PREFIX_TAG.equals(prefix)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"            return person.getTags().stream().anyMatch(tag -\u003e caseInsensitivePartialMatch(tag.toString(), descriptions));","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"            return caseInsensitivePartialMatch(person.getAddress().toString(), descriptions);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":70}},{"path":"src/main/java/seedu/address/model/person/predicate/ScrubPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":" * Tests if a {@link seedu.address.model.person.Person Person}","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":" * matches any of the description given for scrubbing.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"public class ScrubPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    private final ArgumentMultimap argMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     * Constructor for ScrubPersonPredicate.","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * @param argMultimap Description to scrub a person by.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    public ScrubPersonPredicate(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        this.argMultimap \u003d argMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * Conducts a case-insensitive check on the {@link seedu.address.model.person.Person Person}.","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     * Checks if the Person\u0027s attributes (the attribute that corresponds to {@link Prefix})","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * has any word that matches exactly to any word in the given description. Only three attributes","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * are allowed for scrubbing, and they are phone, email and tags. For email, a {@link DomainMatchPredicate} is","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * used and for phone and tags, {@link ExactWordMatchPredicate} is used.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     * @param person person to be tested.","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * @return true if person contains the word, false otherwise.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        List\u003cPrefix\u003e listOfPrefixes \u003d argMultimap.getAllAvailablePrefix();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        return listOfPrefixes.stream().anyMatch(prefix -\u003e createPredicate(prefix).test(person));","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     * Creates predicate that allows partial matching for email attributes and exact matching for phone and tag","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     * attributes.","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * @param prefix Prefix representing the attribute that is target for testing.","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     * @return Appropriate predicate that meets the matching requirement of different attributes (see","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     * {@link #test(Person)} for more information).","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    private Predicate\u003cPerson\u003e createPredicate(Prefix prefix) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        Predicate\u003cPerson\u003e predicateToTestPersonAgainst;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"            predicateToTestPersonAgainst \u003d new DomainMatchPredicate(argMultimap.getAllValues(prefix));","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"            predicateToTestPersonAgainst \u003d new ExactWordMatchPredicate(prefix, argMultimap.getAllValues(prefix));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        return predicateToTestPersonAgainst;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"                || (other instanceof ScrubPersonPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 argMultimap.equals(((ScrubPersonPredicate) other).argMultimap)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":69}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        return tagName;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"tandeshao":2}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new ContactedDate(\"01-01-2022\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"                    new Memo(\"Avid free climber\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new ContactedDate(\"23-03-2022\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"                    new Memo(\"Expecting a baby boy in Nov 2022\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new ContactedDate(\"\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"                    new Memo(\"Works at a chemical plant\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new ContactedDate(\"30-10-2021\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"                    new Memo(\"Coffee connoisseur\"), getTagSet(\"family\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new ContactedDate(\"12-12-2021\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"                    new Memo(\"SAF commando officer\"), getTagSet(\"classmates\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new ContactedDate(\"21-09-2021\"),","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"                    new Memo(\"Car enthusiast\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"atmh":14,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    private final String memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"    private final String contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"                             @JsonProperty(\"contactedDate\") String contactedDate, @JsonProperty(\"memo\") String memo,","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        this.contactedDate \u003d contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        phone \u003d source.getPhone().phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        email \u003d source.getEmail().email;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        address \u003d source.getAddress().address;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        contactedDate \u003d source.getContactedDate().contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"        memo \u003d source.getMemo().memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        if (contactedDate \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"                    ContactedDate.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"        if (!ContactedDate.isValidContactedDate(contactedDate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"            throw new IllegalValueException(ContactedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"        final ContactedDate modelContactedDate \u003d new ContactedDate(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"        if (memo \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Memo.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-02-19"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"        if (!Memo.isValidMemo(memo)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"            throw new IllegalValueException(Memo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"        final Memo modelMemo \u003d new Memo(memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelContactedDate, modelMemo, modelTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"atmh":31,"-":104}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    private final Path mainFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    private Path backupFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        this.mainFilePath \u003d filePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * Constructs an AddressBookStorage that has 2 file paths initialized. One is for the main file path where the","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * addressbook.json file is located and another is the file path where the backup.json file is located. The","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * backup file is created when users","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"     * @param mainFilePath Main file path that stores addressbok.json.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * @param backupFilePath Backup file path that stores backup.json.","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    public JsonAddressBookStorage(Path mainFilePath, Path backupFilePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        this.mainFilePath \u003d mainFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        this.backupFilePath \u003d backupFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        return mainFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        return readAddressBook(mainFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"            logger.info(\"Attempting to backup file to: \" + backupFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"            backUpFile(mainFilePath, backupFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"        saveAddressBook(addressBook, mainFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"     * Stores the user corrupted addressbook.json file content so that even after re-loading the app","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"     * and the addressbok.json file becomes empty, user will still be able to retrieve their previous","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"     * AddressBook data in the backup file.","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"     * @param copyFrom  File path to addressbook.json so that the method can copy the content from it.","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"     * @param copyTo File path to backup.json so that the method can copy the content to it.","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"    private void backUpFile(Path copyFrom, Path copyTo) {","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"        if (copyTo !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"            try {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"                Files.copy(copyFrom, copyTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"                logger.info(\"Backup successful.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"                logger.info(\"Unable to backup file to: \" + copyTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":74,"tandeshao":41}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.NextCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.PreviousCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"            if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"                handleCommandHistory(PreviousCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"        });","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"        commandTextField.setOnKeyReleased(event -\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"            if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"xpzmichael"},"content":"                handleCommandHistory(NextCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"xpzmichael"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"xpzmichael"},"content":"        });","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"xpzmichael"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"xpzmichael"},"content":"            CommandResult commandResult \u003d commandExecutor.execute(commandText);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"xpzmichael"},"content":"            commandTextField.setText(commandResult.getNewCommandTextField());","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"xpzmichael"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"xpzmichael"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"xpzmichael"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"xpzmichael"},"content":"    private void handleCommandHistory(String commandText) {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"xpzmichael"},"content":"            CommandResult commandResult \u003d commandExecutor.execute(commandText);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"xpzmichael"},"content":"            commandTextField.setText(commandResult.getNewCommandTextField());","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"xpzmichael":23,"-":83}},{"path":"src/main/java/seedu/address/ui/DetailedPersonDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lovemathboy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lovemathboy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lovemathboy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":" * A UI for the display of person details on the right.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"public class DetailedPersonDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":"    public static final String FXML \u003d \"DetailedPersonDisplay.fxml\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lovemathboy"},"content":"    public static final String DEFAULT_EMPTY_MESSAGE \u003d \"-\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"    private StackPane personDisplayPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"    private Label nameLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"lovemathboy"},"content":"    private Label phoneLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"lovemathboy"},"content":"    private Label emailLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"    private Label addressLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"    private Label lastContactLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"    private Label memoLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"    private FlowPane tagsPane;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"    public DetailedPersonDisplay() {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"lovemathboy"},"content":"    public void setPersonDisplay(Person person) {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"        if (person !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"lovemathboy"},"content":"            String newName \u003d person.getName().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"lovemathboy"},"content":"            nameLabel.setText(newName);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"lovemathboy"},"content":"            String newPhone \u003d person.getPhone().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"lovemathboy"},"content":"            phoneLabel.setText(newPhone);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"            String newEmail \u003d person.getEmail().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"lovemathboy"},"content":"            emailLabel.setText(newEmail);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"lovemathboy"},"content":"            String newAddress \u003d person.getAddress().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"lovemathboy"},"content":"            addressLabel.setText(newAddress);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"lovemathboy"},"content":"            String newLastContact \u003d person.getContactedDate().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"lovemathboy"},"content":"            lastContactLabel.setText(newLastContact);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"lovemathboy"},"content":"            String newMemo \u003d DEFAULT_EMPTY_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"lovemathboy"},"content":"            if (!person.isMemoEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"lovemathboy"},"content":"                newMemo \u003d person.getMemo().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"lovemathboy"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"lovemathboy"},"content":"            memoLabel.setText(newMemo);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"lovemathboy"},"content":"            tagsPane.getChildren().clear();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"lovemathboy"},"content":"            person.getTags().stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"lovemathboy"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"lovemathboy"},"content":"                    .forEach(tag -\u003e tagsPane.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"lovemathboy"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"lovemathboy"},"content":"            nameLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"lovemathboy"},"content":"            phoneLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"lovemathboy"},"content":"            emailLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"lovemathboy"},"content":"            addressLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"lovemathboy"},"content":"            memoLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"lovemathboy"},"content":"            lastContactLabel.setText(DEFAULT_EMPTY_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"lovemathboy"},"content":"            tagsPane.getChildren().clear();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"lovemathboy"},"content":"     * Returns a listener that updates the UI whenever the Person object on display is modified.","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"lovemathboy"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"lovemathboy"},"content":"     * @return a ChangeListener that reacts to any edits of a Person object.","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"lovemathboy"},"content":"    public ChangeListener\u003c? super Person\u003e getListener() {","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"lovemathboy"},"content":"        return (ChangeListener\u003cPerson\u003e) (observable, oldPerson, newPerson) -\u003e setPersonDisplay(newPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"lovemathboy":94}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"atmh":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"    private DetailedPersonDisplay detailedPersonDisplay;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"    private StackPane detailedPersonDisplayPlaceholder;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"lovemathboy"},"content":"        detailedPersonDisplay \u003d new DetailedPersonDisplay();","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"lovemathboy"},"content":"        detailedPersonDisplayPlaceholder.getChildren().add(detailedPersonDisplay.getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"lovemathboy"},"content":"        initializeDetailedPersonDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"lovemathboy"},"content":"     * Initializes the {@code DetailedPersonDisplay} by linking the listener to the AddressBook and","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"lovemathboy"},"content":"     * setting the initial {@code personOnDisplay}.","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"lovemathboy"},"content":"    private void initializeDetailedPersonDisplay() {","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"lovemathboy"},"content":"        linkPersonOnDisplay();","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"lovemathboy"},"content":"        detailedPersonDisplay.setPersonDisplay(logic.getPersonOnDisplay().getValue());","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"lovemathboy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"lovemathboy"},"content":"     * Link the listener from {@code detailedPersonDisplay} to the personOnDisplay in the Address Book.","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"lovemathboy"},"content":"     * @see seedu.address.model.Model#addPersonOnDisplayListener(ChangeListener)","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"lovemathboy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"lovemathboy"},"content":"    private void linkPersonOnDisplay() {","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"lovemathboy"},"content":"        logic.addPersonOnDisplayListener(detailedPersonDisplay.getListener());","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"lovemathboy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lovemathboy":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    private Label contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"    private HBox memoBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    @FXML","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        phone.setText(person.getPhone().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        address.setText(person.getAddress().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        email.setText(person.getEmail().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        contactedDate.setText(person.getContactedDate().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"        if (!person.isMemoEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"            Label memo \u003d new Label(person.getMemo().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"            memoBox.getChildren().add(memo);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"atmh":15,"-":72}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":" * A UI for the status bar that is displayed at the bottom of the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lovemathboy":1,"-":27}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"lovemathboy"},"content":".detailed-name-display .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"lovemathboy"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"lovemathboy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"lovemathboy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"lovemathboy"},"content":".detailed-person-display {","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"lovemathboy"},"content":"    -fx-background: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"lovemathboy"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"lovemathboy"},"content":"    -fx-fit-to-width: true;","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"lovemathboy"},"content":".detailed-detail-display {","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"lovemathboy"},"content":"    -fx-pref-height: -1;","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"lovemathboy"},"content":".detailed-detail-display .separator {","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"lovemathboy"},"content":"    -fx-background: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"lovemathboy"},"content":".detailed-detail-display .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"lovemathboy"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"lovemathboy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"lovemathboy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"lovemathboy"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"lovemathboy"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"lovemathboy"},"content":"#tagsPane .label {","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"lovemathboy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"lovemathboy"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"lovemathboy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":386,"author":{"gitId":"lovemathboy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"lovemathboy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"lovemathboy"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"lovemathboy"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"atmh":3,"lovemathboy":35,"-":351}},{"path":"src/main/resources/view/DetailedPersonDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lovemathboy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lovemathboy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lovemathboy"},"content":"\u003cStackPane fx:id\u003d\"personDisplayPane\" prefHeight\u003d\"400.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"detailed-person-display\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"   \u003cScrollPane fitToWidth\u003d\"true\" styleClass\u003d\"detailed-person-display\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lovemathboy"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lovemathboy"},"content":"         \u003cStackPane styleClass\u003d\"detailed-name-display\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"               \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lovemathboy"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"70.0\" text\u003d\"\\$name\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lovemathboy"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"lovemathboy"},"content":"                  \u003cFont size\u003d\"32.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"lovemathboy"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"lovemathboy"},"content":"         \u003c/StackPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"lovemathboy"},"content":"         \u003cGridPane styleClass\u003d\"detailed-detail-display\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"lovemathboy"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"lovemathboy"},"content":"               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"120.0\" prefWidth\u003d\"120.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lovemathboy"},"content":"               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lovemathboy"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"lovemathboy"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"lovemathboy"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"lovemathboy"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Phone:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"phoneLabel\" text\u003d\"\\$phone\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Email:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"emailLabel\" text\u003d\"\\$email\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Address:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"addressLabel\" text\u003d\"\\$address\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Tags:\" GridPane.rowIndex\u003d\"9\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Memo:\" GridPane.rowIndex\u003d\"11\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"memoLabel\" text\u003d\"\\$memo\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"11\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"lovemathboy"},"content":"            \u003cFlowPane fx:id\u003d\"tagsPane\" alignment\u003d\"CENTER_LEFT\" hgap\u003d\"5.0\" vgap\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"9\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"lovemathboy"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"8\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"8\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"6\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"lovemathboy"},"content":"            \u003cSeparator prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"6\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel text\u003d\"Last Contact:\" GridPane.rowIndex\u003d\"7\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"lovemathboy"},"content":"            \u003cLabel fx:id\u003d\"lastContactLabel\" text\u003d\"\\$date\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"7\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"lovemathboy"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"lovemathboy"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"lovemathboy"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"lovemathboy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"lovemathboy"},"content":"         \u003c/GridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"lovemathboy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"lovemathboy"},"content":"   \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"lovemathboy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"lovemathboy":122}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"lovemathboy"},"content":"\u003cfx:root maxHeight\u003d\"800.0\" maxWidth\u003d\"1200.0\" minHeight\u003d\"700.0\" minWidth\u003d\"800.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"AddressBook π\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" maxHeight\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.29797979797979796\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"              \u003citems\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"                \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"200.0\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"lovemathboy"},"content":"                    \u003cVBox fx:id\u003d\"personList\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"340\" prefHeight\u003d\"600.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"                \u003cAnchorPane minWidth\u003d\"300.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"lovemathboy"},"content":"                    \u003cStackPane fx:id\u003d\"detailedPersonDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"              \u003c/items\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"lovemathboy"},"content":"            \u003cAnchorPane prefHeight\u003d\"100.0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"lovemathboy"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"lovemathboy"},"content":"                  \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"lovemathboy"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"lovemathboy"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"lovemathboy"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"lovemathboy"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"lovemathboy"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"lovemathboy"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"              \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"39.0\" prefWidth\u003d\"664.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"lovemathboy":12,"-":43,"tandeshao":21}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"      \u003cLabel fx:id\u003d\"contactedDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contactedDate\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"      \u003cHBox fx:id\u003d\"memoBox\" spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"atmh":2,"-":36}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"lovemathboy"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"lovemathboy":1,"-":6,"tandeshao":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACTED_DATE_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMO_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_AMY + CONTACTED_DATE_DESC_AMY + MEMO_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"atmh":4,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"atmh":1,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.property.ReadOnlyProperty;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"lovemathboy"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code AddCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    public void execute_differentNameDuplicatePhone_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"        // Duplicate phone number.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"        Person invalidPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"        AddCommand addCommand \u003d new AddCommand(invalidPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"    public void execute_differentNameDuplicateEmail_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"        // Duplicate email.","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        Person invalidPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"        AddCommand addCommand \u003d new AddCommand(invalidPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"    public void execute_differentNameDuplicatePhoneAndEmail_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"        // Duplicate email.","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        Person invalidPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"        AddCommand addCommand \u003d new AddCommand(invalidPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"        public boolean hasPersonExcept(Person person, Person except) {","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"lovemathboy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"lovemathboy"},"content":"        public void updatePersonOnDisplay(Person person) {","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"lovemathboy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"lovemathboy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"lovemathboy"},"content":"        public ReadOnlyProperty\u003cPerson\u003e getPersonOnDisplay() {","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"lovemathboy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"lovemathboy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"lovemathboy"},"content":"        public void addPersonOnDisplayListener(ChangeListener\u003c? super Person\u003e listener) {","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"lovemathboy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"lovemathboy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"atmh"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"atmh"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"atmh"},"content":"        public void saveAddressBookState() {","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"atmh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"tandeshao"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"tandeshao"},"content":"        public void deleteAllPerson(ObservableList\u003cPerson\u003e list) {","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"tandeshao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"atmh"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":283,"author":{"gitId":"atmh"},"content":"        public void saveAddressBookState() {","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"atmh"},"content":"            // invoked by {@code AddCommand#execute()}","lastModifiedDate":"2022-03-19"},{"lineNumber":285,"author":{"gitId":"lovemathboy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"xpzmichael":1,"atmh":71,"lovemathboy":22,"-":194,"tandeshao":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"atmh":2,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":"public class CommandListTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"    public void resetPointer_onEmptyList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"        assertEquals(0, CommandList.getList().getPointer());","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"    public void resetPointer_success() throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John1\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John2\");","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        assertEquals(4, CommandList.getList().getPointer());","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"    public void getCurrentCommand_success() throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John1\");","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John2\");","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().decreasePointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"        assertEquals(\"find n/ John4\", CommandList.getList().getCurrentCommand());","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"    public void getCurrentCommand_fail() throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John1\");","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John2\");","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e CommandList.getList().getCurrentCommand());","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"xpzmichael"},"content":"    public void getCurrentCommand_onEmptyList_fail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e CommandList.getList().getCurrentCommand());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"xpzmichael"},"content":"    public void decreasePointer_onEmptyList_fail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(CommandException.class, () -\u003e CommandList.getList().decreasePointer());","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"xpzmichael"},"content":"    public void increasePointer_onEmptyList_fail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(CommandException.class, () -\u003e CommandList.getList().increasePointer());","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"xpzmichael":64}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", CommandRemark.UI_IRRELEVANT)));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandRemark.EXIT)));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandRemark.HELP)));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandRemark.HISTORY)));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"xpzmichael"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandRemark.HELP).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"xpzmichael"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandRemark.EXIT).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"xpzmichael"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"xpzmichael"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandRemark.HISTORY).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"xpzmichael":11,"-":52}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.MemoUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"    public static final String VALID_CONTACTED_DATE_AMY \u003d \"01-01-2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    public static final String VALID_CONTACTED_DATE_BOB \u003d \"20-03-2021\";","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"    public static final String VALID_MEMO_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"    public static final String VALID_MEMO_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"    public static final String VALID_TAG_COLLEAGUE \u003d \"colleague\";","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"    public static final String VALID_TAG_WIFE \u003d \"wife\";","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"    public static final String VALID_TAG_COMPANION \u003d \"companion\";","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    public static final String CONTACTED_DATE_DESC_AMY \u003d \" \" + PREFIX_CONTACTED_DATE + VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"    public static final String CONTACTED_DATE_DESC_BOB \u003d \" \" + PREFIX_CONTACTED_DATE + VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"    public static final String MEMO_DESC_AMY \u003d \" \" + PREFIX_MEMO + VALID_MEMO_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"    public static final String MEMO_DESC_BOB \u003d \" \" + PREFIX_MEMO + VALID_MEMO_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\";","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"    // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\";","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"    // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    // empty string not allowed for addresses","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"    // violates the dd-mm-yyyy format","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_CONTACTED_DATE_DESC \u003d \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"            + PREFIX_CONTACTED_DATE + \"11 Dec 2021\";","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"    // exceeds the maximum number of characters allowed for memo","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_MEMO_DESC \u003d \" \" + PREFIX_MEMO + MemoUtil.LONGER_THAN_MAXIMUM_MEMO_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"    // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\";","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withContactedDate(VALID_CONTACTED_DATE_AMY)","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"                .withMemo(VALID_MEMO_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withContactedDate(VALID_CONTACTED_DATE_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"                .withMemo(VALID_MEMO_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"tandeshao"},"content":"        String args \u003d \" n/\" + splitName[0];","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(args, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tandeshao"},"content":"        model.updateFilteredPersonList(new FindPersonPredicate(descriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"     * Edits the first person in {@code model}.","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"     * @param model model.","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"    public static void editFirstPerson(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"        PersonBuilder personBuilder \u003d new PersonBuilder(person);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d personBuilder.withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"     * Deletes the first person in {@code model}.","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"     * @param model model.","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"    public static void deleteFirstPerson(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"        model.deletePerson(person);","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"     * Adds a person in {@code model}.","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"     * @param model model.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"    public static void addDefaultPerson(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"     * Clears the address book in {@code model}.","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"atmh"},"content":"     * @param model model.","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"atmh"},"content":"    public static void clear(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"atmh"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"atmh":84,"-":113,"tandeshao":10}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"atmh":2,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COLLEAGUE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COMPANION;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WIFE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteTagCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    public void execute_oneExistingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withTags(VALID_TAG_COLLEAGUE, VALID_TAG_WIFE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"    public void execute_multipleExistingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withTags(VALID_TAG_WIFE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_COLLEAGUE));","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"    public void execute_noTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"    public void execute_oneMissingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_MISSING_TAG, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"    public void execute_twoMissingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_COMPANION));","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_MISSING_TAG, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"    public void execute_oneMissingTagFollowedByOneExistingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e missingTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"        missingTags.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_MISSING_TAG, missingTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"    public void execute_oneExistingTagFollowedByOneMissingTagSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e missingTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"        missingTags.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_MISSING_TAG, missingTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"    public void execute_oneExistingTagSpecifiedFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withTags(VALID_TAG_COLLEAGUE, VALID_TAG_WIFE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"atmh"},"content":"        final DeleteTagCommand standardCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"atmh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e copyTagsToDelete \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand commandWithSameValues \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, copyTagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"atmh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"atmh"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"        assertFalse(standardCommand.equals(new DeleteTagCommand(INDEX_SECOND_PERSON, tagsToDelete)));","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"        // different tags to delete -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"        assertFalse(standardCommand.equals(new DeleteTagCommand(INDEX_SECOND_PERSON, new HashSet\u003c\u003e())));","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"atmh":224}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code EditCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"                .withContactedDate(VALID_CONTACTED_DATE_BOB).withMemo(VALID_MEMO_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"                .withPhone(VALID_PHONE_BOB).withContactedDate(VALID_CONTACTED_DATE_BOB).withMemo(VALID_MEMO_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    public void execute_editValidNotEmptyContactedDateUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withContactedDate(VALID_CONTACTED_DATE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"                .withContactedDate(VALID_CONTACTED_DATE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"    public void execute_editValidEmptyContactedDateUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withContactedDate(\"\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withContactedDate(\"\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"    public void execute_editValidNotEmptyMemoUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMemo(VALID_MEMO_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withMemo(VALID_MEMO_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"    public void execute_editValidEmptyMemoUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMemo(\"\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withMemo(\"\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"    public void execute_duplicatePhoneUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(secondPerson)","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"                .withPhone(firstPerson.getPhone().toString()).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"    public void execute_duplicateEmailUnfilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(secondPerson)","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"                .withEmail(firstPerson.getEmail().toString()).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"    public void execute_editValidNotEmptyContactedDateFilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withContactedDate(VALID_CONTACTED_DATE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"                .withContactedDate(VALID_CONTACTED_DATE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"    public void execute_editValidEmptyContactedDateFilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withContactedDate(\"\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withContactedDate(\"\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"atmh"},"content":"    public void execute_editValidNotEmptyMemoFilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMemo(VALID_MEMO_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withMemo(VALID_MEMO_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":249,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"atmh"},"content":"    public void execute_editValidEmptyMemoFilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":255,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"atmh"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMemo(\"\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withMemo(\"\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"atmh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"atmh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"atmh"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-19"},{"lineNumber":266,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":274,"author":{"gitId":"atmh"},"content":"        // edit person in filtered list into a duplicate in address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":276,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(personInList).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"atmh"},"content":"    public void execute_duplicatePhoneFilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"atmh"},"content":"        // edit person in filtered list into a duplicate (phone) in address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"atmh"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"atmh"},"content":"                new EditPersonDescriptorBuilder(firstPerson).withPhone(personInList.getPhone().toString()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"atmh"},"content":"    public void execute_duplicateEmailFilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"atmh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"atmh"},"content":"        // edit person in filtered list into a duplicate (email) in address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"atmh"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"atmh"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"atmh"},"content":"        EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"atmh"},"content":"                new EditPersonDescriptorBuilder(firstPerson).withEmail(personInList.getEmail().toString()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"atmh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"atmh":190,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        // different memo -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMemo(VALID_MEMO_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"atmh":5,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandRemark.EXIT);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xpzmichael":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    public void equals_sameFindCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        String withAll \u003d \" n/Alex\" + \" p/90100102\" + \" e/tester@mail.com\" + \" a/QueensTown blk 200 singapore 123123\"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"                + \" t/friends colleagues\" + \" m/Close contract today\";","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap withAllDescriptor \u003d ArgumentTokenizer.tokenize(withAll, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        FindCommand withAllFindCommand \u003d new FindCommand(new FindPersonPredicate(withAllDescriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        String withName \u003d \" n/Alex bob\";","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap withNameDescriptor \u003d ArgumentTokenizer.tokenize(withName, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        FindCommand withNameFindCommand \u003d new FindCommand(new FindPersonPredicate(withNameDescriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        assertEquals(withAllFindCommand, withAllFindCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        assertEquals(withNameFindCommand, withNameFindCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        String emptyInput \u003d \"n/tester\";","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap emptyDescriptor \u003d ArgumentTokenizer.tokenize(emptyInput, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        FindCommand command \u003d new FindCommand(new FindPersonPredicate(emptyDescriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        expectedModel.updateFilteredPersonList(new FindPersonPredicate(emptyDescriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        // Since it is an empty predicate, it should return 0 person found","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d preparePredicate();","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     * Prepares a PersonPredicate for testing.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"    private FindPersonPredicate preparePredicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" n/ Kurz n/Elle n/Kunz\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        return new FindPersonPredicate(descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":50,"tandeshao":27}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, CommandRemark.HELP);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xpzmichael":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/NextCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"public class NextCommandTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"    public void execute_nextCommand_success() throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John1\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John2\");","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().decreasePointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(PreviousCommand.MESSAGE_ON_HISTORY_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"                CommandRemark.HISTORY);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"xpzmichael"},"content":"        assertCommandSuccess(new PreviousCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"    public void execute_noNextCommand_fail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(CommandException.class, NextCommand.MESSAGE_ON_NO_NEXT, () -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"                new NextCommand().execute(model));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"xpzmichael":44}},{"path":"src/test/java/seedu/address/logic/commands/PreviousCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xpzmichael"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"xpzmichael"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"xpzmichael"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"xpzmichael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.CommandRemark;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"xpzmichael"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"xpzmichael"},"content":"public class PreviousCommandTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"xpzmichael"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"xpzmichael"},"content":"    public void execute_previousForFourCommands_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John1\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John2\");","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().record(\"find n/ John4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"xpzmichael"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"xpzmichael"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(PreviousCommand.MESSAGE_ON_HISTORY_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"xpzmichael"},"content":"                CommandRemark.HISTORY);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"xpzmichael"},"content":"        assertCommandSuccess(new PreviousCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"xpzmichael"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"xpzmichael"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"xpzmichael"},"content":"    public void execute_noPreviousCommand_fail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().clearAllCommands();","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"xpzmichael"},"content":"        CommandList.getList().resetPointer();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"xpzmichael"},"content":"        assertThrows(CommandException.class, PreviousCommand.MESSAGE_ON_NO_PREVIOUS, () -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"xpzmichael"},"content":"                new PreviousCommand().execute(model));","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"xpzmichael"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"xpzmichael"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"xpzmichael":42}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.addDefaultPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clear;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.editFirstPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code RedoCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"public class RedoCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"        editFirstPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"        addDefaultPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"        clear(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"        undoToFirst(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        editFirstPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        addDefaultPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        clear(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        undoToFirst(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    public void execute_fourRedoableStates_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        // four redoable states in model, redos editFirstPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        // three redoable states in model, redos deleteFirstPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        // two redoable states in model, redos addDefaultPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        // one redoable state in model, redos clear.","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        // zero redoable states in model","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_REDO_EMPTY);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"     * Restores the {@code Model}\u0027s {@code StateAddressBook} to its first state,","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"     * i.e., the state at index 0 of {@code stateAddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"     * @param model model.","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"    private void undoToFirst(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        while (model.canUndoAddressBook()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"            model.undoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"atmh":75}},{"path":"src/test/java/seedu/address/logic/commands/ScrubCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.ScrubPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"class ScrubCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    void execute_partialEmail() {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        String expectedMessage \u003d String.format(ScrubCommand.MESSAGE_SCRUB_SUCCESS, 7);","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        String partialEmailDescription \u003d \" e/@example\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap partialEmailDescriptor \u003d ArgumentTokenizer.tokenize(partialEmailDescription, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        testExecuteMethod(partialEmailDescriptor, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    void execute_fullEmail() {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        String expectedMessage \u003d String.format(ScrubCommand.MESSAGE_SCRUB_SUCCESS, 7);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        String fullEmailDescription \u003d \" e/@example.com\";","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap fullEmailDescriptor \u003d ArgumentTokenizer.tokenize(fullEmailDescription, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        testExecuteMethod(fullEmailDescriptor, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    void execute_singlePhone() {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        String expectedMessage \u003d String.format(ScrubCommand.MESSAGE_SCRUB_SUCCESS, 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        String phoneDescription \u003d \" p/94351253\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap phoneDescriptor \u003d ArgumentTokenizer.tokenize(phoneDescription, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        testExecuteMethod(phoneDescriptor, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"    private void testExecuteMethod(ArgumentMultimap phoneDescriptor, String expectedMessage) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate predicate \u003d new ScrubPersonPredicate(phoneDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        ScrubCommand command \u003d new ScrubCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        deletePersonProtocol(expectedModel, predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    private void deletePersonProtocol(Model expectedModel, ScrubPersonPredicate predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        ObservableList\u003cPerson\u003e personQueueForDeletion \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        expectedModel.deleteAllPerson(personQueueForDeletion);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        expectedModel.saveAddressBookState();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"    void execute_multiplePhone() {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        String expectedMessage \u003d String.format(ScrubCommand.MESSAGE_SCRUB_SUCCESS, 2);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        String multiplePhoneDescription \u003d \" p/94351253 p/98765432\";","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap multiplePhoneDescriptor \u003d ArgumentTokenizer","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"                .tokenize(multiplePhoneDescription, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        testExecuteMethod(multiplePhoneDescriptor, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"    void execute_partialPhone_noDeletion() {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        String expectedMessage \u003d String.format(ScrubCommand.MESSAGE_SCRUB_SUCCESS, 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        String partialPhone \u003d \" p/9435\";","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap partialPhoneDescriptor \u003d ArgumentTokenizer.tokenize(partialPhone, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"        testExecuteMethod(partialPhoneDescriptor, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"        String description \u003d \" e/@example\";","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(description, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate predicate \u003d new ScrubPersonPredicate(argumentMultimap);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"        ScrubCommand scrubCommand \u003d new ScrubCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"        assertEquals(scrubCommand, new ScrubCommand(predicate));","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":87}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.addDefaultPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clear;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.editFirstPerson;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code UndoCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"        editFirstPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"        addDefaultPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"        clear(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"        editFirstPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        addDefaultPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        clear(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    public void execute_fourUndoableStates_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        // four undoable states in model, undos clear.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        // three undoable states in model, undos addDefaultPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        // two undoable states in model, undos deleteFirstPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        // one undoable state in model, undos editFirstPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        // zero undoable states in model","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_EMPTY);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"atmh":61}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACTED_DATE_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACTED_DATE_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CONTACTED_DATE_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEMO_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMO_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMO_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code AddCommandParser}.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        // multiple contacted date - last contacted date accepted","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"                        + CONTACTED_DATE_DESC_AMY + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        // multiple memo - last memo accepted","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_AMY + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"                + TAG_DESC_HUSBAND + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_AMY + MEMO_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"        // invalid contacted date","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"                + INVALID_CONTACTED_DATE_DESC + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"                ContactedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"        // invalid memo","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + INVALID_MEMO_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"                Memo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"atmh":56,"-":127}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.CopyEmailsCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.NextCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.PreviousCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    public void parseCommand_clearWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"                ClearCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"                EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"                        + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"    public void parseCommand_addTag() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        tagsToAdd.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"        AddTagCommand command \u003d (AddTagCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"                AddTagCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"                        + PREFIX_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddTagCommand(INDEX_FIRST_PERSON, tagsToAdd), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    public void parseCommand_deleteTag() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand command \u003d (DeleteTagCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"                DeleteTagCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"                        + PREFIX_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        assertEquals(new DeleteTagCommand(INDEX_FIRST_PERSON, tagsToDelete), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"    public void parseCommand_exitWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"                ExitCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"tandeshao"},"content":"        String args \u003d \" n/\" + String.join(\" \", keywords);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(args, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tandeshao"},"content":"        String constructedArgs \u003d FindCommand.COMMAND_WORD + \" n/\" + String.join(\" \", keywords);","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"tandeshao"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(constructedArgs);","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new FindCommand(new FindPersonPredicate(descriptor)), command);","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"    public void parseCommand_helpWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"    public void parseCommand_listWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"                ListCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"    public void parseCommand_undoWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"                UndoCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"    public void parseCommand_redoWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"                RedoCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"    public void parseCommand_copyEmails() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"        assertTrue(parser.parseCommand(CopyEmailsCommand.COMMAND_WORD) instanceof CopyEmailsCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"    public void parseCommand_copyEmailsWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"                CopyEmailsCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(CopyEmailsCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"    public void parseCommand_previous() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"        assertTrue(parser.parseCommand(PreviousCommand.COMMAND_WORD) instanceof PreviousCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"    public void parseCommand_previousWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"                PreviousCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(PreviousCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"    public void parseCommand_next() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"        assertTrue(parser.parseCommand(NextCommand.COMMAND_WORD) instanceof NextCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"    public void parseCommand_nextWithTrailingCharacters_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"                NextCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(NextCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"tandeshao"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"tandeshao"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"atmh":109,"-":92,"tandeshao":12}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentMultimapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"class ArgumentMultimapTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    private final Prefix emptyPrefix \u003d new Prefix(\"\");","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    private final Prefix validPrefix \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    void put_validArguments_isPresent() {","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap emptyMultiMap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        String emptyPutMessage \u003d \"Empty String inserted.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        emptyMultiMap.put(emptyPrefix, emptyPutMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertTrue(emptyMultiMap.getValue(emptyPrefix).isPresent());","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap validMultiMap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        String dummyMessage \u003d \"Some message inserted.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        validMultiMap.put(validPrefix, dummyMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        assertTrue(validMultiMap.getValue(validPrefix).isPresent());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    void getAllValues_validInputs() {","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap testMap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        // When value is not null -\u003e should return value","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        List\u003cString\u003e listOfTestStrings \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        String firstTestString \u003d \"This is a test string number 1.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        String secondTestString \u003d \"This is a test string number 2.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        listOfTestStrings.add(firstTestString);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        listOfTestStrings.add(secondTestString);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        testMap.put(validPrefix, firstTestString);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        testMap.put(validPrefix, secondTestString);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        assertEquals(testMap.getAllValues(validPrefix), listOfTestStrings);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    void isEmpty() {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap testMap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        assertTrue(testMap.isEmpty());","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        testMap.put(validPrefix, \"\");","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        assertFalse(testMap.isEmpty());","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"    void getPreamble() {","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        String preambleString \u003d \"preamble text here\";","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        String validPrefixString \u003d \" a/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap testMap \u003d ArgumentTokenizer.tokenize(preambleString + validPrefixString, PREFIX_NAME,","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MEMO);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        assertEquals(testMap.getPreamble(), preambleString);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tandeshao":67}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"            boolean b \u003d expectedCommand.equals(command);","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":38,"tandeshao":1}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code DeleteTagCommandParse}.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        // no index specified","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        // no field specified","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\", DeleteTagCommand.MESSAGE_MISSING_PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        // negative index","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        // zero index","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"0\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        // overflow max integer","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"2147483648\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"    public void parse_invalidTagFollowedByValidTag_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC + TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"    public void parse_validTagFollowedByInvalidTag_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    public void parse_oneTagSpecified_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand expectedCommand \u003d new DeleteTagCommand(targetIndex, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"    public void parse_multipleTagsSpecified_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand expectedCommand \u003d new DeleteTagCommand(targetIndex, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"    public void parse_multipleRepeatedTagsSpecified_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"        tagsToDelete.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        DeleteTagCommand expectedCommand \u003d new DeleteTagCommand(targetIndex, tagsToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"atmh":117}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACTED_DATE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACTED_DATE_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CONTACTED_DATE_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEMO_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMO_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMO_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code EditCommandParser}.","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"        // overflow max integer","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"2147483648\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CONTACTED_DATE_DESC,","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"                ContactedDate.MESSAGE_CONSTRAINTS); // invalid contacted date","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEMO_DESC, Memo.MESSAGE_CONSTRAINTS); // invalid memo","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + CONTACTED_DATE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"                + MEMO_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"                .withContactedDate(VALID_CONTACTED_DATE_AMY).withMemo(VALID_MEMO_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"        // contacted date","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        userInput \u003d targetIndex.getOneBased() + CONTACTED_DATE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withContactedDate(VALID_CONTACTED_DATE_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"        // memo","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"        userInput \u003d targetIndex.getOneBased() + MEMO_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMemo(VALID_MEMO_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"atmh"},"content":"                + CONTACTED_DATE_DESC_AMY + MEMO_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"                + EMAIL_DESC_AMY + CONTACTED_DATE_DESC_AMY + MEMO_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"                + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + CONTACTED_DATE_DESC_BOB + MEMO_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withContactedDate(VALID_CONTACTED_DATE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"                .withMemo(VALID_MEMO_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"atmh":41,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.commands.FindCommand.NO_PREFIX_MESSAGE;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        // Empty input -\u003e should result in parse failure","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        // Invalid prefix -\u003e should result in parse failure","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"find z/ test1 s/test2\", NO_PREFIX_MESSAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        // Stand-alone command -\u003e should result in pare failure","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"find \", NO_PREFIX_MESSAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        // Special characters for ContactedDate -\u003e should result in pare failure","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"find c/@\", FindCommandParser.MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        // Negative integer values for ContactedDate -\u003e should result in pare failure","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"find c/-1\", FindCommandParser.MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        // Positive value above 2147483647 is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"find c/2147483648\", FindCommandParser.MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, \" n/Alex bob\", prepareFindCommand(\" n/Alex bob\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, \" c/1\", prepareFindCommand(\" c/1\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        String argToBeTested \u003d \" n/ Alex bob\";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, \" n/\\n Alex \\n \\t bob \\t\", prepareFindCommand(argToBeTested));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        // Max positive integer values -\u003e parse successful.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        String argWithMaxPositiveInteger \u003d \" c/2147483647\";","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, argWithMaxPositiveInteger, prepareFindCommand(argWithMaxPositiveInteger));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        // Blank argument -\u003e parse successful.","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        String contactedDateArgWithNoArgument \u003d \" n/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, contactedDateArgWithNoArgument, prepareFindCommand(contactedDateArgWithNoArgument));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        // Multiple blank argument -\u003e parse successful.","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        String multipleBlankArg \u003d \"n/ e/ p/ a/ t/ m/ c/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, multipleBlankArg, prepareFindCommand(multipleBlankArg));","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        // Special characters in Find -\u003e parse successful.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        String specialCharactersArg \u003d \" n/! e/@ p/`\";","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, specialCharactersArg, prepareFindCommand(specialCharactersArg));","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     * Prepares the FindCommand for testing.","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     * @param userFindCommandArgs  User argument that is passed into the FindCommandParser.","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @return A valid FindCommand that is derived from the user argument.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"    private FindCommand prepareFindCommand(String userFindCommandArgs) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(userFindCommandArgs, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d new FindPersonPredicate(descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        return new FindCommand(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"-":24,"tandeshao":54}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.MemoUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"    private static final String INVALID_CONTACTED_DATE \u003d \"01/01/2022\";","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    private static final String INVALID_MEMO \u003d MemoUtil.LONGER_THAN_MAXIMUM_MEMO_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    private static final String VALID_CONTACTED_DATE \u003d \"01-01-2022\";","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    private static final String VALID_EMPTY_CONTACTED_DATE \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    private static final String VALID_MEMO \u003d \"Avid hiker\";","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    private static final String VALID_EMPTY_MEMO \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"    public void parseContactedDate_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseContactedDate((String) null));","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"    public void parseContactedDate_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactedDate(INVALID_CONTACTED_DATE));","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"    public void parseContactedDate_validValueWithoutWhitespace_returnsContactedDate() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"        ContactedDate expectedContactedDate \u003d new ContactedDate(VALID_CONTACTED_DATE);","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"        assertEquals(expectedContactedDate, ParserUtil.parseContactedDate(VALID_CONTACTED_DATE));","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"    public void parseContactedDate_validValueWithWhitespace_returnsTrimmedContactedDate() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"        String contactedDateWithWhitespace \u003d WHITESPACE + VALID_CONTACTED_DATE + WHITESPACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"        ContactedDate expectedContactedDate \u003d new ContactedDate(VALID_CONTACTED_DATE);","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"        assertEquals(expectedContactedDate, ParserUtil.parseContactedDate(contactedDateWithWhitespace));","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"    public void parseContactedDate_validEmptyString_returnsEmptyContactedDate() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        ContactedDate expectedEmptyContactedDate \u003d new ContactedDate(VALID_EMPTY_CONTACTED_DATE);","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"        ContactedDate parsedContactedDate \u003d ParserUtil.parseContactedDate(VALID_EMPTY_CONTACTED_DATE);","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"        assertEquals(parsedContactedDate, expectedEmptyContactedDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"        assertEquals(parsedContactedDate, ContactedDate.EMPTY_CONTACTED_DATE);","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"    public void parseMemo_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMemo((String) null));","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"    public void parseMemo_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMemo(INVALID_MEMO));","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"    public void parseMemo_validValueWithoutWhitespace_returnsMemo() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"atmh"},"content":"        Memo expectedMemo \u003d new Memo(VALID_MEMO);","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"        assertEquals(expectedMemo, ParserUtil.parseMemo(VALID_MEMO));","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"    public void parseMemo_validValueWithWhitespace_returnsTrimmedMemo() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"        String memoWithWhitespace \u003d WHITESPACE + VALID_MEMO + WHITESPACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"atmh"},"content":"        Memo expectedMemo \u003d new Memo(VALID_MEMO);","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"atmh"},"content":"        assertEquals(expectedMemo, ParserUtil.parseMemo(memoWithWhitespace));","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"    public void parseMemo_validEmptyString_returnsEmptyMemo() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"        Memo expectedEmptyMemo \u003d new Memo(VALID_EMPTY_MEMO);","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"atmh"},"content":"        Memo parsedMemo \u003d ParserUtil.parseMemo(VALID_EMPTY_MEMO);","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"        assertEquals(parsedMemo, expectedEmptyMemo);","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"        assertEquals(parsedMemo, Memo.EMPTY_MEMO);","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"atmh":71,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/PersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"class PersonDescriptorTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    void getAllAvailablePrefix() {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        List\u003cPrefix\u003e expectedPrefixList \u003d Arrays.asList(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" e/test1 n/test2 p/test3\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertEquals(expectedPrefixList, descriptor.getAllAvailablePrefix());","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    void isEmpty() {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap emptyDescriptor \u003d ArgumentTokenizer.tokenize(\" \", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap populatedDescriptor \u003d ArgumentTokenizer.tokenize(\" n/ test1 \", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        assertTrue(emptyDescriptor.hasNoValidPrefix());","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        assertFalse(populatedDescriptor.hasNoValidPrefix());","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    void getDescription() {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap dummyDescriptor \u003d ArgumentTokenizer.tokenize(\" n/ test statement \", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"test statement\", dummyDescriptor.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" n/ test statement \", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap duplicatedDescriptor \u003d ArgumentTokenizer.tokenize(\" n/ test statement \", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap differentDescriptor \u003d ArgumentTokenizer.tokenize(\" n/ test statement 1\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        assertEquals(descriptor, duplicatedDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(descriptor, differentDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":48}},{"path":"src/test/java/seedu/address/logic/parser/PrefixTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"class PrefixTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"    void getPrefix_validPrefix_equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"        String tagString \u003d \"t/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        Prefix emptyPrefix \u003d new Prefix(\"\");","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"        Prefix tagPrefix \u003d new Prefix(tagString);","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"        assertEquals(emptyPrefix.getPrefix(), emptyString);","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        assertEquals(tagPrefix.getPrefix(), tagString);","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    void getPrefix_validPrefix_notEquals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        String tagString \u003d \"t/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        String addressString \u003d \"a/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        Prefix emptyPrefix \u003d new Prefix(\"\");","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        Prefix tagPrefix \u003d new Prefix(tagString);","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(emptyPrefix.getPrefix(), tagString);","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(tagPrefix.getPrefix(), addressString);","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    void hashCode_anyString_equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        String randomInputString \u003d \"1234214214\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        String validInputString \u003d \"n/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        Prefix randomStringPrefix \u003d new Prefix(randomInputString);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        assertEquals(randomStringPrefix.hashCode(), randomInputString.hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        Prefix validStringPrefix \u003d new Prefix(validInputString);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        assertEquals(validStringPrefix.hashCode(), validInputString.hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    void hashCode_anyString_notEquals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        String randomString \u003d \"1234214214\";","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        String validString \u003d \"a/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        String randomStringComparison \u003d \"123431351\";","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        String validStringComparison \u003d \"n/\";","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        Prefix randomStringPrefix \u003d new Prefix(randomString);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(randomStringPrefix.hashCode(), randomStringComparison.hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        Prefix validStringPrefix \u003d new Prefix(validString);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(validStringPrefix.hashCode(), validStringComparison.hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    void equals_anyString_equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        // Comparison between 2 identical and valid prefix should return true.","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"a/\"), new Prefix(\"a/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"t/\"), new Prefix(\"t/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"n/\"), new Prefix(\"n/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"m/\"), new Prefix(\"m/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"e/\"), new Prefix(\"e/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"p/\"), new Prefix(\"p/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        // Comparison between 2 identical but random string values should return true,","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        assertEquals(new Prefix(\"12345\"), new Prefix(\"12345\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    void equals_anyString_notEquals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        // Different prefix should not be equal to each other.","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"a/\"), new Prefix(\"t/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"t/\"), new Prefix(\"n/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"n/\"), new Prefix(\"m/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"m/\"), new Prefix(\"e/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"e/\"), new Prefix(\"p/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"p/\"), new Prefix(\"a/\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"        // Different prefix with 2 different string values should not be identical.","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(new Prefix(\"1234\"), new Prefix(\"12\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tandeshao":79}},{"path":"src/test/java/seedu/address/logic/parser/ScrubCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.commands.ScrubCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.ScrubPersonPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"class ScrubCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    private final ScrubCommandParser parser \u003d new ScrubCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        String invalidArgMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScrubCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \"     \", invalidArgMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \" a/tester st 123\", invalidArgMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \" e/@gmail.com n/hello\", invalidArgMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \" a/tester st 123 n/hello\", invalidArgMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \" e/tester@gmail.com\", ScrubCommand.MESSAGE_WRONG_DOMAIN_FORMAT);","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        assertParseFailure(parser, \" e/@gmail.com e/tester@gmail.com\", ScrubCommand.MESSAGE_WRONG_DOMAIN_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    void parse_validArgs_returnsScrubCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        String validPhone \u003d \" p/90400204\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap validPhoneMap \u003d ArgumentTokenizer.tokenize(validPhone, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate validPhonePredicate \u003d new ScrubPersonPredicate(validPhoneMap);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        ScrubCommand validScrubPhoneCommand \u003d new ScrubCommand(validPhonePredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, validPhone, validScrubPhoneCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        String multiplePhone \u003d \" p/90400204 p/90400203\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap validMultiplePhone \u003d ArgumentTokenizer.tokenize(multiplePhone, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate validMultiplePhonePredicate \u003d new ScrubPersonPredicate(validMultiplePhone);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        ScrubCommand validMultiplePhoneCommand \u003d new ScrubCommand(validMultiplePhonePredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, multiplePhone, validMultiplePhoneCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        String multipleEmail \u003d \" e/@mail.com e/@example\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap validMultipleEmail \u003d ArgumentTokenizer.tokenize(multipleEmail, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate validMultipleEmailPredicate \u003d new ScrubPersonPredicate(validMultipleEmail);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        ScrubCommand validMultipleEmailCommand \u003d new ScrubCommand(validMultipleEmailPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        assertParseSuccess(parser, multipleEmail, validMultipleEmailCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":47}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"    public void removePersons_multipleRemovalOfPersons_deletionSuccessful() {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"        addressBook.addPerson(DANIEL);","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"        addressBook.addPerson(BENSON);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"        addressBook.removePersons(ALICE, DANIEL);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"        assertTrue(addressBook.hasPerson(BOB));","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"        assertTrue(addressBook.hasPerson(BENSON));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"        assertFalse(addressBook.hasPerson(DANIEL));","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":102,"tandeshao":17}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.predicate.FindPersonPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"tandeshao"},"content":"        String keywords \u003d ALICE.getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"tandeshao"},"content":"        String args \u003d \" n/ \" + keywords;","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(args, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"        modelManager.updateFilteredPersonList(new FindPersonPredicate(descriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":138,"author":{"gitId":"tandeshao"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tandeshao"},"content":"    private static class PredicateStub implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tandeshao"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tandeshao"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tandeshao"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tandeshao"},"content":"    void deleteAllPerson_deleteAllPerson_returnZero() {","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tandeshao"},"content":"        PredicateStub predicate \u003d new PredicateStub();","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tandeshao"},"content":"        modelManager.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tandeshao"},"content":"        ObservableList\u003cPerson\u003e personQueuedForDeletion \u003d modelManager.getFilteredPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tandeshao"},"content":"        modelManager.deleteAllPerson(personQueuedForDeletion);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tandeshao"},"content":"        assertEquals(modelManager.getFilteredPersonList().size(), 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":121,"tandeshao":36}},{"path":"src/test/java/seedu/address/model/StateAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import seedu.address.model.exceptions.InvalidRedoException;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"import seedu.address.model.exceptions.InvalidUndoException;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code StateAddressBook}.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"public class StateAddressBookTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    private final ReadOnlyAddressBook emptyAddressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    private final ReadOnlyAddressBook aliceAddressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"    private final ReadOnlyAddressBook bensonAddressBook \u003d new AddressBookBuilder().withPerson(BENSON).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    private final ReadOnlyAddressBook carlAddressBook \u003d new AddressBookBuilder().withPerson(CARL).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"    private final List\u003cReadOnlyAddressBook\u003e oneState \u003d List.of(emptyAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    private final List\u003cReadOnlyAddressBook\u003e threeStates \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"            Arrays.asList(emptyAddressBook, aliceAddressBook, bensonAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"    public void isUndoable_oneAddressBookState_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    public void isRedoable_oneAddressBookState_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"    public void isUndoable_threeAddressBookStatesPointerAtEnd_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        assertTrue(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"    public void isUndoable_threeAddressBookStatesPointerAtMiddle_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        assertTrue(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"    public void isUndoable_threeAddressBookStatesPointerAtStart_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"    public void isUndoable_maxCapacityAddressBookStatesPointerAtStart_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"                setAddressBookMaxCapacity(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        stateAddressBook.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, StateAddressBook.UNDO_REDO_CAPACITY);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    public void isRedoable_threeAddressBookStatesPointerAtStart_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"        assertTrue(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"    public void isRedoable_threeAddressBookStatesPointerAtMiddle_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"        assertTrue(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    public void isRedoable_threeAddressBookStatesPointerAtEnd_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"    public void isRedoable_maxCapacityAddressBookStatesPointerAtEnd_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"                setAddressBookMaxCapacity(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"        stateAddressBook.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"    public void undo_oneAddressBookState_throwsInvalidUndoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidUndoException.class, stateAddressBook::undo);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"    public void undo_threeAddressBookPointerStatesAtStart_throwsInvalidUndoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidUndoException.class, stateAddressBook::undo);","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    public void undo_maxCapacityAddressBookStatesPointerAtStart_throwsInvalidUndoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"                setAddressBookMaxCapacity(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"        stateAddressBook.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, StateAddressBook.UNDO_REDO_CAPACITY);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidUndoException.class, stateAddressBook::undo);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"    public void redo_oneAddressBookState_throwsInvalidRedoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidRedoException.class, stateAddressBook::redo);","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"    public void redo_threeAddressBookStatesPointerAtEnd_throwsInvalidRedoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidRedoException.class, stateAddressBook::redo);","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"    public void redo_maxCapacityAddressBookStatesPointerAtEnd_throwsInvalidUndoException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"                setAddressBookMaxCapacity(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"        stateAddressBook.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"        assertThrows(InvalidRedoException.class, stateAddressBook::redo);","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"    public void saveState_oneAddressBook_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), emptyAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"atmh"},"content":"    public void saveState_threeAddressBook_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), bensonAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"atmh"},"content":"        undoToFirst(stateAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"atmh"},"content":"        for (int i \u003d 0; i \u003c threeStates.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"atmh"},"content":"            assertEquals(threeStates.get(i), new AddressBook(stateAddressBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"atmh"},"content":"            if (i !\u003d threeStates.size() - 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"atmh"},"content":"                stateAddressBook.redo();","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"atmh"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"atmh"},"content":"    public void saveState_threeAddressBookUndoRedoUndo_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), bensonAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"atmh"},"content":"        for (int i \u003d 1; i \u003c threeStates.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"atmh"},"content":"            assertEquals(threeStates.get(i), new AddressBook(stateAddressBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"atmh"},"content":"            if (i !\u003d threeStates.size() - 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"atmh"},"content":"                stateAddressBook.redo();","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"atmh"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"atmh"},"content":"    public void saveState_threeAddressBookUndoUndoSaveState_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), bensonAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"atmh"},"content":"        stateAddressBook.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"atmh"},"content":"        stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isRedoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"atmh"},"content":"        undoStates(stateAddressBook, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"atmh"},"content":"        assertEquals(new AddressBook(stateAddressBook), threeStates.get(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.isUndoable());","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"atmh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"atmh"},"content":"        // same instance -\u003e returns true.","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"atmh"},"content":"        assertEquals(stateAddressBook, stateAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"atmh"},"content":"        // null -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"atmh"},"content":"        // different class -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"atmh"},"content":"        // different class -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"atmh"},"content":"        assertFalse(stateAddressBook.equals(new ArrayList\u003cInteger\u003e()));","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"atmh"},"content":"        // same states and pointer -\u003e returns true.","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"atmh"},"content":"        StateAddressBook sameStatesSamePointer \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"atmh"},"content":"        assertEquals(stateAddressBook, sameStatesSamePointer);","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"atmh"},"content":"        // same states and different pointer index -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"atmh"},"content":"        StateAddressBook sameStatesDifferentPointer \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"atmh"},"content":"        undoStates(sameStatesDifferentPointer, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"atmh"},"content":"        assertNotEquals(stateAddressBook, sameStatesDifferentPointer);","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"atmh"},"content":"        // different states and same pointer index -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"atmh"},"content":"        StateAddressBook differentStatesSamePointer \u003d setAddressBook(threeStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"atmh"},"content":"        differentStatesSamePointer.resetData(carlAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"atmh"},"content":"        differentStatesSamePointer.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"atmh"},"content":"        undoStates(differentStatesSamePointer, 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"atmh"},"content":"        assertNotEquals(stateAddressBook, differentStatesSamePointer);","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"atmh"},"content":"        // different states and different pointer index -\u003e returns false.","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"atmh"},"content":"        StateAddressBook differentStates \u003d setAddressBook(oneState);","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"atmh"},"content":"        assertNotEquals(stateAddressBook, differentStates);","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"atmh"},"content":"     * Returns a {@code StateAddressBook} with {@code addressBookStates} added to it.","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"atmh"},"content":"     * @param addressBookStates address book states to be added.","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"atmh"},"content":"     * @return {@code StateAddressBook} with {@code addressBookStates} added to it.","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"atmh"},"content":"    private StateAddressBook setAddressBook(List\u003cReadOnlyAddressBook\u003e addressBookStates) {","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"atmh"},"content":"        assertNotEquals(0, addressBookStates.size());","lastModifiedDate":"2022-03-22"},{"lineNumber":260,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d new StateAddressBook(addressBookStates.get(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"atmh"},"content":"        for (int stateIndex \u003d 1; stateIndex \u003c addressBookStates.size(); stateIndex++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"atmh"},"content":"            stateAddressBook.resetData(addressBookStates.get(stateIndex));","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"atmh"},"content":"            stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"atmh"},"content":"        return stateAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"atmh"},"content":"     * Returns a {@code StateAddressBook} with {@code addressBookStates}","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"atmh"},"content":"     * added to it until the UNDO_REDO_CAPACITY is reached.","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"atmh"},"content":"     * @param addressBookStates address book states to be added.","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"atmh"},"content":"     * @return {@code StateAddressBook} with max capacity.","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"atmh"},"content":"    private StateAddressBook setAddressBookMaxCapacity(List\u003cReadOnlyAddressBook\u003e addressBookStates) {","lastModifiedDate":"2022-03-22"},{"lineNumber":277,"author":{"gitId":"atmh"},"content":"        assertNotEquals(0, addressBookStates.size());","lastModifiedDate":"2022-03-22"},{"lineNumber":278,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":279,"author":{"gitId":"atmh"},"content":"        StateAddressBook stateAddressBook \u003d new StateAddressBook(addressBookStates.get(0));","lastModifiedDate":"2022-03-22"},{"lineNumber":280,"author":{"gitId":"atmh"},"content":"        int stateIndex \u003d 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":281,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"atmh"},"content":"        for (int i \u003d 0; i \u003c StateAddressBook.UNDO_REDO_CAPACITY; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"atmh"},"content":"            stateAddressBook.resetData(addressBookStates.get(stateIndex));","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"atmh"},"content":"            stateAddressBook.saveState();","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"atmh"},"content":"            stateIndex \u003d (stateIndex + 1) % addressBookStates.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":287,"author":{"gitId":"atmh"},"content":"        return stateAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":289,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":290,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"atmh"},"content":"     * Restores previous states of the address book by invoking undo repeatedly, specified by undoAmount.","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":293,"author":{"gitId":"atmh"},"content":"     * @param stateAddressBook state address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":294,"author":{"gitId":"atmh"},"content":"     * @param undoAmount number of times to undo.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":296,"author":{"gitId":"atmh"},"content":"    private void undoStates(StateAddressBook stateAddressBook, int undoAmount) {","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"atmh"},"content":"        for (; undoAmount \u003e 0; undoAmount--) {","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"atmh"},"content":"            stateAddressBook.undo();","lastModifiedDate":"2022-03-22"},{"lineNumber":299,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":300,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":301,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"atmh"},"content":"     * Restores the address book to its first state,","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"atmh"},"content":"     * i.e., the state at index 0 of {@code stateAddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":306,"author":{"gitId":"atmh"},"content":"     * @param stateAddressBook state address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":307,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":308,"author":{"gitId":"atmh"},"content":"    private void undoToFirst(StateAddressBook stateAddressBook) {","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"atmh"},"content":"        while (stateAddressBook.isUndoable()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":310,"author":{"gitId":"atmh"},"content":"            stateAddressBook.undo();","lastModifiedDate":"2022-03-22"},{"lineNumber":311,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":312,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":313,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"atmh":313}},{"path":"src/test/java/seedu/address/model/person/ContactedDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code ContactedDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"public class ContactedDateTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    private final String validFormatDateString \u003d \"01-01-2020\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"    private final ContactedDate validContactedDate \u003d new ContactedDate(validFormatDateString);","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactedDate(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    public void constructor_invalidContactedDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"        // Not a date","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ContactedDate(\"1\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    public void isValidContactedDate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"        // invalid null contacted date","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        // valid empty date","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(\"\")); // empty string","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"        // invalid spaces only, such input will not occur as user input is trimmed","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\" \")); // spaces only","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"        // valid dd-MM-yyyy date that is not in the future","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(0))); // today","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(-1))); // 1 day ago","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(-10))); // 10 days ago","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(-100))); // 100 days ago","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(-1000))); // 1000 days ago","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(-10000))); // 10000 days ago","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(validFormatDateString)); // valid date string","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.isValidContactedDate(\"29-02-2020\")); // 29th February 2020, leap year","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"        // invalid dd-MM-yyyy future date","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(1))); // 1 day after","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(10))); // 10 days after","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(100))); // 100 days after","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(1000))); // 1000 days after","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(getValidCurrentDateWithDaysOffset(10000))); // 10000 days after","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        // invalid inputs that are not dates","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"1\")); // just a number","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"111111\")); // multiple numbers","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"h\")); // an alphabet","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"hello\")); // alphabets","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"-\")); // just a hyphen","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"/\")); // special character \u0027/\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"~\")); // special character \u0027~\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"        // invalid dates that do not adhere to the dd-mm-yyyy format","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01012020\")); // no hyphen","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01 01 2020\")); // spaces instead of hyphen","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01/01/2020\")); // \u0027/\u0027 instead of hyphen","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-Jan-2020\")); // month represented as alphabet","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"1-01-2020\")); // day single digit","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-1-2020\")); // month single digit","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"1-1-2020\")); // day and month single digit","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-01-20\")); // year two digit","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"1-1-20\")); // day and month single digit, year two digit","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"        // invalid dd-mm-yyyy dates that do not exist","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-13-2020\")); // 13th month","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-14-2020\")); // 14th month","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"01-30-2020\")); // 30th month","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"32-01-2020\")); // 32nd January 2020","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"32-01-2020\")); // 50th January 2020","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"30-02-2019\")); // 30th February 2020","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"        assertFalse(ContactedDate.isValidContactedDate(\"29-02-2019\")); // 29th February 2019, not a leap year","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"    public void isEmpty_notEmptyValidContactedDate_returnsFalse() {","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        assertFalse(validContactedDate.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"    public void isEmpty_emptyValidContactedDate_returnsTrue() {","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"        assertTrue(ContactedDate.EMPTY_CONTACTED_DATE.isEmpty());","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"atmh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"atmh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"        assertTrue(validContactedDate.equals(validContactedDate));","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"        ContactedDate validContactedDateCopy \u003d new ContactedDate(validContactedDate.contactedDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        assertTrue(validContactedDate.equals(validContactedDateCopy));","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"        assertFalse(validContactedDate.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"        assertFalse(validContactedDate.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        // different memo -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        ContactedDate differentValidContactedDate \u003d new ContactedDate(\"01-02-2020\");","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"        assertFalse(validContactedDate.equals(differentValidContactedDate));","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"     * Returns a valid dd-MM-yyyy date which is the current date offset by a specified number of days.","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"     * @param daysOffset Days offset from the current date.","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"     * @return Valid dd-MM-yyyy date that is the current date offset by a specified number of days.","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"    private String getValidCurrentDateWithDaysOffset(int daysOffset) {","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"        if (daysOffset \u003e\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"            date \u003d date.plusDays(daysOffset);","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"            date \u003d date.minusDays(Math.abs(daysOffset));","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"        return date.format(DateTimeFormatter.ofPattern(ContactedDate.DATE_FORMAT));","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"atmh":137}},{"path":"src/test/java/seedu/address/model/person/MemoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.MemoUtil.LONGER_THAN_MAXIMUM_MEMO_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.MemoUtil.MAXIMUM_MEMO_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"import static seedu.address.testutil.MemoUtil.SHORT_LENGTH_STRING;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":" * Contains tests for {@code Memo}.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"public class MemoTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    private final Memo validShortMemo \u003d new Memo(SHORT_LENGTH_STRING);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Memo(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    public void constructor_invalidMemo_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Memo(LONGER_THAN_MAXIMUM_MEMO_STRING));","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"    public void isValidMemo_validShortLengthMemo_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"        assertTrue(Memo.isValidMemo(SHORT_LENGTH_STRING));","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"    public void isValidMemo_validMaximumLengthMemo_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        assertTrue(Memo.isValidMemo(MAXIMUM_MEMO_STRING));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"    public void isValidMemo_invalidLongerThanMaximumLengthMemo_returnsFalse() {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        assertFalse(Memo.isValidMemo(LONGER_THAN_MAXIMUM_MEMO_STRING));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"    public void isEmpty_notEmptyValidMemo_returnsFalse() {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"        assertFalse(validShortMemo.isEmpty());","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"    public void isEmpty_emptyValidMemo_returnsTrue() {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        assertTrue(Memo.EMPTY_MEMO.isEmpty());","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        assertTrue(validShortMemo.equals(validShortMemo));","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"        Memo memoCopy \u003d new Memo(validShortMemo.memo);","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"        assertTrue(validShortMemo.equals(memoCopy));","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"atmh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"        assertFalse(validShortMemo.equals(1));","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"atmh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"        assertFalse(validShortMemo.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"        // different memo -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"        Memo differentMemo \u003d new Memo(\"Bye\");","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"atmh"},"content":"        assertFalse(validShortMemo.equals(differentMemo));","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"atmh":73}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"atmh"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"        // same name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"atmh"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"atmh":12,"-":83}},{"path":"src/test/java/seedu/address/model/person/predicate/ContactStatusMatchPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"class ContactStatusMatchPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    void test_validCases_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        Person person \u003d new PersonBuilder().withContactedDate(\"\").build();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        String arg \u003d \" c/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(arg, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        ContactedDateMatchPredicate predicate \u003d new ContactedDateMatchPredicate(descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        Person personWithTodayDate \u003d new PersonBuilder().withContactedDate(dateThatIsNDaysAgo(2)).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        String validArg \u003d \" c/2\";","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap personWithTodayDateMap \u003d ArgumentTokenizer.tokenize(validArg, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        ContactedDateMatchPredicate personWithTodayDatePredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"                new ContactedDateMatchPredicate(personWithTodayDateMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        assertTrue(personWithTodayDatePredicate.test(personWithTodayDate));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    void test_validCases_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        Person personWithTodayDate \u003d new PersonBuilder().withContactedDate(dateThatIsNDaysAgo(4)).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        String validArg \u003d \" c/5\";","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap personWithTodayDateMap \u003d ArgumentTokenizer.tokenize(validArg, ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        ContactedDateMatchPredicate personWithTodayDatePredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"                new ContactedDateMatchPredicate(personWithTodayDateMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        assertFalse(personWithTodayDatePredicate.test(personWithTodayDate));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    private String dateThatIsNDaysAgo(int n) {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        date \u003d date.minusDays(n);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        return date.format(DateTimeFormatter.ofPattern(ContactedDate.DATE_FORMAT));","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tandeshao":51}},{"path":"src/test/java/seedu/address/model/person/predicate/DomainMatchPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"class DomainMatchPredicateTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    void test_validArgs() {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"        DomainMatchPredicate partialEmailPredicate \u003d new DomainMatchPredicate(List.of(\"@mail\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        DomainMatchPredicate fullEmailPredicate \u003d new DomainMatchPredicate(List.of(\"@mail.com\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        assertTrue(partialEmailPredicate.test(new PersonBuilder().withEmail(\"tester@mail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        assertTrue(fullEmailPredicate.test(new PersonBuilder().withEmail(\"tester@mail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        assertFalse(partialEmailPredicate.test(new PersonBuilder().withEmail(\"tester@gmail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertFalse(fullEmailPredicate.test(new PersonBuilder().withEmail(\"tester@gmail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        DomainMatchPredicate multipleEmailPredicate \u003d new DomainMatchPredicate(List.of(\"@mail\", \"@gmail\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertTrue(multipleEmailPredicate.test(new PersonBuilder().withEmail(\"tester@gmail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":28}},{"path":"src/test/java/seedu/address/model/person/predicate/ExactWordMatchPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"class ExactWordMatchPredicateTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    void test_exactMatchBetweenWords_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate tagPredicate \u003d new ExactWordMatchPredicate(PREFIX_TAG, List.of(\"colleagues\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate memoPredicate \u003d new ExactWordMatchPredicate(PREFIX_MEMO, List.of(\"hello\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        // case-insensitive search -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertTrue(tagPredicate.test(new PersonBuilder().withTags(\"Colleagues\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        assertTrue(memoPredicate.test(new PersonBuilder().withMemo(\"Hello\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        // same word -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertTrue(tagPredicate.test(new PersonBuilder().withTags(\"colleagues\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        assertTrue(memoPredicate.test(new PersonBuilder().withMemo(\"hello\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    void test_exactWordMatchBetweenTwoSentences_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate addressPredicate \u003d new ExactWordMatchPredicate(PREFIX_ADDRESS, List.of(\"QueensTown\",","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"                \"street\", \"10\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate memoPredicate \u003d new ExactWordMatchPredicate(PREFIX_MEMO, List.of(\"hello\", \"my\",","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"                \"memo\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        // case-insensitive search -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        assertTrue(addressPredicate.test(new PersonBuilder().withAddress(\"Brisbane Street\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        assertTrue(memoPredicate.test(new PersonBuilder().withMemo(\"Hello world\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        // same word -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        assertTrue(addressPredicate.test(new PersonBuilder().withAddress(\"QueensTown street 10\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        assertTrue(memoPredicate.test(new PersonBuilder().withMemo(\"hello my memo\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    void test_partialWordMatch_returnsFalse() {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate tagPredicate \u003d new ExactWordMatchPredicate(PREFIX_TAG, List.of(\"fam\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate addressPredicate \u003d new ExactWordMatchPredicate(PREFIX_ADDRESS, List.of(\"Covington\",","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"                \"LA\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        // Partial word match -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        assertFalse(tagPredicate.test(new PersonBuilder().withTags(\"family\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        assertFalse(tagPredicate.test(new PersonBuilder().withTags(\"famous\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        assertFalse(addressPredicate.test(new PersonBuilder().withAddress(\"CovidTon Los Angelos\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        assertFalse(addressPredicate.test(new PersonBuilder().withAddress(\"Laos\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    void test_emptyWhiteSpaceAttribute_returnsFalse() {","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        ExactWordMatchPredicate addressPredicate \u003d new ExactWordMatchPredicate(PREFIX_ADDRESS, List.of(\"Some\", \"test\",","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"                \"value\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        assertFalse(addressPredicate.test(new PersonBuilder().withAddress(\"address\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":65}},{"path":"src/test/java/seedu/address/model/person/predicate/FindPersonPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"class FindPersonPredicateTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    void test_validPerson_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" n/alex t/colleague p/9040\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d new FindPersonPredicate(descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"a\").withPhone(\"90400204\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alex Yeoh\").withPhone(\"123\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    void test_invalidCases_returnsFalse() {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" a/streets t/colleague p/9040\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d new FindPersonPredicate(descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"street\").withPhone(\"904\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"a\").withPhone(\"123\").withTags(\"colle\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap descriptor \u003d ArgumentTokenizer.tokenize(\" n/ test\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap duplicatedDescriptor \u003d ArgumentTokenizer.tokenize(\" n/ test\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        FindPersonPredicate predicate \u003d new FindPersonPredicate(descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        assertEquals(predicate, new FindPersonPredicate(duplicatedDescriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":39}},{"path":"src/test/java/seedu/address/model/person/predicate/PartialWordMatchPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"class PartialWordMatchPredicateTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    void test_partialWordMatch_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        PartialWordMatchPredicate namePredicate \u003d new PartialWordMatchPredicate(PREFIX_NAME, List.of(\"ai\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        PartialWordMatchPredicate phonePredicate \u003d new PartialWordMatchPredicate(PREFIX_PHONE, List.of(\"9543\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        PartialWordMatchPredicate emailPredicate \u003d new PartialWordMatchPredicate(PREFIX_EMAIL, List.of(\"gmail\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        // Partial word match -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertTrue(namePredicate.test(new PersonBuilder().withName(\"Aidan\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        assertTrue(namePredicate.test(new PersonBuilder().withName(\"Abigail\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        assertTrue(namePredicate.test(new PersonBuilder().withName(\"ai\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertTrue(phonePredicate.test(new PersonBuilder().withPhone(\"12349543\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertTrue(phonePredicate.test(new PersonBuilder().withPhone(\"9543211\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        assertTrue(phonePredicate.test(new PersonBuilder().withPhone(\"11954311\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        assertTrue(emailPredicate.test(new PersonBuilder().withEmail(\"redherringmail@yahoo\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    void test_partialWordMatchBetweenSentences_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        PartialWordMatchPredicate namePredicate \u003d new PartialWordMatchPredicate(PREFIX_NAME, List.of(\"Alex\", \"Yeoh\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        assertTrue(namePredicate.test(new PersonBuilder().withName(\"alex bin tan\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        assertTrue(namePredicate.test(new PersonBuilder().withName(\"bin tan Yeoh\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    void test_invalidCases_returnsFalse() {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        PartialWordMatchPredicate namePredicate \u003d new PartialWordMatchPredicate(PREFIX_NAME, List.of(\"Alex\", \"Yeoh\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        assertFalse(namePredicate.test(new PersonBuilder().withName(\"Aleen Tan\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        assertFalse(namePredicate.test(new PersonBuilder().withName(\"Leo\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tandeshao":45}},{"path":"src/test/java/seedu/address/model/person/predicate/ScrubPersonPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static seedu.address.logic.parser.CliSyntax.ARRAY_OF_PREFIX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"class ScrubPersonPredicateTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    void test() {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap singleArgDescriptor \u003d ArgumentTokenizer.tokenize(\" e/@mail p/90400204 t/tag1\",","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"                ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap multipleArgDescriptor \u003d ArgumentTokenizer.tokenize(\" e/@mail e/@gmail p/90400204 p/90400203 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"                + \"t/tag1 t/tag2\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate singleArgPredicate \u003d new ScrubPersonPredicate(singleArgDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        assertTrue(singleArgPredicate.test(new PersonBuilder().withEmail(\"tester@mail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertTrue(singleArgPredicate.test(new PersonBuilder().withPhone(\"90400204\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        assertTrue(singleArgPredicate.test(new PersonBuilder().withTags(\"tag1\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        assertFalse(singleArgPredicate.test(new PersonBuilder().withTags(\"tag22\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate multipleArgPredicate \u003d new ScrubPersonPredicate(multipleArgDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        assertTrue(multipleArgPredicate.test(new PersonBuilder().withEmail(\"tester@gmail.com\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        assertTrue(multipleArgPredicate.test(new PersonBuilder().withPhone(\"90400203\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        assertTrue(multipleArgPredicate.test(new PersonBuilder().withTags(\"tag2\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        ArgumentMultimap multipleTagDescriptor \u003d ArgumentTokenizer.tokenize(\"t/tag1 t/tag2\", ARRAY_OF_PREFIX);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        ScrubPersonPredicate multipleTagPredicate \u003d new ScrubPersonPredicate(multipleTagDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        assertFalse(multipleTagPredicate.test(new PersonBuilder().withTags(\"tag22\").build()));","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tandeshao":36}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"import seedu.address.testutil.MemoUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"    private static final String INVALID_CONTACTED_DATE \u003d \"11 Dec 2021\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"    private static final String INVALID_MEMO \u003d MemoUtil.LONGER_THAN_MAXIMUM_MEMO_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().fullName;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().email;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().address;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"    private static final String VALID_CONTACTED_DATE \u003d BENSON.getContactedDate().contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"    private static final String VALID_MEMO \u003d BENSON.getMemo().memo;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-19"},{"lineNumber":60,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-19"},{"lineNumber":96,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-19"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"atmh"},"content":"    public void toModelType_invalidContactedDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d ContactedDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"atmh"},"content":"    public void toModelType_nullContactedDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ContactedDate.class.getSimpleName());","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"atmh"},"content":"    public void toModelType_invalidMemo_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"atmh"},"content":"                        INVALID_MEMO, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d Memo.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"atmh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"atmh"},"content":"    public void toModelType_nullMemo_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"atmh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"atmh"},"content":"                        null, VALID_TAGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"atmh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Memo.class.getSimpleName());","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"atmh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"atmh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_CONTACTED_DATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"atmh"},"content":"                        VALID_MEMO, invalidTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"atmh":69,"-":97}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"        descriptor.setContactedDate(person.getContactedDate());","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"        descriptor.setMemo(person.getMemo());","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"atmh"},"content":"     * Sets the {@code ContactedDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"atmh"},"content":"    public EditPersonDescriptorBuilder withContactedDate(String contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"atmh"},"content":"        descriptor.setContactedDate(new ContactedDate(contactedDate));","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"atmh"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"atmh"},"content":"     * Sets the {@code Memo} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"atmh"},"content":"    public EditPersonDescriptorBuilder withMemo(String memo) {","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"atmh"},"content":"        descriptor.setMemo(new Memo(memo));","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"atmh"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"atmh":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/MemoUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"atmh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":" * A utility class for Memo.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"atmh"},"content":"public class MemoUtil {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"    /** A short string. */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"atmh"},"content":"    public static final String SHORT_LENGTH_STRING \u003d \"hello world\";","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"atmh"},"content":"    /** A long string that is equal to the maximum allowed characters of {@code Memo}. */","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"atmh"},"content":"    public static final String MAXIMUM_MEMO_STRING \u003d getStringOfLength(Memo.MAXIMUM_CHARACTERS);","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"atmh"},"content":"    /** A long string that is more than the maximum allowed characters of {@code Memo}. */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"atmh"},"content":"    public static final String LONGER_THAN_MAXIMUM_MEMO_STRING \u003d getStringOfLength(Memo.MAXIMUM_CHARACTERS + 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"atmh"},"content":"     * Returns a string for that of a specified length.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"atmh"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"atmh"},"content":"     * @param length Length of the string to be created.","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"atmh"},"content":"     * @return String of a specified length.","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    private static String getStringOfLength(int length) {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"atmh"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"atmh"},"content":"            sb.append(\u0027a\u0027);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"atmh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"atmh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"atmh":32}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.ContactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import seedu.address.model.person.Memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"atmh"},"content":"    public static final String DEFAULT_CONTACTED_DATE \u003d \"01-01-2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"atmh"},"content":"    public static final String DEFAULT_MEMO \u003d \"She likes aardvarks.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"atmh"},"content":"    private ContactedDate contactedDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"atmh"},"content":"    private Memo memo;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"        contactedDate \u003d new ContactedDate(DEFAULT_CONTACTED_DATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"        memo \u003d new Memo(DEFAULT_MEMO);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"        contactedDate \u003d personToCopy.getContactedDate();","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        memo \u003d personToCopy.getMemo();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-02-19"},{"lineNumber":103,"author":{"gitId":"atmh"},"content":"     * Sets the {@code Memo} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-02-19"},{"lineNumber":105,"author":{"gitId":"atmh"},"content":"    public PersonBuilder withMemo(String memo) {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"atmh"},"content":"        this.memo \u003d new Memo(memo);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"atmh"},"content":"        return this;","lastModifiedDate":"2022-02-19"},{"lineNumber":108,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":109,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":110,"author":{"gitId":"atmh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"atmh"},"content":"     * Sets the {@code ContactedDate} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"atmh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"atmh"},"content":"    public PersonBuilder withContactedDate(String contactedDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"atmh"},"content":"        this.contactedDate \u003d new ContactedDate(contactedDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"atmh"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"atmh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"atmh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"atmh"},"content":"        return new Person(name, phone, email, address, contactedDate, memo, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"atmh":27,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"atmh"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().phone + \" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().email + \" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().address + \" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"atmh"},"content":"        sb.append(PREFIX_CONTACTED_DATE + person.getContactedDate().contactedDate + \" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"atmh"},"content":"        sb.append(PREFIX_MEMO + person.getMemo().memo + \" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.phone).append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.email).append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"atmh"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.address).append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"atmh"},"content":"        descriptor.getContactedDate().ifPresent(contactedDate -\u003e sb.append(PREFIX_CONTACTED_DATE)","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"atmh"},"content":"                .append(contactedDate.contactedDate).append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"atmh"},"content":"        descriptor.getMemo().ifPresent(memo -\u003e sb.append(PREFIX_MEMO).append(memo.memo).append(\" \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"atmh":13,"-":56}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMO_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COLLEAGUE;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"atmh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WIFE;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"atmh"},"content":"            .withPhone(\"94351253\").withContactedDate(\"20-03-2022\")","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"atmh"},"content":"            .withMemo(\"She likes aardvarks.\").withTags(VALID_TAG_FRIEND, VALID_TAG_COLLEAGUE, VALID_TAG_WIFE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"atmh"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withMemo(\"He can\u0027t take beer!\")","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"atmh"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withContactedDate(\"01-03-2021\")","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"atmh"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withContactedDate(\"28-03-2021\")","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"atmh"},"content":"            .withMemo(\"Works at Google\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"atmh"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withContactedDate(\"20-12-2020\")","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"atmh"},"content":"            .withMemo(\"Coffee connoisseur\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"atmh"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withContactedDate(\"18-02-2020\")","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"atmh"},"content":"            .withMemo(\"SAF commando officer\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"atmh"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withContactedDate(\"01-01-2022\")","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"atmh"},"content":"            .withMemo(\"Car enthusiast\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"atmh"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withContactedDate(\"\")","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"atmh"},"content":"            .withMemo(\"\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"atmh"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withContactedDate(VALID_CONTACTED_DATE_AMY)","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"atmh"},"content":"            .withMemo(VALID_MEMO_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"atmh"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withContactedDate(VALID_CONTACTED_DATE_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"atmh"},"content":"            .withMemo(VALID_MEMO_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"atmh":24,"-":64}}]
