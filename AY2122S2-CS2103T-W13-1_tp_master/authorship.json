[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103T-W13-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S2-CS2103T-W13-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"## Introduction","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"Networkers is a **desktop app for managing contacts for networks, optimised for use via a Command Line Interface (CLI)** ","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"If you can type fast, Networkers can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"## Getting Started","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"Learn how to get started with Networkers by going to our ","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"[User’s guide](https://ay2122s2-cs2103t-w13-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"## Contributing to Networkers","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"For more information on how to contribute code to our project, see our","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"[Developer’s guide](https://ay2122s2-cs2103t-w13-1.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"## About the Team","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"If you wish to know more about the team behind Networkers, see our ","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"[About us](https://ay2122s2-cs2103t-w13-1.github.io/tp/AboutUs.html) page.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"Libraries used: JavaFx, Jackson, JUnit5","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jbkim1999":21,"robinrojh":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"robinrojh":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"### Isaac Tan","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"\u003cimg src\u003d\"images/iztanpy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"[[github](https://github.com/iztanpy)]","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"[[portfolio](team/iztanpy.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"### Teo Ming Huang","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"\u003cimg src\u003d\"images/teominghuang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"[[github](http://github.com/teominghuang)]","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"[[portfolio](team/teominghuang.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"* Role: To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"* Responsibilities: To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"### Alexander Er","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"\u003cimg src\u003d\"images/aceszhenwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"[[github](https://github.com/aceszhenwei)]","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"[[portfolio](team/aceszhenwei.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"* Role: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"* Responsibilities: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"### Yong Gi Roh","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"\u003cimg src\u003d\"images/robinrojh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"[[github](https://github.com/robinrojh)]","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"[[portfolio](team/robinrojh.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"* Role: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"* Responsibilities: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"### JB Jungbae Kim","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"\u003cimg src\u003d\"images/jbkim1999.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"[[github](https://github.com/jbkim1999)]","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"[[portfolio](team/jbkim1999.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"* Role: To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"* Responsibilities: To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"iztanpy":4,"jbkim1999":8,"robinrojh":4,"teominghuang":6,"aceszhenwei":6,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"## **Introduction**","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"### **Purpose**","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"This developer\u0027s guide clarifies the project architecture as well as  software design decisions for **Networkers**.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"This guide will also look at how individual features are implemented in this project.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"*Networkers* is a **desktop app for managing contacts for network technicians,","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"optimised for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"### **Intended Audience**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"The intended audience of this document would be","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"1. Developers who are keen to contribute to Networkers","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"2. Software testers who may need to understand the project","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"   to carry out meaningful testing.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"3. Developers who are interested in learning more","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"   about the implementation of this project","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"* [addressbook 3](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"* depends on some classes in the `Model` component, as it displays `Client` object residing in the `Model`.","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2022-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":147,"author":{"gitId":"jbkim1999"},"content":"* stores the address book data i.e., all `Client` objects (which are contained in a `UniqueClientList` object).","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"jbkim1999"},"content":"* stores the currently \u0027selected\u0027 `Client` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-03-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"jbkim1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Client` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Client` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2022-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2022-03-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-03-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2022-03-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2022-03-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2022-03-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2022-03-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"jbkim1999"},"content":"### Add Procedure (AddProc)","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"aceszhenwei"},"content":"The proposed undo/redo mechanism is facilitated by `AddProcCommand`. It extends `Command` taking in a new `Procedure` and `Index` which points to the client that it wishes to edit. It will also interact with `Storage` in order to store the information about the new procedure added. This operation is exposed in the `Model` interface as `Model#setProcedures()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"aceszhenwei"},"content":"In general, the `addProc` command is a command that takes in a string with specified prefixes and a client index. It will indicate new procedures that clients have added to their procedure list. If an invalid command (whether by index or prefix error), a respective exception will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"aceszhenwei"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `addProc` API call.:","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"jbkim1999"},"content":"![AddProcCommand](images/AddProcCommand.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"aceszhenwei"},"content":"Step 1. Once the user types in the command, the `LogicManager` will be called to execute it. It will use `AddressBookParser` to parse the user command.","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"aceszhenwei"},"content":"Step 2. This results in a new `Parser` (more precisely, an object of one of its subclasses e.g., `AddProcCommandParser`) object being constructed.","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"aceszhenwei"},"content":"Step 3. This will result in a new `Procedure` object (based on the user inputs) and a new `Command` object (specifically `AddProcCommand`) being constructed.","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"aceszhenwei"},"content":"Step 4. With this, `LogicManager` will call `AddProcCommand` to execute.","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"aceszhenwei"},"content":"Step 5. Within `AddProcCommand`, it will retrieve the `Client` that needs to be added a new `Procedure` and add the new `Procedure` into its procedure list.","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"aceszhenwei"},"content":"Step 6. Once the `Client` has been updated to include the new `Procedure`, it will update `ModelManager` with the updated `Client` to reflect this change.","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"jbkim1999"},"content":"### Delete Procedures from a Client (DeleteProc)","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"jbkim1999"},"content":"The proposed deleteProc mechanism is facilitated by the `DeleteProcCommandParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"jbkim1999"},"content":"The deleteProc mechanism allows deletion of a `Procedure` from an existing `Client` in the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"jbkim1999"},"content":"The deleteProc is permanently erased and the remaining `Procedure` are stored locally after.","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"jbkim1999"},"content":"It implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"jbkim1999"},"content":"* `DeleteProcCommand#editClientProcedure(Client clientToEdit)` \u0026mdash; Edit an attribute of an existing `Client` and return a new `Client`.","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"jbkim1999"},"content":"* `DeleteProcCommand#deleteProcedure(List\u003cProcedure\u003e procedureList)` \u0026mdash; Remove a `Procedure` from the list of `Procedure`","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"jbkim1999"},"content":"* `Model#setClient(clientToEdit, editedClient)` \u0026mdash; Replace the existing `Client` with its editted variant.","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"jbkim1999"},"content":"* `Model#updateFilteredClientList(Predicate\u003cClient\u003e predicate)` \u0026mdash; Replace the existing `Client` with its editted variant in the `ObservableList`, that helps to update the UI.","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"jbkim1999"},"content":"The `editClientProcedure(Client clientToEdit)` operation is exposed in the `Model` interface as `Model#setProcedure()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"jbkim1999"},"content":"Given below is an example usage scenario and how the deleteProc mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"jbkim1999"},"content":"Step 1. The user finds the `Procedure` that the client has using `findProc \u003cIndex\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"jbkim1999"},"content":"The UI lists all the `Procedure` associated to the client and would like to delete one.","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"jbkim1999"},"content":"![DeleteProcState0](images/DeleteProcState0.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"jbkim1999"},"content":"Step 2. The user executes `deleteProc 1 1` to delete the 1st `Procedure` associated with the 1st client in the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"jbkim1999"},"content":"The `deleteProc 1 1` command calls `DeleteProcCommand#(Client clientToEdit)`, which calls the `deleteProcedure(List\u003cProcedure procedureList)` method to remove the `Procedure` from the list.","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"jbkim1999"},"content":"This newly-created `Client` is saved locally through the `Model#setClient`, and displayed by updating the `UpdateFilteredClientList`.","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"jbkim1999"},"content":"With the `Client` saved, the address book is saved at a new state.","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"jbkim1999"},"content":"![DeleteProcState1](images/DeleteProcState1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"jbkim1999"},"content":"The following sequence diagram shows how this operation works.","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"jbkim1999"},"content":"![DeleteProcSequenceDiagram](images/DeleteProcSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"jbkim1999"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"jbkim1999"},"content":"**Aspect: Will `deleteProc` permanently delete the `Procedure`**","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"jbkim1999"},"content":"* **Alternative 1 (current choice):** Deletes the entire Procedure.","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"jbkim1999"},"content":"    * Pros: Easy to implement and use less stoage.","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"jbkim1999"},"content":"    * Cons: Users might find it hard to retrieve pre-existing data of the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"jbkim1999"},"content":"* **Alternative 2:** Create a deleted status for the `Procedure` and only allow vision of undeleted `Procedure`.","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"jbkim1999"},"content":"  itself.","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"jbkim1999"},"content":"    * Pros: User could easily retrieve previous deleted data.","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"jbkim1999"},"content":"    * Cons: Can get storage-expensive, which makes future parsing slower.","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"jbkim1999"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"teominghuang"},"content":"### List Procedures By Client (ListProc)","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"robinrojh"},"content":"Lists the Procedures for the given input index of a Client.","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"robinrojh"},"content":"If the Client doesn\u0027t have any procedures, it prints out a different message indicating that. Otherwise, it will simply","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"robinrojh"},"content":"print out the success message on result window and update the right column of the UI.","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"robinrojh"},"content":"Below is the sequence diagram for executing ListProcCommand as a user.","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"robinrojh"},"content":"![ListProcCommand Sequence Diagram](images/ListProcCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"robinrojh"},"content":"Step 1: UI starts when the application starts.","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"robinrojh"},"content":"Step 2: User calls the \"listProc 1\" command","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"robinrojh"},"content":"Step 3: LogicManager handles the command from user","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"robinrojh"},"content":"Step 4: ModelManager updates the procedure list accordingly and returns to LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"robinrojh"},"content":"Step 5: UI takes the return value from LogicManager and updates the UI","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"robinrojh"},"content":"**Why did I implement ListProcCommand this way?**","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"robinrojh"},"content":"In other functions like find, it doesn\u0027t seem that an explicit UI update was necessary.","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"robinrojh"},"content":"However, even when I update the procedure list correctly, the UI didn\u0027t get updated automatically.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"robinrojh"},"content":"Therefore, after correctly updating the procedure list, I update the UI in MainWindow executeCommand method","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"robinrojh"},"content":"by creating a new ProcedureListPanel.","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"robinrojh"},"content":"![ListProcCommand Example](images/ListProcCommandExample1.PNG)","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"robinrojh"},"content":"An additional point: listProc method is called in the UI before the user can input anything to display","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"robinrojh"},"content":"the first Client\u0027s procedures. This allows the user to understand exactly what the right column is for.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":280,"author":{"gitId":"jbkim1999"},"content":"### List Procedures By Date (ListProcOn)","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"jbkim1999"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"jbkim1999"},"content":"`ListProcOn` command takes in a date (in the form of dd/mm/yyyy) and returns the Procedures and the Clients\u0027 information attached to each of the Procedure that a technician should carry out on that requested date. \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"jbkim1999"},"content":"Like other Commands, user input is first parsed by `AddressBookParser`, which is then directed to `ListProcOnCommandParser`, parsing the date into `DateWithoutTime` class, and finally passing down to `ListProcOnCommand` for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"jbkim1999"},"content":"Description of `DateWithoutTime` shall be omitted here since the class name is self-explanatory. The below class diagram illustrates such dependencies. \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"jbkim1999"},"content":"\u003cimg src\u003d\"images/ListProcOnCommandClassDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"jbkim1999"},"content":"`ListProcOnCommand` will then be executed, returning `CommandResult` that can be displayed to the users. The following sequence diagram illustrates the execution of `ListProcOnCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"jbkim1999"},"content":"\u003cimg src\u003d\"images/ListProcOnCommandSequenceDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"jbkim1999"},"content":"In short, the command will ask for all the Clients list from the `Model`, and each Client is responsible for returning Procedures that is scheduled on `targetDate`.","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"jbkim1999"},"content":"`ListProcOnCommand` aggregates them altogether and returns `CommandResult` for subsequent UI operations.","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"jbkim1999"},"content":"**Aspect: How to connect each Procedure to its associated Client:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"jbkim1999"},"content":"This aspect needs to be considered since it is not sufficient just to display all the Procedures for a given date; the user must know about the Procedure\u0027s associated Client as well for the feature to be useful.","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"jbkim1999"},"content":"* **Alternative 1 (current choice):** Uses a `Pair` container to contain both Procedure and its associated Client when aggregating.","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"jbkim1999"},"content":"    * Pros: No need to create an additional attribute for Procedure connecting to its associated Client.","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"jbkim1999"},"content":"    * Cons: May have performance issues in terms of memory usage, as `ListProcOnCommand` needs to save both the Procedure and its associated Client.","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"jbkim1999"},"content":"* **Alternative 2:** Attach an attribute to a Procedure that points to its associated Client class.","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"jbkim1999"},"content":"    * Pros: Easy to implement. (Simply an additional line of code)","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"jbkim1999"},"content":"    * Cons: Cost-related issues (e.g. time consumed for additional integration tests between Procedure and Client, as well as changes to existing tests and sample data)","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"jbkim1999"},"content":"### Calculate Cost By Date (Calculate)","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":312,"author":{"gitId":"iztanpy"},"content":"It gives functionality to the cost attribute within the procedure class by calculating total `Cost` from all procedures on a specified date.","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"iztanpy"},"content":"This provides an instance of total `Cost`, which is not stored locally.","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"iztanpy"},"content":"It implements the following operation:","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"iztanpy"},"content":"`Networkers#calculateCost(String date)` — returns total `Cost` from all procedures on a specified date.","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"iztanpy"},"content":"The operation is exposed in the `Model` interface as `Model#calculateCost()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"iztanpy"},"content":"Given below is an example usage scenario and how the calculateCost feature behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"iztanpy"},"content":"Step 1. The user would already have procedures attributed to different clients in `Networkers`","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"iztanpy"},"content":"and would want to calculate all the costs of procedures conducted today (22/03/2022)","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"iztanpy"},"content":"![CalculateCostObjectDiagram](images/CalculateCostState1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"iztanpy"},"content":"Step 2. The user executes `calculate 22/03/2022` to calculate cost of all procedures on `22/03/2022`.","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"iztanpy"},"content":"The following sequence diagram shows how this operation works","lastModifiedDate":"2022-03-24"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"iztanpy"},"content":"![CalculateCostObjectDiagram](images/CalculateSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"iztanpy"},"content":":information_source: **Note:** The lifeline for `CalculateCommandParser` should end at the destroy marker (X)","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"iztanpy"},"content":"but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"iztanpy"},"content":"1. The arguments passed to the logic manager will be parsed by the AddressBookParser class.","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"iztanpy"},"content":"2. If the given arguments are valid, further parsing will be carried out by the Calculate CommandParser.","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"iztanpy"},"content":"3. If further parsing is successful, a new CalculateCommand object will be returned","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"iztanpy"},"content":"##### In these parsers, invalid arguments will result in a ParseException.","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"iztanpy"},"content":"A valid argument consists of 2 sections:","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"iztanpy"},"content":"1. valid command `calculate`","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"iztanpy"},"content":"2. valid date, `22/03/2022`","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"iztanpy"},"content":"A date is only valid if it follows the \"dd/MM/uuuu\" format and consists of a legitimate date,","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"iztanpy"},"content":"taking leap years into account","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":349,"author":{"gitId":"iztanpy"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-03-03"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":353,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"iztanpy"},"content":"* Has a need to manage a significant number of businesses (Client(s))","lastModifiedDate":"2022-03-03"},{"lineNumber":370,"author":{"gitId":"iztanpy"},"content":"* Has a need to manage different network-related procedures for his/her Client(s), such as maintaining and repairing network components like routers and modems","lastModifiedDate":"2022-03-03"},{"lineNumber":371,"author":{"gitId":"iztanpy"},"content":"*  Prefers desktop apps over other types","lastModifiedDate":"2022-03-03"},{"lineNumber":372,"author":{"gitId":"iztanpy"},"content":"*  Can type fast","lastModifiedDate":"2022-03-03"},{"lineNumber":373,"author":{"gitId":"iztanpy"},"content":"*  Prefers typing to mouse interactions","lastModifiedDate":"2022-03-03"},{"lineNumber":374,"author":{"gitId":"iztanpy"},"content":"*  Is reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-03"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":377,"author":{"gitId":"iztanpy"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-03"},{"lineNumber":378,"author":{"gitId":"iztanpy"},"content":"* Manage Clients and the respective Procedures faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-03"},{"lineNumber":379,"author":{"gitId":"iztanpy"},"content":"* Keep important information regarding the user’s business in one platform to manage Clients and past, current, and future Procedures more easily","lastModifiedDate":"2022-03-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"iztanpy"},"content":"| `* * *`  | user                                       | Add a Procedure to a Client               | Add a Procedure associated with the Client.                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":389,"author":{"gitId":"iztanpy"},"content":"| `* * *`  | user                                       | delete a Procedure from an existing Client| Delete a Procedure from the existing Client.                |","lastModifiedDate":"2022-03-03"},{"lineNumber":390,"author":{"gitId":"iztanpy"},"content":"| `* * *`  | user                                       | Add a Client                              | Add a Client to my contacts                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":391,"author":{"gitId":"jbkim1999"},"content":"| `* * *`  | user                                       | delete a Client                           | Delete an existing Client when the client no longer engages with the networker company.|","lastModifiedDate":"2022-03-10"},{"lineNumber":392,"author":{"gitId":"jbkim1999"},"content":"| `* * *`  | user with many clients in the address book | View all of my Client(s’) contacts (number, phone number, address) and procedures| Have a brief idea about how many Client(s) and associated Procedures I have at the moment.|","lastModifiedDate":"2022-03-10"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"iztanpy"},"content":"(For all use cases below, the System is the Networkers and the Actor is the User, unless specified otherwise)","lastModifiedDate":"2022-03-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"iztanpy"},"content":"**Use case 1:  Add a Client**","lastModifiedDate":"2022-03-03"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"iztanpy"},"content":"1. User requests to list Client(s). (UC5)","lastModifiedDate":"2022-03-03"},{"lineNumber":405,"author":{"gitId":"iztanpy"},"content":"2. User requests to add a specific Client to the list, and specifies its name, number, address and tag.","lastModifiedDate":"2022-03-03"},{"lineNumber":406,"author":{"gitId":"iztanpy"},"content":"3. Networkers adds the Client.","lastModifiedDate":"2022-03-03"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"iztanpy"},"content":"* 2a. The name, number or address is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":413,"author":{"gitId":"iztanpy"},"content":"  * 2a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":414,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":415,"author":{"gitId":"iztanpy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":416,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":417,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":418,"author":{"gitId":"iztanpy"},"content":"* 3a. The name, number and address all match with an existing Client in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"iztanpy"},"content":"    * 3a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":421,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":422,"author":{"gitId":"iztanpy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":423,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":424,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":425,"author":{"gitId":"iztanpy"},"content":"**Use case 2:  Delete a Client**","lastModifiedDate":"2022-03-03"},{"lineNumber":426,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":427,"author":{"gitId":"iztanpy"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":428,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":429,"author":{"gitId":"iztanpy"},"content":"1. User requests to list Client(s). (UC5)","lastModifiedDate":"2022-03-03"},{"lineNumber":430,"author":{"gitId":"iztanpy"},"content":"2. User sends in a command to delete the Client from the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":431,"author":{"gitId":"iztanpy"},"content":"3. Networkers deletes existing Client.","lastModifiedDate":"2022-03-03"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"iztanpy"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"iztanpy"},"content":"* 2a. TThe User requests to delete a Client out of index.","lastModifiedDate":"2022-03-03"},{"lineNumber":437,"author":{"gitId":"iztanpy"},"content":"  * 2a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"iztanpy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"iztanpy"},"content":"**Use case 3: Add a Procedure to a Client**","lastModifiedDate":"2022-03-03"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"iztanpy"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":444,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":445,"author":{"gitId":"iztanpy"},"content":"1. User requests to list Client(s). (UC5)","lastModifiedDate":"2022-03-03"},{"lineNumber":446,"author":{"gitId":"iztanpy"},"content":"2. User requests to add its own Procedure to a specific Client in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":447,"author":{"gitId":"iztanpy"},"content":"3. Networkers adds the Procedure associated with the Client.","lastModifiedDate":"2022-03-03"},{"lineNumber":448,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":449,"author":{"gitId":"iztanpy"},"content":"   Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":450,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":451,"author":{"gitId":"iztanpy"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":452,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":453,"author":{"gitId":"iztanpy"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2022-03-03"},{"lineNumber":454,"author":{"gitId":"iztanpy"},"content":"  * 2a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":455,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":456,"author":{"gitId":"iztanpy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":457,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":458,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":459,"author":{"gitId":"iztanpy"},"content":"* 3a. The Procedure description is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":460,"author":{"gitId":"iztanpy"},"content":"    * 3a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":461,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":462,"author":{"gitId":"iztanpy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":463,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":464,"author":{"gitId":"teominghuang"},"content":"**Use case 4: Delete a Procedure from a Client**","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":466,"author":{"gitId":"iztanpy"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":467,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":468,"author":{"gitId":"iztanpy"},"content":"1. User requests to list Client(s). (UC5)","lastModifiedDate":"2022-03-03"},{"lineNumber":469,"author":{"gitId":"iztanpy"},"content":"2. User sends in a command to delete the Procedure from a specific Client in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":470,"author":{"gitId":"iztanpy"},"content":"3. Networkers deletes the procedure from the Client(s).","lastModifiedDate":"2022-03-03"},{"lineNumber":471,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":472,"author":{"gitId":"iztanpy"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":473,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":474,"author":{"gitId":"iztanpy"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"iztanpy"},"content":"* 2a. The procedure does not exist.","lastModifiedDate":"2022-03-03"},{"lineNumber":477,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":478,"author":{"gitId":"iztanpy"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":479,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":480,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":481,"author":{"gitId":"iztanpy"},"content":"* 2b. The Client does not exist.","lastModifiedDate":"2022-03-03"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":486,"author":{"gitId":"iztanpy"},"content":"* 2c.The User requests to delete a non-existing Procedure from an existing Client.","lastModifiedDate":"2022-03-03"},{"lineNumber":487,"author":{"gitId":"iztanpy"},"content":"    * 2c1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":489,"author":{"gitId":"iztanpy"},"content":"      Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":492,"author":{"gitId":"iztanpy"},"content":"* 2d.The User requests to delete an existing Procedure from a non-existing Client.","lastModifiedDate":"2022-03-03"},{"lineNumber":493,"author":{"gitId":"iztanpy"},"content":"  * 2d1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":494,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":495,"author":{"gitId":"iztanpy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":497,"author":{"gitId":"iztanpy"},"content":"**Use case 5: List Client(s) in Networkers**","lastModifiedDate":"2022-03-03"},{"lineNumber":498,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":499,"author":{"gitId":"iztanpy"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":500,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":501,"author":{"gitId":"iztanpy"},"content":"1. User requests to list Client(s).","lastModifiedDate":"2022-03-03"},{"lineNumber":502,"author":{"gitId":"iztanpy"},"content":"2. Networkers displays the list of Client(s) with associated Procedures.","lastModifiedDate":"2022-03-03"},{"lineNumber":503,"author":{"gitId":"iztanpy"},"content":"Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":504,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":505,"author":{"gitId":"iztanpy"},"content":"   Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":506,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":507,"author":{"gitId":"iztanpy"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":508,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":509,"author":{"gitId":"iztanpy"},"content":"* 2a.  The list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":510,"author":{"gitId":"iztanpy"},"content":"  * 2a1. Networkers shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":511,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":512,"author":{"gitId":"iztanpy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":513,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":514,"author":{"gitId":"iztanpy"},"content":"{More to be added}","lastModifiedDate":"2022-03-03"},{"lineNumber":515,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":516,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":517,"author":{"gitId":"iztanpy"},"content":"### Non-Functional Requirements","lastModifiedDate":"2022-03-03"},{"lineNumber":518,"author":{"gitId":"iztanpy"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":519,"author":{"gitId":"iztanpy"},"content":"2. Should be able to hold up to 1000 Client(s) without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-03"},{"lineNumber":520,"author":{"gitId":"iztanpy"},"content":"3. A User with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-03"},{"lineNumber":521,"author":{"gitId":"iztanpy"},"content":"4. The system should respond within two seconds.","lastModifiedDate":"2022-03-03"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"iztanpy"},"content":"* **Client**: Refers to a business entity that the User is responsible for network-related procedures","lastModifiedDate":"2022-03-03"},{"lineNumber":529,"author":{"gitId":"iztanpy"},"content":"* **Contact**: Refers to information for a Client, including its business name, phone number, and address.","lastModifiedDate":"2022-03-03"},{"lineNumber":530,"author":{"gitId":"iztanpy"},"content":"* **Procedure**: Refers to a network-related task that a User performs for a Client, such as fixing a router and setting up intranet.","lastModifiedDate":"2022-03-03"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"iztanpy"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-03-03"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":560,"author":{"gitId":"jbkim1999"},"content":"### Deleting a client","lastModifiedDate":"2022-03-10"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":562,"author":{"gitId":"jbkim1999"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2022-03-10"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":564,"author":{"gitId":"jbkim1999"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":566,"author":{"gitId":"iztanpy"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":567,"author":{"gitId":"iztanpy"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-03-03"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":569,"author":{"gitId":"iztanpy"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":570,"author":{"gitId":"jbkim1999"},"content":"       Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-10"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":572,"author":{"gitId":"iztanpy"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":573,"author":{"gitId":"iztanpy"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-03-03"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":575,"author":{"gitId":"iztanpy"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-03-03"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":577,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2022-03-03"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2022-03-03"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":581,"author":{"gitId":"iztanpy"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2022-03-03"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"iztanpy"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"iztanpy":181,"jbkim1999":70,"robinrojh":28,"teominghuang":2,"aceszhenwei":9,"-":293}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"*Networkers* is a **desktop app for managing contacts for network technicians,","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"optimised for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"If you can type fast, Networkers can get your contact management tasks","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"done faster than traditional GUI apps.","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"- **Features**","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"  1. Add a Client","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"  2. Delete a Client","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"  3. Add a Procedure to the Client","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"  4. Delete a Procedure from the Client","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"  5. View all Clients and associated Procedures in the Client","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"  6. Calculate the cost of all Procedures on a specified date","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"- **Command Summary**","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"### Add a Client: `addClient`","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"Adds a Client with an empty Procedure list to the Networkers.","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"**Format:** `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS l/PLAN t/TAG...`","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"- `addClient` refers to the command of adding a Client.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"- Mandatory fields for a new Client include name, phone_number, address and a plan.","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"- `addClient n/Apple p/91234561 e/apple@example.com a/311, Bedok Ave 3, #01-15 l/Plan 50GBps t/corporate `","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"  - Result shows: `New client added: Apple; Phone: 91234561; Email: apple@example.com; Address: 311, Bedok Ave 3, #01-15; Plan: Plan 50GBps; Tags: [corporate]`","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"In Application: ![Ui](images/addClientGUI.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"### Delete a Client: `deleteClient`","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"Deletes a specified Client from the Networkers.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"**Format:** `deleteClient \u003cCLIENT INDEX\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"- Deletes the Client at the specified index.","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"- `\u003cCLIENT INDEX\u003e` refers to the index number shown in the displayed Client list.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"- The index **must be** a positive integer 1, 2, 3, …","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"- `deleteClient 1` ","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"  - This will trigger an attempt to delete the first Client in the Client list.","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"In Application: ![list](images/deleteClientGUI.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"### Add a Procedure to a Client: `addProc`","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"Adds a specified Procedure to a specified Client.","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"**Format:** `addProc \u003cCLIENT INDEX\u003e i/INFORMATION c/COST d/DATE_TIME`","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"- `addProc` refers to the command of adding a Procedure to the Client at the specified index.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"- `\u003cCLIENT INDEX\u003e` refers to the index number shown in the displayed Client list. The index **must be** a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"- `INFORMATION` refers to the tasks or problems that need to be addressed in the future visits to the Client’s business sight.","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"jbkim1999"},"content":"- `COST` is the cost required for the Procedure.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"- `DATE_TIME` is the date and time that the Procedure takes place. ","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"  - `DATE_TIME` accepts inputs in the form of `dd_MM_YYYY HH:MM`.","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"- Note that a Client’s list of Procedures is a numbered list. A new Procedure will be auto-sorted based on the date of operation.","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"- `addProc 1 i/Install modem c/10.5 d/20/03/2022 11:30`","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"  - If the first Client already has an identical Procedure, the application will inform you that the Procedure has already been added.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"In Application: ![addProc](images/addProcGUI.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"### Delete a Procedure from the Client: `deleteProc`","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"Deletes a Procedure associated with the Client. This is important as it allows you to maintain and make changes to the database - creation and deletion.","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"**Format:** `deleteProc \u003cCLIENT INDEX\u003e \u003cPROCEDURE INDEX\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"jbkim1999"},"content":"- `deleteProc` refers to the command of deleting a Procedure from the Client at the specified index.","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"- `\u003cCLIENT INDEX\u003e` refers to the index number shown in the displayed Client list. The index **must be** a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"jbkim1999"},"content":"- `\u003cPROCEDURE INDEX\u003e` refers to the index number of a Procedure from a specified Client\u0027s list of Procedures. The index **must be** a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"- Note that a Client’s list of Procedures is also a numbered list.","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"jbkim1999"},"content":"- `deleteProc 1 3`","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"  - Result shows: `Current Procedure List: [Information: Install modem; Date: 20/03/2022 11:30; Cost: 10.5; Completed: false]`","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"jbkim1999"},"content":"- `deleteProc 3 500`","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"jbkim1999"},"content":"  - Result shows: `The procedure index provided is invalid`","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"In Application: \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"jbkim1999"},"content":"Before Command ![deleteProc](images/deleteProcGUIbefore.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"After Command ![deleteProc](images/deleteProcGUIAfter.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"jbkim1999"},"content":"### Calculate the cost of all Procedures on a specified date: `calculate`","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"Calculates the cost of all Procedures that happen any time on a specified date.","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"jbkim1999"},"content":"**Format:** `calculate \u003cDATE\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"- `calculate` refers to the command of calculating cost of all Procedures on a specified date.","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"- `DATE` is in the format of dd/MM/uuuu, eg. 23/03/2022. ","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"  - Error will be thrown if the date is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"- `calculate 23/03/2022`","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"jbkim1999"},"content":"  - Result shows: `Total Cost: 31.5`","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"jbkim1999"},"content":"In Application: ![list](images/calculate.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"robinrojh"},"content":"### View All Clients: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"Lists out all the Clients saved. This feature will be used to show Clients on the application. No arguments required.","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"**Example:** \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"In Command Line Interface (CLI):","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"- `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"  - Result shows: \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"  ```","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"  1. Apple, 9XXXXXXX, Apple Road` \u003cbr/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"jbkim1999"},"content":"  2. Singtel, 8XXXXXXX, Singtel Road`","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"jbkim1999"},"content":"  ```","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"In Application: ![list](images/listGUI.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"robinrojh"},"content":"### View All Procedures of a Client: `listProc`","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"Lists out all the Procedures related to a Client.","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"jbkim1999"},"content":"**Example:**","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"jbkim1999"},"content":"- `listProc 1`","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"robinrojh"},"content":"  - Result shows:","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"jbkim1999"},"content":"  ```","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"robinrojh"},"content":"  1. John, VALUE 50Mbps, 91028936, Singtel Road, singtel@singtel.com","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"robinrojh"},"content":"      1. set up router system in office, 04/04/2022 12:12, 900","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"jbkim1999"},"content":"  ```","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"jbkim1999"},"content":"In Application: ![listProc](images/ListProcCommandExample1.PNG)","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"robinrojh"},"content":"## Command Summary","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"robinrojh"},"content":"| Command | Syntax                                                    | Example                                                  |","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"aceszhenwei"},"content":"| --- |-----------------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"aceszhenwei"},"content":"| Add Client | `addClient n/\u003cNAME\u003e p/\u003cPHONE_NUMBER\u003e a/\u003cADDRESS\u003e l/\u003cPLAN\u003e` | `addClient n/Apple Inc p/9XXXXXXX a/apple road l/50MBps` |","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"robinrojh"},"content":"| Delete Client | `deleteClient \u003cINDEX\u003e`                                    | `deleteClient 1`                                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"aceszhenwei"},"content":"| Add Procedure | `addProc \u003cClient Index\u003e i/INFORMATION c/COST d/DATE_TIME`                     | `addProc 1 i/Install modem c/10.5 d/20/03/2022 11:30`     |","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"robinrojh"},"content":"| Delete Procedure | `deleteProc \u003cCLIENT INDEX\u003e \u003cPROCEDURE INDEX\u003e`             | `deleteProc 1 3`                                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"robinrojh"},"content":"| List All Clients | `list`                                                    | `list`                                                   |","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"robinrojh"},"content":"| List All Procedures | `listProc \u003cCLIENT INDEX\u003e`                                 | `listProc 1`                                             | ","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"iztanpy":6,"jbkim1999":86,"robinrojh":11,"aceszhenwei":3,"-":50}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"robinrojh"},"content":"    content: \"Networkers\";","lastModifiedDate":"2022-02-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"robinrojh":1,"-":294}},{"path":"docs/diagrams/AddProcCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"participant \":AddProcCommandParser\" as AddProcCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"participant \"d:AddProcCommand\" as AddProcCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"participant \"p:Procedure\" as Procedure MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"participant \":Client\" as Client MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"[-\u003e LogicManager : execute(\u0027procedure\u0027)","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\u0027procedure\u0027)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"note left","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"(\u0027procedure\u0027) is defined as","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"\"addProc 1 i/Install modem","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"c/10.5 d/20/03/2022 11:30\"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"end note","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"create AddProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"AddressBookParser -\u003e AddProcCommandParser : parse(args)","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"activate AddProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"note left","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"(args) is defined as","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":" i/Install modem","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":" c/10.5","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":" d/20/03/2022","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":" 11:30","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"end note","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"create Procedure","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommandParser -\u003e Procedure","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"activate Procedure","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"Procedure --\u003e AddProcCommandParser : p","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"deactivate Procedure","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"create AddProcCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommandParser -\u003e AddProcCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"activate AddProcCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand --\u003e AddProcCommandParser : d","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddProcCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"LogicManager -\u003e AddProcCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"activate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e ModelManager : getFilteredClientList()","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"activate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"ModelManager --\u003e AddProcCommand : lastShownList","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"deactivate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e AddProcCommand : addClientProcedure(clientToEdit)","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"activate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e Client : get(info)","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"activate Client","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"note left","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"info represents","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"Name, Phone, Email,","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"Plans, Tags, Address","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"and Procedures","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"end note","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"Client --\u003e AddProcCommand : info","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"deactivate Client","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e AddProcCommand : addProcedure(procedureList)","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"activate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand --\u003e AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand --\u003e AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e ModelManager : setClient(clientToEdit, editedClient)","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"activate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand -\u003e ModelManager : updatedFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS)","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"deactivate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"AddProcCommand --\u003e LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"deactivate AddProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"aceszhenwei"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aceszhenwei":99}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteClient(p)","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"AddressBook *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Name","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Phone","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Email","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Address","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":9,"-":12}},{"path":"docs/diagrams/CalculateCostState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"Object Miniso","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"object MinisoProcedure1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure1 : info \u003d \"replace switches\"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure1 : cost \u003d \"150\"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure1 : date \u003d \"22/03/2022\"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"object MinisoProcedure2","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure2 : info \u003d \"replace modem\"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure2 : cost \u003d \"130\"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"MinisoProcedure2 : date \u003d \"22/03/2022\"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"Miniso *-- MinisoProcedure1","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"Miniso *-- MinisoProcedure2","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"object Apple","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"object AppleProcedure1","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"AppleProcedure1 : info \u003d \"fix router\"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"AppleProcedure1 : cost \u003d \"100.50\"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"AppleProcedure1 : date \u003d \"22/03/2022\"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"object AppleProcedure2","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"AppleProcedure2 : info \u003d \"replace wires\"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"AppleProcedure2 : cost \u003d \"50\"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"AppleProcedure2 : date \u003d \"04/01/2022\"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"Apple *-- AppleProcedure1","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"Apple *-- AppleProcedure2","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"iztanpy":31}},{"path":"docs/diagrams/CalculateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"participant \":CalculateCommandParser\" as CalculateCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"participant \"TotalCost:BigDecimal\" as TotalCost LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"participant \":CalculateCommand\" as CalculateCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"[-\u003e LogicManager : execute(\"calculate 22/03/2022\")","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"calculate 22/03/2022\")","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"create CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"AddressBookParser -\u003e CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"activate CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"CalculateCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"deactivate CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"AddressBookParser -\u003e CalculateCommandParser : parse(\"22/03/2022\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"activate CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"create CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"CalculateCommandParser -\u003e CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"activate CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"CalculateCommand --\u003e CalculateCommandParser :","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"deactivate CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"CalculateCommandParser --\u003e AddressBookParser :","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"deactivate CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"CalculateCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"destroy CalculateCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"LogicManager -\u003e CalculateCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"activate CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"CalculateCommand -\u003e Model : getFiltereredClientList()","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"Model --\u003e CalculateCommand : lastshownlist","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"Create TotalCost","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"CalculateCommand -\u003e TotalCost : create","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"activate TotalCost","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"loop number of clients","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"CalculateCommand -\u003e TotalCost : add cost of procedures on specified date for each client","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"TotalCost --\u003e CalculateCommand : return totalCost","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"deactivate TotalCost","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"iztanpy"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"CalculateCommand -\u003e CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"iztanpy"},"content":"deactivate CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"CommandResult --\u003e CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"iztanpy"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"iztanpy"},"content":"CalculateCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"iztanpy"},"content":"deactivate CalculateCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"iztanpy"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"iztanpy":86}},{"path":"docs/diagrams/DeleteProc.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"-\u003e \":UiManager\" : start()","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"activate \":UiManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"\":UiManager\" -\u003e \":MainWindow\" : fillInnerParts()","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"activate \":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"\":MainWindow\" -\u003e \":MainWindow\" : executeCommand(\"deleteProc 1 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"activate \":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"\":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"box \"Logic\" #LightBlue","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"-\u003e \":LogicManager\" : execute(\"deleteProc 1 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"activate \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"\":LogicManager\" -\u003e \":AddressBookParser\" : parseCommand(\"deleteProc 1 1 \")","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"activate \":AddressBookParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"create \":DeleteProcCommandParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"\":AddressBookParser\" -\u003e \":DeleteProcCommandParser\" : new()","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"activate \":DeleteProcCommandParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    new() denotes new DeleteProcCommandParser()","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"create \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommandParser\" -\u003e \":DeleteProcCommand\" : parse(\"1 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"activate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" --\u003e \":DeleteProcCommandParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"deactivate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommandParser\" --\u003e \":AddressBookParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"deactivate \":DeleteProcCommandParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"\":AddressBookParser\" --\u003e \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"deactivate \":AddressBookParser\"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"endbox","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"box \"Model\" #LightPink","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"\":LogicManager\" -\u003e \":DeleteProcCommand\" : execute(command)","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"activate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" -\u003e \":ModelManager\" : gFCL()","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"activate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    gFCL() denotes the method getFilteredClientList()","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"\":ModelManager\" --\u003e \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"deactivate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" -\u003e \":DeleteProcCommand\" : editClientProcedure(client)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"activate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"create \":Client\"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" -\u003e \":Client\" : new Client(clientInfo)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"activate \":Client\"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    clientInfo denotes the updatedName, updatedPhone,","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"    updatedEmail, updatedAddress, updatedPlan, updatedTags,","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    updatedProcedures of the client.","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"\":Client\" --\u003e \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"deactivate \":Client\"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" --\u003e \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"deactivate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" -\u003e \":ModelManager\" : setClient(info)","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"    the info denotes the target, and the editedClient info.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"activate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"\":ModelManager\" -\u003e \":AddressBook\" : setClient(info)","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"    the info denotes the target, and the editedClient info.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"activate \":AddressBook\"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"\":AddressBook\" --\u003e \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"deactivate \":AddressBook\"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"\":ModelManager\" --\u003e \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"deactivate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"endbox","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"box \"Storage\" #LightGreen","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" -\u003e \":ModelManager\" : uFCL()","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"activate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"note left","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"    uFCL() denotes updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS)","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"end note","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"\":ModelManager\" --\u003e \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"deactivate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"\":DeleteProcCommand\" --\u003e \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"deactivate \":DeleteProcCommand\"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"\":LogicManager\" -\u003e \":ModelManager\" : getAddressBook()","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"activate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"\":ModelManager\" --\u003e \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"deactivate \":ModelManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"\":LogicManager\" -\u003e \":Storage\" : saveAddressBook(addressBook)","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"activate \":Storage\"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"\":Storage\" --\u003e \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"deactivate \":Storage\"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"\u003c-- \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"deactivate \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"endbox","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"@enduml","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"\":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"deactivate \":LogicManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"\":MainWindow\" --\u003e \":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"deactivate \":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"\":MainWindow\" --\u003e \":UiManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"deactivate \":MainWindow\"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"\u003c-- \":UiManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"deactivate \":UiManager\"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"object firstObject","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"object \"My Second Object\" as o2","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"teominghuang":113}},{"path":"docs/diagrams/DeleteProcState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"title Initial state","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"package States {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"hide State2","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"hide State3","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"class Pointer as \"Current State\"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"@end","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"teominghuang":20}},{"path":"docs/diagrams/DeleteProcState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"title After command \"deleteProc 1 1\"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"hide State3","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"class Pointer as \"Current State\"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"@end","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"teominghuang":22}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"DeleteCommand -\u003e Model : deleteClient(1)","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":1,"-":68}},{"path":"docs/diagrams/ListProcCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"participant \":UiManager\" as UiManager UI_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nListProcCommandParser\" as ListProcCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"participant \"listProcCommand:ListProcCommand\" as ListProcCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"[-\u003e UiManager : start()","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"activate UiManager","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"create MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"UiManager -\u003e MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"activate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"MainWindow -\u003e MainWindow : executeCommand(\"listProc 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"activate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"\u0027LogicManager column\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"MainWindow -\u003e LogicManager : execute(\"listProc 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"listProc 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"\u0027AddressBookParser column and ListProcCommandParser class-level method call\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"robinrojh"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"robinrojh"},"content":"AddressBookParser -\u003e ListProcCommandParser : parse(\"listProc 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"robinrojh"},"content":"activate ListProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"\u0027ListProcCommand column\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"robinrojh"},"content":"create ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"ListProcCommandParser -\u003e ListProcCommand :parse(\"1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"activate ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"ListProcCommandParser \u003c-- ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"robinrojh"},"content":"deactivate ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"AddressBookParser \u003c-- ListProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"robinrojh"},"content":"deactivate ListProcCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"robinrojh"},"content":"LogicManager \u003c-- AddressBookParser : listProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"robinrojh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"robinrojh"},"content":"LogicManager -\u003e ListProcCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"robinrojh"},"content":"activate ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"ListProcCommand -\u003e ModelManager : getFilteredClientList()","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"activate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"robinrojh"},"content":"ListProcCommand \u003c-- ModelManager : lastShownList","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"deactivate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"robinrojh"},"content":"ListProcCommand -\u003e ModelManager : setProcedures(targetClient)","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"robinrojh"},"content":"activate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"robinrojh"},"content":"deactivate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"robinrojh"},"content":"ListProcCommand -\u003e ModelManager : updateFilteredProcedureList(targetClient, predicate)","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"robinrojh"},"content":"activate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"robinrojh"},"content":"deactivate ModelManager","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"robinrojh"},"content":"LogicManager \u003c-- ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"robinrojh"},"content":"deactivate ListProcCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"robinrojh"},"content":"MainWindow \u003c-- LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"robinrojh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"robinrojh"},"content":"\u0027updateUi self invocation from MainWindow\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"robinrojh"},"content":"MainWindow -\u003e MainWindow : updateUi()","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"robinrojh"},"content":"activate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"robinrojh"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"robinrojh"},"content":"\u0027End of MainWindow\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"robinrojh"},"content":"MainWindow --\u003e MainWindow : CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"robinrojh"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"robinrojh"},"content":"UiManager \u003c-- MainWindow : :CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"robinrojh"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"robinrojh"},"content":"\u0027End of UiManager\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"robinrojh"},"content":"[\u003c-- UiManager","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"robinrojh"},"content":"deactivate UiManager","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"robinrojh"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"robinrojh":91}},{"path":"docs/diagrams/ListProcOnCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"class AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"class ListProcOnCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"class ListProcOnCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"    \u003ccolor:white\u003e- targetDate:DateWithoutTime\u003c/color\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"show ListProcOnCommand attribute","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"AddressBookParser .down.|\u003e ListProcOnCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"ListProcOnCommandParser .down.|\u003e ListProcOnCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jbkim1999":17}},{"path":"docs/diagrams/ListProcOnCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"participant \":ListProcOnCommand\" as ListProcOnCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"participant \":Client\" as Client MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"-\u003e ListProcOnCommand : execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"activate ListProcOnCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"ListProcOnCommand -\u003e Model : getFilteredClientList()","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"ListProcOnCommand \u003c-- Model : lastShownList","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"    loop for every Client in lastShownList","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"        ListProcOnCommand -\u003e Client : getProcsOnDate(targetDate)","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"        activate Client","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"        ListProcOnCommand \u003c-- Client : clientProceduresOnDate","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"        deactivate Client","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"    end","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"ListProcOnCommand -\u003e ListProcOnCommand : aggregate(clientProceduresOnDate)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"activate ListProcOnCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"\u003c-- ListProcOnCommand : CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jbkim1999":30}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"Class UniqueClientList","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"Class Client","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"AddressBook *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"UniqueClientList --\u003e \"~* all\" Client","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Name","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Phone","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Email","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e Address","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"ModelManager --\u003e\"~* filtered\" Client","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"Class JsonAdaptedClient","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedClient","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"Class ClientListPanel","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"Class ClientCard","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"ClientListPanel -down-\u003e \"*\" ClientCard","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"ClientCard --|\u003e UiPart","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"ClientCard ..\u003e Model","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"ClientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jbkim1999":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"ecp -\u003e ec ++: index, editClientDescriptor","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"jbkim1999":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"title: Networkers","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W13-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S2-CS2103T-W13-1/tp/actions/workflows/gradle.yml)[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W13-1/tp/branch/master/graph/badge.svg?token\u003dOEVG5AG88Y)](https://codecov.io/gh/AY2122S2-CS2103T-W13-1/tp)","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"**Networkers is a desktop application for managing your Client details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"* If you are interested in using Networkers, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"* If you are interested about developing Networkers, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"robinrojh":5,"-":13}},{"path":"docs/team/aceszhenwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"# Alexander\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"### Project: Networkers","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"Networkers is a desktop app for managing contacts for networks, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Networkers can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003daceszhenwei\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003daceszhenwei\u0026tabRepo\u003dAY2122S2-CS2103T-W13-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"  * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"  * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    * Added documentation for the features `deleteClient`","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"  * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"  * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"aceszhenwei":32}},{"path":"docs/team/iztanpy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"## Project: Networkers","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"###Overview","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"Networkers is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"###Summary of my contributions","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"- **Code contributed:** [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003diztanpy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"  )","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"- **Contributions to the UG:**","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"- **Contributions to the DG:**","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"- **Contributions to team-based tasks**","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"- **Contributions beyond the project team:**","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"iztanpy":31}},{"path":"docs/team/jbkim1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"# JB Kim\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"## Project: Networkers","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"### Overview","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"### Summary of my contributions","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"- **Code contributed:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"- **Enhancements implemented:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"- **Contributions to the UG:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"- **Contributions to the DG:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"- **Contributions to team-based tasks** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"- **Review/mentoring contributions:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"- **Contributions beyond the project team:** To be added soon","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"jbkim1999":20}},{"path":"docs/team/robinrojh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"# Yong Gi Roh\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"## Project: Networkers","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"### Overview","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"### Summary of my contributions","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"- **Code contributed:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"- **Enhancements implemented:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"- **Contributions to the UG:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"- **Contributions to the DG:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"- **Contributions to team-based tasks** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"- **Review/mentoring contributions:** To be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"- **Contributions beyond the project team:** To be added soon","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"robinrojh":20}},{"path":"docs/team/teominghuang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"## Project: Networkers","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"###Overview","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"Networkers is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"###Summary of my contributions","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"- **Code contributed:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"- **Enhancements implemented:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"- **Contributions to the UG:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"- **Contributions to the DG:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"- **Contributions to team-based tasks** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"- **Review/mentoring contributions:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"- **Contributions beyond the project team:** To be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"teominghuang":22}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String MESSAGE_INVALID_PROCEDURE_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"            \"The procedure index provided is invalid\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jbkim1999":2,"teominghuang":2,"-":11}},{"path":"src/main/java/seedu/address/commons/core/dateWithoutTime/DateWithoutTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.commons.core.dateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":" * Represents a Procedure\u0027s date in the address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"public class DateWithoutTime {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"            \"Please ensure that you have typed an existing date in the correct format. \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"                    + \"Dates should be in the format DD/MM/YYYY, and it should not be blank \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"                    + \"Year entered must be less than 10000\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"    /*","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])[\\\\/\\\\-](0?[1-9]|1[012])[\\\\/\\\\-]\\\\d{4}$\";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"    public static final DateTimeFormatter FORMAT_WITH_DATE \u003d DateTimeFormatter","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"            .ofPattern(\"dd/MM/uuuu\");","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    public final LocalDate validDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"    public DateWithoutTime(String date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"        validDate \u003d LocalDate.parse(date, FORMAT_WITH_DATE); // need to check","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"                System.out.println(\"correct format\");","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"                LocalDate.parse(test, FORMAT_WITH_DATE","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"                        .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"                return true;","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"                System.out.println(\"invalid date\");","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"                return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"        return validDate.format(FORMAT_WITH_DATE);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"iztanpy"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 validDate.equals(((Date) other).validDate)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"iztanpy":75}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"robinrojh"},"content":"    /** Returns an unmodifiable view of the filtered list of procedures */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"    ObservableList\u003cProcedure\u003e getFilteredProcedureList();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jbkim1999":2,"robinrojh":3,"aceszhenwei":2,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"robinrojh"},"content":"    public ObservableList\u003cProcedure\u003e getFilteredProcedureList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"robinrojh"},"content":"        return model.getFilteredProcedureList();","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"robinrojh":4,"aceszhenwei":3,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":" * Adds a client to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"    public static final String COMMAND_WORD \u003d \"addClient\";","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_PLAN + \"PLAN \"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"            + PREFIX_NAME + \"Miniso \"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"            + PREFIX_EMAIL + \"miniso@example.com \"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_PLAN + \"VALUE 50MBps \"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"            + PREFIX_TAG + \"family \";","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"A client with a duplicate address\"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"            + \" already exists in the address book\";","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    public AddCommand(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"iztanpy":6,"jbkim1999":6,"aceszhenwei":9,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddProcCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":" * Add a procedure of an existing client in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"public class AddProcCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"    public static final String COMMAND_WORD \u003d \"addProc\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Procedure to the identified Client \"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"            + \"by the index number used in the displayed client list. \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_INFORMATION + \"INFORMATION \"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_COST + \"COST \"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_DATE + \"DATE \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_INFORMATION + \"Install modem \"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"            + PREFIX_COST + \"10.5 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"            + PREFIX_DATE + \"20/03/2022 11:30 \";","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Procedure added: %1$s\"; // Test needed","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_DUPLICATE_PROCEDURE \u003d \"This Procedure is already listed to the Client\";","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"    private final Index index;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"    private final Procedure procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"     * @param index of the Client in the filtered client list to add Procedure to","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"     * @param procedure Procedure to add to the Client","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"    public AddProcCommand(Index index, Procedure procedure) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(procedure);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"        this.procedure \u003d procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"jbkim1999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"        Client clientToAddProc \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"        Client clientWithAddedProc \u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"            clientWithAddedProc \u003d clientWithAddedProcFrom(clientToAddProc);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"        } catch (CommandException err) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROCEDURE);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"        model.setClient(clientToAddProc, clientWithAddedProc);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"jbkim1999"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, procedure));","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToAddProc}","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"     * edited with {@code procListWithAddedProc}.","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"    private Client clientWithAddedProcFrom(Client clientToAddProc) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"        assert clientToAddProc !\u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"jbkim1999"},"content":"        Name name \u003d clientToAddProc.getName();","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"jbkim1999"},"content":"        Phone phone \u003d clientToAddProc.getPhone();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"        Email email \u003d clientToAddProc.getEmail();","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"jbkim1999"},"content":"        Plan plan \u003d clientToAddProc.getPlan();","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"        Address address \u003d clientToAddProc.getAddress();","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"        Set\u003cTag\u003e tags \u003d clientToAddProc.getTags();","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"jbkim1999"},"content":"        List\u003cProcedure\u003e updatedProcedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"jbkim1999"},"content":"            updatedProcedures.addAll(procListWithAddedProc(clientToAddProc.getProcedures()));","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"jbkim1999"},"content":"        } catch (CommandException err) {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROCEDURE);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"jbkim1999"},"content":"        return new Client(name, phone, email, address, plan,","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"jbkim1999"},"content":"                tags, updatedProcedures);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a list of Procedures that have been sorted according to their dates.","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"aceszhenwei"},"content":"    public List\u003cProcedure\u003e procListWithAddedProc(List\u003cProcedure\u003e procedureList)","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"jbkim1999"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"        List\u003cProcedure\u003e updatedProcedureList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"jbkim1999"},"content":"        for (int i \u003d 0; i \u003c procedureList.size(); i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"            if (procedureList.get(i).equals(procedure)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PROCEDURE);","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"            updatedProcedureList.add(procedureList.get(i));","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"        updatedProcedureList.add(procedure);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"aceszhenwei"},"content":"        Comparator\u003cProcedure\u003e mapComparator \u003d (Procedure m1, Procedure m2) -\u003e m1.getDate()","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"aceszhenwei"},"content":"                .compareTo(m2.getDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"aceszhenwei"},"content":"        Collections.sort(updatedProcedureList, mapComparator);","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"        return updatedProcedureList;","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"     * Returns a list of Procedures, guaranteed to add a properly defined new Procedure.","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"jbkim1999"},"content":"     * Used internally for testing.","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"jbkim1999"},"content":"    public List\u003cProcedure\u003e procListWithAddedProperProc(List\u003cProcedure\u003e procedureList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"        List\u003cProcedure\u003e updatedProcedureList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"jbkim1999"},"content":"        for (int i \u003d 0; i \u003c procedureList.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"jbkim1999"},"content":"            updatedProcedureList.add(procedureList.get(i));","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"jbkim1999"},"content":"        updatedProcedureList.add(procedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"jbkim1999"},"content":"        return updatedProcedureList;","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"jbkim1999"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"jbkim1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"jbkim1999"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"jbkim1999"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"jbkim1999"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"jbkim1999"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"jbkim1999"},"content":"        if (!(other instanceof AddProcCommand)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"jbkim1999"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"jbkim1999"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand otherCommand \u003d (AddProcCommand) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"jbkim1999"},"content":"        return index.equals(otherCommand.index)","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 procedure.equals(otherCommand.procedure);","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"iztanpy":2,"jbkim1999":148,"aceszhenwei":14}},{"path":"src/main/java/seedu/address/logic/commands/CalculateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import seedu.address.commons.core.dateWithoutTime.DateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":" * Get cost from a givenDate","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"public class CalculateCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    public static final String COMMAND_WORD \u003d \"calculate\";","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"            + \": Calculates the total cost of all procedures on a given date\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"            + \"Parameters: date (must be a valid date)\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 02/02/2022\";","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CALCULATE_COST_SUCCESS \u003d \"Total Cost: %1$s\";","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_INVALID_DATE_FAILURE \u003d \"Invalid date!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"    private final DateWithoutTime targetDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    public CalculateCommand(DateWithoutTime date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        this.targetDate \u003d date;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"        BigDecimal totalCost \u003d new BigDecimal(0);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"            Client currentClient \u003d lastShownList.get(i);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"            BigDecimal currentCost \u003d new BigDecimal(currentClient.getCostOnDate(targetDate));","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"            totalCost \u003d totalCost.add(currentCost);","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"        String totalCostString \u003d totalCost.toPlainString();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        System.out.println(totalCostString);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"        return new CommandResult(String.format(MESSAGE_CALCULATE_COST_SUCCESS, totalCostString));","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"iztanpy":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    public static final String COMMAND_WORD \u003d \"deleteClient\";","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete));","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jbkim1999":2,"aceszhenwei":8,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/DeleteProcCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":" * Delete a procedure of an existing client in the address book.","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"public class DeleteProcCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORD \u003d \"deleteProc\";","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete the Procedure under a Client\"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"            + \"by the index numbers used in the displayed client list and the displayed procedure list. \"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            + \"Existing Procedures indicated (by the input value) will be deleted.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"            + \"Parameters: INDEX (must be a positive integer and an existing Client)\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"            + \"INDEX (must be a positive integer and an existing Procedure)\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Current Procedure List: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    private final Index clientIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    private final Index procedureIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @param clientIndex of the client in the filtered client list whose procedure to delete.","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * @param procedureIndex of the procedure in the filtered procedure list to delete","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public DeleteProcCommand(Index clientIndex, Index procedureIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        requireNonNull(clientIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        requireNonNull(procedureIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        this.clientIndex \u003d clientIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        this.procedureIndex \u003d procedureIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        if (clientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        Client clientToEdit \u003d lastShownList.get(clientIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        Client editedClient \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"            editedClient \u003d editClientProcedure(clientToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        } catch (CommandException err) {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROCEDURE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"        //Might want to consider making it nicer by creating an editedClient.displayPrdeleteocedures().","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient.getProcedures()));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"     * Creates and returns a {@code Client} with the updated Procedure editted after","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"     * deletion with the {@code deleteProcedure} method.","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"    private Client editClientProcedure(Client clientToEdit) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"        Name updatedName \u003d clientToEdit.getName();","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"        Phone updatedPhone \u003d clientToEdit.getPhone();","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"        Email updatedEmail \u003d clientToEdit.getEmail();","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"        Plan updatedPlan \u003d clientToEdit.getPlan();","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"        Address updatedAddress \u003d clientToEdit.getAddress();","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"        Set\u003cTag\u003e updatedTags \u003d clientToEdit.getTags();","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"        List\u003cProcedure\u003e updatedProcedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"            updatedProcedures.addAll(deleteProcedure(clientToEdit.getProcedures()));","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"        } catch (CommandException err) {","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROCEDURE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedPlan,","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"                updatedTags, updatedProcedures);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"    private List\u003cProcedure\u003e deleteProcedure(List\u003cProcedure\u003e procedureList) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"        if (procedureIndex.getOneBased() \u003e procedureList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROCEDURE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"        List\u003cProcedure\u003e updatedProcedureList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c procedureList.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"            if (i \u003d\u003d procedureIndex.getZeroBased()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"                continue;","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"            updatedProcedureList.add(procedureList.get(i));","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"        return updatedProcedureList;","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"teominghuang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"teominghuang"},"content":"        if (!(other instanceof DeleteProcCommand)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"teominghuang"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"teominghuang"},"content":"        // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"teominghuang"},"content":"        DeleteProcCommand e \u003d (DeleteProcCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"teominghuang"},"content":"        return clientIndex.equals(e.clientIndex)","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"teominghuang"},"content":"                \u0026\u0026 procedureIndex.equals(e.procedureIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"teominghuang":133}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"            + \"[\" + PREFIX_PLAN + \"PLAN] \"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"A client with a duplicate address\"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"            + \"already exists in the address book.\";","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"jbkim1999"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"aceszhenwei"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"        Plan updatedPlan \u003d editClientDescriptor.getPlan().orElse(clientToEdit.getPlan());","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"aceszhenwei"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"        List\u003cProcedure\u003e updatedProcedures \u003d clientToEdit.getProcedures();","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedPlan,","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"                updatedTags, updatedProcedures);","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"aceszhenwei"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"jbkim1999"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"aceszhenwei"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"jbkim1999"},"content":"        private Plan plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"teominghuang"},"content":"        private List\u003cProcedure\u003e procedures;","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"aceszhenwei"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"aceszhenwei"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"jbkim1999"},"content":"            setPlan(toCopy.plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"teominghuang"},"content":"            setProcedures(toCopy.procedures);","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"teominghuang"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, plan, tags, procedures);","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"jbkim1999"},"content":"        public void setPlan(Plan plan) {","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"jbkim1999"},"content":"            this.plan \u003d plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"jbkim1999"},"content":"        public Optional\u003cPlan\u003e getPlan() {","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"jbkim1999"},"content":"            return Optional.ofNullable(plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"teominghuang"},"content":"        /**","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"teominghuang"},"content":"         * Sets {@code Procedures} to this object\u0027s {@code Procedures}.","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"teominghuang"},"content":"         * A defensive copy of {@code Procedures} is used internally.","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"teominghuang"},"content":"         */","lastModifiedDate":"2022-03-12"},{"lineNumber":229,"author":{"gitId":"teominghuang"},"content":"        public void setProcedures(List\u003cProcedure\u003e procedures) {","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"teominghuang"},"content":"            this.procedures \u003d (procedures !\u003d null) ? new ArrayList\u003c\u003e(procedures) : null;","lastModifiedDate":"2022-03-12"},{"lineNumber":231,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":232,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"teominghuang"},"content":"        /**","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"teominghuang"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"teominghuang"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-12"},{"lineNumber":236,"author":{"gitId":"teominghuang"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"teominghuang"},"content":"         */","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"teominghuang"},"content":"        public Optional\u003cList\u003cProcedure\u003e\u003e getProcedures() {","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"teominghuang"},"content":"            return (procedures !\u003d null) ? Optional.of(Collections.unmodifiableList(procedures)) : Optional.empty();","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"aceszhenwei"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"aceszhenwei"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"jbkim1999"},"content":"                    \u0026\u0026 getPlan().equals(e.getPlan())","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"iztanpy":2,"jbkim1999":27,"teominghuang":25,"aceszhenwei":30,"-":181}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":" * Finds and lists all clients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"            + \"Example: \" + COMMAND_WORD + \" burger bags mcdonald\u0027s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"iztanpy":1,"jbkim1999":5,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jbkim1999":2,"aceszhenwei":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListProcCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_CLIENT_PROCEDURES;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"public class ListProcCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"    public static final String COMMAND_WORD \u003d \"listProc\";","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists the procedures of a client in the index. \\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"            + \"Example: listProc 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Procedures successfully loaded.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"    public static final String MESSAGE_FAIL \u003d \"No Procedures to load!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"     * Creates an ListProcCommand to add the specified {@code Client}","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"    public ListProcCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"robinrojh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"robinrojh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"robinrojh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"        Client clientToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"        if (clientToShow.getProcedures().isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"robinrojh"},"content":"            model.setProcedures(clientToShow.getProcedures());","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"            model.updateFilteredProcedureList(clientToShow, PREDICATE_SHOW_CLIENT_PROCEDURES);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"            return new CommandResult(MESSAGE_FAIL);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        } else {","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"robinrojh"},"content":"            model.setProcedures(clientToShow.getProcedures());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"robinrojh"},"content":"            model.updateFilteredProcedureList(clientToShow, PREDICATE_SHOW_CLIENT_PROCEDURES);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"robinrojh"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"robinrojh"},"content":"                || (other instanceof ListProcCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"                \u0026\u0026 targetIndex.equals(((ListProcCommand) other).targetIndex));","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"robinrojh":61,"teominghuang":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"                        PREFIX_PLAN, PREFIX_TAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PLAN, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"        Plan plan \u003d ParserUtil.parsePlan(argMultimap.getValue(PREFIX_PLAN).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"        Client client \u003d new Client(name, phone, email, address, plan, tagList);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"        return new AddCommand(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jbkim1999":8,"aceszhenwei":5,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddProcCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.commands.AddProcCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Completion;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":" * Parses input arguments and creates a new AddProcCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"public class AddProcCommandParser implements Parser\u003cAddProcCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"     * Parses the given {@code String} of arguments in the context of the AddProcCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"     * and returns an AddProcCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"    public AddProcCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INFORMATION, PREFIX_COST, PREFIX_DATE);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"        Index index;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProcCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INFORMATION, PREFIX_COST, PREFIX_DATE)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProcCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        Information information \u003d ParserUtil.parseInformation(argMultimap.getValue(PREFIX_INFORMATION).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"        Cost cost \u003d ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"        // New Procedure is not completed by default","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"        Completion completion \u003d new Completion(\"false\");","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"        Procedure procedure \u003d new Procedure(information, date, cost, completion);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"        return new AddProcCommand(index, procedure);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jbkim1999":65}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.commands.AddProcCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import seedu.address.logic.commands.CalculateCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"import seedu.address.logic.commands.DeleteProcCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"import seedu.address.logic.commands.ListProcCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"        case AddProcCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"            return new AddProcCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        case DeleteProcCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"            return new DeleteProcCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"robinrojh"},"content":"        case ListProcCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"robinrojh"},"content":"            return new ListProcCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"        case CalculateCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"            return new CalculateCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"iztanpy":4,"jbkim1999":4,"robinrojh":4,"teominghuang":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CalculateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import seedu.address.commons.core.dateWithoutTime.DateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import seedu.address.logic.commands.CalculateCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"public class CalculateCommandParser {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"     * Parses the given {@code String} of arguments in the context of the CalculateCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"     * and returns a CalculateCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    public CalculateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"            DateWithoutTime date \u003d ParserUtil.parseDateWithoutTime(args);","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"            System.out.println(date);","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"            return new CalculateCommand(date);","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DateWithoutTime.MESSAGE_CONSTRAINTS), pe);","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"iztanpy":26}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"    /* Prefix definitions for Client */","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"    public static final Prefix PREFIX_PLAN \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"    /* Prefix definitions for Procedure */","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    public static final Prefix PREFIX_INFORMATION \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jbkim1999":7,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteProcCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import seedu.address.logic.commands.DeleteProcCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"public class DeleteProcCommandParser implements Parser\u003cDeleteProcCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public static final int GET_CLIENT_INDEX \u003d 0;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public static final int GET_PROCEDURE_INDEX \u003d 1;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteProcCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    public DeleteProcCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"            indexes.addAll(ParserUtil.parseIndexes(argMultimap.getPreamble()));","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"                    DeleteProcCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        if (indexes.size() !\u003d 2) {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"                    DeleteProcCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        return new DeleteProcCommand(indexes.get(GET_CLIENT_INDEX), indexes.get(GET_PROCEDURE_INDEX));","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"teominghuang":41}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"                        PREFIX_PLAN, PREFIX_TAG);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"        if (argMultimap.getValue(PREFIX_PLAN).isPresent()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"            editClientDescriptor.setPlan(ParserUtil.parsePlan(argMultimap.getValue(PREFIX_PLAN).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jbkim1999":6,"aceszhenwei":9,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aceszhenwei":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ListProcCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import seedu.address.logic.commands.ListProcCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"public class ListProcCommandParser implements Parser\u003cListProcCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"    public ListProcCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"            return new ListProcCommand(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListProcCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"robinrojh":21}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import seedu.address.commons.core.dateWithoutTime.DateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"     * Parses {@code oneBasedIndexes} into a list of {@code Index} and returns it.","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        String trimmedInput \u003d oneBasedIndexes.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        String[] listOfInputs \u003d trimmedInput.split(\" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        List\u003cIndex\u003e listofIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        for (String listOfInput : listOfInputs) {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(listOfInput)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"            listOfInput \u003d listOfInput.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"            listofIndexes.add(Index.fromOneBased(Integer.parseInt(listOfInput)));","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        return listofIndexes;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"     * Parses a {@code String plan} into an {@code Plan}.","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"jbkim1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"jbkim1999"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"jbkim1999"},"content":"     * @throws ParseException if the given {@code plan} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"jbkim1999"},"content":"    public static Plan parsePlan(String plan) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"        String trimmedPlan \u003d plan.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"jbkim1999"},"content":"        if (!Plan.isValidPlan(trimmedPlan)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(Plan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"        return new Plan(trimmedPlan);","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"jbkim1999"},"content":"     * Parses a {@code String information} into an {@code Information}.","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"jbkim1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"jbkim1999"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"jbkim1999"},"content":"     * @throws ParseException if the given {@code information} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"jbkim1999"},"content":"    public static Information parseInformation(String information) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(information);","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"jbkim1999"},"content":"        String trimmedInformation \u003d information.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"jbkim1999"},"content":"        if (!Information.isValidInformation(trimmedInformation)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"jbkim1999"},"content":"        return new Information(information);","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"jbkim1999"},"content":"     * Parses a {@code String cost} into a {@code Cost}.","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"jbkim1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"jbkim1999"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"jbkim1999"},"content":"     * @throws ParseException if the given {@code cost} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"jbkim1999"},"content":"    public static Cost parseCost(String cost) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(cost);","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"jbkim1999"},"content":"        String trimmedCost \u003d cost.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"jbkim1999"},"content":"        if (!Cost.isValidCost(trimmedCost)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"jbkim1999"},"content":"        return new Cost(cost);","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"jbkim1999"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"jbkim1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"jbkim1999"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"jbkim1999"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":204,"author":{"gitId":"jbkim1999"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"jbkim1999"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"jbkim1999"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"jbkim1999"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":209,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"jbkim1999"},"content":"        return new Date(date);","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"iztanpy"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"iztanpy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"iztanpy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"iztanpy"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"iztanpy"},"content":"    public static DateWithoutTime parseDateWithoutTime(String date)","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"iztanpy"},"content":"            throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"iztanpy"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"iztanpy"},"content":"        System.out.println(DateWithoutTime.isValidDate(trimmedDate));","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"iztanpy"},"content":"        if (!DateWithoutTime.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"iztanpy"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"iztanpy"},"content":"        return new DateWithoutTime(trimmedDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"iztanpy":18,"jbkim1999":65,"teominghuang":23,"aceszhenwei":4,"-":120}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"    private List\u003cProcedure\u003e procedures;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"        procedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"     * Creates an AddressBook using the Clients in the {@code toBeCopied}","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"        procedures \u003d toBeCopied.getProcedureList();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"    //// client-level operations","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"     * Returns true if a client with the same address as {@code client} exists in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"        clients.add(p);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"        clients.remove(key);","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"robinrojh"},"content":"    /// procedure-related methods","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"robinrojh"},"content":"     * updates the list of {@code Procedure}.","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"robinrojh"},"content":"    public void setProcedures(List\u003cProcedure\u003e procedureList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"robinrojh"},"content":"        procedures \u003d procedureList;","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"jbkim1999"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":125,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"robinrojh"},"content":"    public ObservableList\u003cProcedure\u003e getProcedureList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"robinrojh"},"content":"        return FXCollections.observableList(procedures);","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients));","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"iztanpy":2,"jbkim1999":31,"robinrojh":18,"-":90}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"    Predicate\u003cProcedure\u003e PREDICATE_SHOW_CLIENT_PROCEDURES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     * Returns true if a client with the same identity as {@code Client} exists in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"     * Deletes the given client.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"     * Adds the given client.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     * {@code Client} must not already exist in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"    void addClient(Client target);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"     * Delete the given Procedure.","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    void deleteProcedure(Procedure procedure);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"     * Add the given Procedure.","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"    void addProcedure(Procedure procedure);","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"robinrojh"},"content":"    void setProcedures(List\u003cProcedure\u003e procedures);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"jbkim1999"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"robinrojh"},"content":"    /** Returns an unmodifiable view of the filtered procedure list */","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"robinrojh"},"content":"    ObservableList\u003cProcedure\u003e getFilteredProcedureList();","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"robinrojh"},"content":"     * Updates the filter of the filtered procedure list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"robinrojh"},"content":"    void updateFilteredProcedureList(Client client, Predicate\u003cProcedure\u003e predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jbkim1999":13,"robinrojh":9,"teominghuang":9,"-":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"    private FilteredList\u003cProcedure\u003e filteredProcedures;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"        filteredProcedures \u003d new FilteredList\u003c\u003e(this.addressBook.getProcedureList());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"aceszhenwei"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"aceszhenwei"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"aceszhenwei"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"    public void deleteProcedure(Procedure procedure) {","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"    public void addProcedure(Procedure procedure) {","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"aceszhenwei"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"aceszhenwei"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"robinrojh"},"content":"    public void setProcedures(List\u003cProcedure\u003e procedures) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"robinrojh"},"content":"        addressBook.setProcedures(procedures);","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"aceszhenwei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"aceszhenwei"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"aceszhenwei"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"aceszhenwei"},"content":"        return filteredClients;","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"robinrojh"},"content":"     * Returns a observable list of {@code Procedure} of {@code Client}.","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"robinrojh"},"content":"    public ObservableList\u003cProcedure\u003e getFilteredProcedureList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"robinrojh"},"content":"        return filteredProcedures;","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"robinrojh"},"content":"     * Updates the filtered list of {@code Client} to match with a new {@code predicate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"aceszhenwei"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"aceszhenwei"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"robinrojh"},"content":"     * Updates the filtered list of {@code Procedure} to match with a new {@code predicate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"robinrojh"},"content":"    public void updateFilteredProcedureList(Client client, Predicate\u003cProcedure\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"robinrojh"},"content":"        requireAllNonNull(client, predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"robinrojh"},"content":"        filteredProcedures \u003d new FilteredList\u003c\u003e(FXCollections.observableArrayList(client.getProcedures()), predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"aceszhenwei"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"robinrojh":26,"teominghuang":5,"aceszhenwei":21,"-":136}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Unmodifiable view of an address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"     * Returns a list of procedures.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"    ObservableList\u003cProcedure\u003e getProcedureList();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jbkim1999":4,"robinrojh":5,"teominghuang":1,"-":12}},{"path":"src/main/java/seedu/address/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":" * Represents a Client\u0027s address in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aceszhenwei":2,"-":55}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"import seedu.address.commons.core.dateWithoutTime.DateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"public class Client {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"    private final Plan plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    private final List\u003cProcedure\u003e procedures \u003d new ArrayList\u003cProcedure\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * Every field, less Procedures, must be present and not null.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Plan plan, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"        this.plan \u003d plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Plan plan,","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"                  Set\u003cTag\u003e tags, List\u003cProcedure\u003e procedures) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        this.plan \u003d plan;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        this.procedures.addAll(procedures);","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"    public Plan getPlan() {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"        return plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"     * Returns an immutable procedure set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"    public List\u003cProcedure\u003e getProcedures() {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"        return Collections.unmodifiableList(procedures);","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"iztanpy"},"content":"    public List\u003cProcedure\u003e getProcsOnDate(DateWithoutTime date) {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"iztanpy"},"content":"        List\u003cProcedure\u003e procsOnDate \u003d new ArrayList\u003cProcedure\u003e ();","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"iztanpy"},"content":"        Date startTime \u003d new Date(date.toString() + Date.START_OF_DAY);","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"iztanpy"},"content":"        Date endTime \u003d new Date(date.toString() + Date.END_OF_DAY);","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"iztanpy"},"content":"        for (int i \u003d 0; i \u003c this.procedures.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"iztanpy"},"content":"            Procedure currentProc \u003d this.procedures.get(i);","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"iztanpy"},"content":"            Date currentDate \u003d currentProc.getDate();","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"iztanpy"},"content":"            if (currentDate.compareTo(startTime) \u003e\u003d 0","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"iztanpy"},"content":"                    \u0026\u0026 currentDate.compareTo(endTime) \u003c\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"iztanpy"},"content":"                procsOnDate.add(currentProc);","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"iztanpy"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"iztanpy"},"content":"        return procsOnDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"iztanpy"},"content":"    public float getCostOnDate(DateWithoutTime date) {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"iztanpy"},"content":"        List\u003cProcedure\u003e procsOnDate \u003d getProcsOnDate(date);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"iztanpy"},"content":"        BigDecimal totalCost \u003d new BigDecimal(0);","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"iztanpy"},"content":"        for (int i \u003d 0; i \u003c procsOnDate.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"iztanpy"},"content":"            Procedure currentProc \u003d this.procedures.get(i);","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"iztanpy"},"content":"            BigDecimal currentCost \u003d currentProc.getCost().value();","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"iztanpy"},"content":"            totalCost \u003d totalCost.add(currentCost);;","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"iztanpy"},"content":"        return totalCost.floatValue();","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"jbkim1999"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"jbkim1999"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress());","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"jbkim1999"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"jbkim1999"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"jbkim1999"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"jbkim1999"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 otherClient.getPlan().equals(getPlan())","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"jbkim1999"},"content":"        return Objects.hash(name, phone, email, address, plan, tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"jbkim1999"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"jbkim1999"},"content":"                .append(\"; Plan: \")","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"jbkim1999"},"content":"                .append(getPlan());","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":185,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"teominghuang"},"content":"        List\u003cProcedure\u003e procedures \u003d getProcedures();","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"teominghuang"},"content":"        if (!procedures.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"teominghuang"},"content":"            builder.append(\"; Procedures: \");","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"teominghuang"},"content":"            procedures.forEach(builder::append);","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"iztanpy":31,"jbkim1999":29,"teominghuang":33,"-":101}},{"path":"src/main/java/seedu/address/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":" * Represents a Client\u0027s email in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aceszhenwei":2,"-":69}},{"path":"src/main/java/seedu/address/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":" * Represents a Client\u0027s name in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"iztanpy":3,"aceszhenwei":2,"-":53}},{"path":"src/main/java/seedu/address/model/client/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"aceszhenwei":5,"-":26}},{"path":"src/main/java/seedu/address/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":" * Represents a Client\u0027s phone number in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aceszhenwei":2,"-":51}},{"path":"src/main/java/seedu/address/model/client/Plan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":" * Represents a Client\u0027s subscription plan of its network.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPlan(String)}","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"public class Plan {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Plans can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"    /*","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"     * The first character of the plan must not be a whitespace,","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"    public final String value;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"     * Constructs an {@code Plan}.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"     * @param plan A valid subscription plan.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"    public Plan(String plan) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"        requireNonNull(plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"        checkArgument(isValidPlan(plan), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"        value \u003d plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    public static boolean isValidPlan(String test) {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"        return value;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"                || (other instanceof Plan // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"                \u0026\u0026 value.equals(((Plan) other).value)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jbkim1999":55}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":" *","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":" *","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"jbkim1999"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"aceszhenwei"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"aceszhenwei"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"aceszhenwei"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"aceszhenwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"aceszhenwei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"aceszhenwei"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"aceszhenwei"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"aceszhenwei"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"aceszhenwei"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"aceszhenwei"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"jbkim1999"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"aceszhenwei"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"aceszhenwei"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"aceszhenwei"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"aceszhenwei"},"content":"                    return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"aceszhenwei"},"content":"                }","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"aceszhenwei"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"aceszhenwei"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jbkim1999":18,"aceszhenwei":119}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jbkim1999":6}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":" * identity).","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jbkim1999":11}},{"path":"src/main/java/seedu/address/model/procedure/Completion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"public class Completion {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"1. hasCompleted should be a Boolean value, \"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"        + \"Boolean.TRUE or Boolean.FALSE\";","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([t][r][u][e]|[f][a][l][s][e])$\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    public final Boolean hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"     * Constructs a {@code Completion}.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     * @param hasCompleted A valid Boolean value indicating hasCompleted of Procedure.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public Completion(String hasCompleted) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        requireNonNull(hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        checkArgument(isValidHasCompleted(hasCompleted), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d Boolean.parseBoolean(hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * Returns true if a given string is a valid boolean.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    public static boolean isValidHasCompleted(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    public Boolean getHasCompleted() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"                || (other instanceof Completion // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"                \u0026\u0026 this.getHasCompleted().equals(((Completion) other).getHasCompleted())); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"teominghuang":52}},{"path":"src/main/java/seedu/address/model/procedure/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"public class Cost {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"            \"1. Cost should be rounded to the nearest cent \\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"                    + \"2. Cost should be a positive value \\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"                    + \"3. Cost should follow the format \u0027dollars.cents\u0027\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"                    + \"Example: 31.10\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!(?:0|0\\\\.0|0\\\\.00)$)[+]?\\\\d+(\\\\.\\\\d|\\\\.\\\\d[0-9])?$\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    public final BigDecimal cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"     * Constructs a {@code Cost}.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"     * @param cost A valid cost.","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    public Cost(String cost) {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(cost);","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"        checkArgument(isValidCost(cost), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"        this.cost \u003d new BigDecimal(cost);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"     * Returns true if a given string is a valid cost.","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    public static boolean isValidCost(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"    public BigDecimal value() {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        return this.cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        return this.cost.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"                || (other instanceof seedu.address.model.procedure.Cost // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 this.cost.equals(((seedu.address.model.procedure.Cost) other).cost)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"        return this.cost.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":58,"jbkim1999":1}},{"path":"src/main/java/seedu/address/model/procedure/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":" * Represents a Procedure\u0027s date in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"public class Date {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"            \"Please ensure that you have typed an existing date in the correct format. \\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"        + \"Dates should be in the format DD/MM/YYYY hh:mm, and it should not be blank \\n\";","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    /*","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{2}[/]\\\\d{2}[/]\\\\d{4} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"    public static final DateTimeFormatter FORMAT_WITH_DATE \u003d DateTimeFormatter","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"            .ofPattern(\"dd/MM/uuuu HH:mm\");","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"    public static final String START_OF_DAY \u003d \" 00:00\";","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    public static final String END_OF_DAY \u003d \" 23:59\";","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    public final LocalDateTime validDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        validDate \u003d LocalDateTime.parse(date, FORMAT_WITH_DATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"            try {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"                System.out.println(\"correct format\");","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"                LocalDateTime.parse(test, FORMAT_WITH_DATE","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"                        .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"                return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"                System.out.println(\"invalid date\");","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"                return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"        return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"    public int compareTo(Date otherDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"        return validDate.compareTo(otherDate.validDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"iztanpy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"        return validDate.format(FORMAT_WITH_DATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"iztanpy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 validDate.equals(((Date) other).validDate)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"iztanpy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"        return validDate.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":87,"aceszhenwei":1}},{"path":"src/main/java/seedu/address/model/procedure/Information.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":" * Represents a Procedure\u0027s information in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInformation(String)}","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"public class Information {","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"            \"Information can take any values but it should not be blank\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"    /*","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"     * The first character of the information must not be a whitespace,","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    public final String info;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"     * Constructs an {@code Information}.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"     * @param info A valid Information.","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"    public Information(String info) {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        requireNonNull(info);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"        checkArgument(isValidInformation(info), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"     * Returns true if a given string is a valid information.","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"    public static boolean isValidInformation(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        return info;","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"                || (other instanceof Information // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 info.equals(((Information) other).info)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"        return info.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":58}},{"path":"src/main/java/seedu/address/model/procedure/Procedure.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":" * Represents a specific procedure in a clients","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProcedure(String)}","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"public class Procedure {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"    private final Information information;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"    private final Date date;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"    private final Cost cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    private final Completion hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public Procedure(Information information, Date date, Cost cost, Completion hasCompleted) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"        requireAllNonNull(information, date, cost);","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"        this.information \u003d information;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"    public Information getInfo() {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        return this.information;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        return this.date;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"    public Cost getCost() {","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"        return this.cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    public Completion getHasCompleted() {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"     * Returns true if both Procedures have the same fields.","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"     * This defines a stronger notion of equality between two Procedures.","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"        if (!(other instanceof Procedure)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"        Procedure otherPerson \u003d (Procedure) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        return otherPerson.getInfo().equals(getInfo())","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"                \u0026\u0026 otherPerson.getDate().equals(getDate())","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"                \u0026\u0026 otherPerson.getCost().equals(getCost())","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"                \u0026\u0026 otherPerson.getHasCompleted().equals(getHasCompleted());","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        return Objects.hash(information, date, cost, hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"iztanpy"},"content":"        builder.append(\"Information: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"                .append(getInfo())","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"iztanpy"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"iztanpy"},"content":"                .append(\"; Cost: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"                .append(getCost())","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"                .append(\"; Completed: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"                .append(getHasCompleted());","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":75,"teominghuang":13}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"        return new Client[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"            new Client(new Name(\"MINISO\"), new Phone(\"65705231\"), new Email(\"miniso@example.com\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"                new Address(\"3155 Commonwealth Ave W, #03-56-58\"), new Plan(\"EXPRESS 200MBps\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"            new Client(new Name(\"Master Fix Services\"), new Phone(\"96724552\"), new Email(\"masterfix@example.com\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"                new Address(\"3155 Commonwealth Ave W, #B1-10\"), new Plan(\"NORMAL 100MBps\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"            new Client(new Name(\"Mr Bean\"), new Phone(\"66594724\"), new Email(\"mrbean@example.com\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"                new Address(\"3155 Commonwealth Ave W, #B1-K13\"), new Plan(\"VALUE 50MBps\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"            new Client(new Name(\"Optical 88\"), new Phone(\"66595327\"), new Email(\"optical88@example.com\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"                new Address(\"3155 Commonwealth Ave W, #05-27\"), new Plan(\"EXPRESS 200MBps\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jbkim1999":16,"aceszhenwei":5,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"    private final String plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    private final List\u003cJsonAdaptedProcedure\u003e procedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"            @JsonProperty(\"plan\") String plan, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"            @JsonProperty(\"procedures\") List\u003cJsonAdaptedProcedure\u003e procedures) {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"        this.plan \u003d plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        if (procedures !\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"            this.procedures.addAll(procedures);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"        plan \u003d source.getPlan().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"        procedures.addAll(source.getProcedures().stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"                .map(JsonAdaptedProcedure::new)","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"        final List\u003cProcedure\u003e clientProcedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"        for (JsonAdaptedProcedure procedure : procedures) {","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"            clientProcedures.add(procedure.toModelType());","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"        if (plan \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Plan.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"        if (!Plan.isValidPlan(plan)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"jbkim1999"},"content":"            throw new IllegalValueException(Plan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"jbkim1999"},"content":"        final Plan modelPlan \u003d new Plan(plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"jbkim1999"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"        final ArrayList\u003cProcedure\u003e modelProcedures \u003d new ArrayList\u003c\u003e(clientProcedures);","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"teominghuang"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelPlan, modelTags, modelProcedures);","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jbkim1999":22,"teominghuang":17,"aceszhenwei":8,"-":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProcedure.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Completion;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"public class JsonAdaptedProcedure {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Procedure\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private final String information;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private final String date;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    private final String cost;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    private final String hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"     * Constructs a {@code JsonAdaptedProcedure} with the given procedure details.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    public JsonAdaptedProcedure(@JsonProperty(\"information\") String information,","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"            @JsonProperty(\"date\") String date, @JsonProperty(\"cost\") String cost,","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"            @JsonProperty(\"hasCompleted\") String hasCompleted) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        this.information \u003d information;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * Converts a given {@code Procedure} into this class for Jackson use.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    public JsonAdaptedProcedure(Procedure source) {","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        information \u003d source.getInfo().info;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        cost \u003d source.getCost().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        hasCompleted \u003d source.getHasCompleted().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"     * Converts this Jackson-friendly adapted procClient object into the model\u0027s {@code Procedure} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"    public Procedure toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        if (information \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                    Information.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        if (!Information.isValidInformation(information)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        final Information modelInfo \u003d new Information(information);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"                    Date.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        if (cost \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"                    Cost.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"        if (!Cost.isValidCost(cost)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"        final Cost modelCost \u003d new Cost(cost);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"        if (hasCompleted \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"                    Completion.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"        if (!Completion.isValidHasCompleted(hasCompleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"            throw new IllegalValueException(Completion.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"        final Completion modelCompletion \u003d new Completion(hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"        return new Procedure(modelInfo, modelDate, modelCost, modelCompletion);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"robinrojh":10,"teominghuang":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jbkim1999":12,"-":48}},{"path":"src/main/java/seedu/address/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    public final Client client;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"    private Label plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"        plan.setText(client.getPlan().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"        client.getTags().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jbkim1999":3,"aceszhenwei":16,"-":61}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jbkim1999":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.ColumnConstraints;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"    private ProcedureListPanel procedureListPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"robinrojh"},"content":"    private GridPane clientListGridPane;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"    private StackPane procedureListPanelPlaceholder;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"robinrojh"},"content":"     * Sets up the client column and procedure column of clientListGridPane.","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"robinrojh"},"content":"    void setUpColumnConstraints() {","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"robinrojh"},"content":"        ColumnConstraints column1 \u003d new ColumnConstraints();","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"robinrojh"},"content":"        column1.setPercentWidth(50);","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"robinrojh"},"content":"        column1.setHgrow(Priority.ALWAYS);","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"robinrojh"},"content":"        ColumnConstraints column2 \u003d new ColumnConstraints();","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"robinrojh"},"content":"        column2.setPercentWidth(50);","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"robinrojh"},"content":"        column2.setHgrow(Priority.ALWAYS);","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"robinrojh"},"content":"        clientListGridPane.getColumnConstraints().addAll(column1, column2); // each get 50% of width","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"robinrojh"},"content":"     * Adds the placeholder panes into the grid pane,","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"robinrojh"},"content":"    void addPlaceholdersToGridPane() {","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"robinrojh"},"content":"        clientListGridPane.add(clientListPanelPlaceholder, 0, 0);","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"robinrojh"},"content":"        clientListGridPane.add(procedureListPanelPlaceholder, 1, 0);","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"robinrojh"},"content":"        setUpColumnConstraints();","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"robinrojh"},"content":"        ObservableList\u003cClient\u003e clients \u003d logic.getFilteredClientList();","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"robinrojh"},"content":"        clientListPanel \u003d new ClientListPanel(clients);","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"jbkim1999"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"robinrojh"},"content":"        if (clients.size() \u003e 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"robinrojh"},"content":"            procedureListPanel \u003d new ProcedureListPanel(","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"robinrojh"},"content":"                    FXCollections.observableArrayList(clients.get(0).getProcedures()));","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"robinrojh"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"robinrojh"},"content":"            procedureListPanel \u003d new ProcedureListPanel(FXCollections.observableArrayList());","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"robinrojh"},"content":"        procedureListPanelPlaceholder.getChildren().add(procedureListPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"robinrojh"},"content":"        addPlaceholdersToGridPane();","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":213,"author":{"gitId":"jbkim1999"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"jbkim1999"},"content":"        return clientListPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"robinrojh"},"content":"            procedureListPanel \u003d new ProcedureListPanel(logic.getFilteredProcedureList());","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"robinrojh"},"content":"            procedureListPanelPlaceholder.getChildren().add(procedureListPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jbkim1999":6,"robinrojh":44,"-":195}},{"path":"src/main/java/seedu/address/ui/ProcedureCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"public class ProcedureCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"    private static final String FXML \u003d \"ProcedureListCard.fxml\";","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"    public final Procedure procedure;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"    private Label id;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"    private Label information;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"    private Label date;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"    private Label cost;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"     * Creates a {@code ProcedureCard} with the given {@code Procedure} and index to display.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"robinrojh"},"content":"    public ProcedureCard(Procedure procedure, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"robinrojh"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"robinrojh"},"content":"        this.procedure \u003d procedure;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"        information.setText(procedure.getInfo().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"robinrojh"},"content":"        date.setText(procedure.getDate().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"        cost.setText(procedure.getCost().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"robinrojh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"robinrojh"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"robinrojh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"robinrojh"},"content":"        if (!(other instanceof ProcedureCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"robinrojh"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"        ProcedureCard card \u003d (ProcedureCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"robinrojh"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"                \u0026\u0026 procedure.equals(card.procedure);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"robinrojh":62}},{"path":"src/main/java/seedu/address/ui/ProcedureListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"public class ProcedureListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"    private static final String FXML \u003d \"ProcedureListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProcedureListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"    private ListView\u003cProcedure\u003e procedureListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"     * Creates a {@code ProcedureListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"    public ProcedureListPanel(ObservableList\u003cProcedure\u003e procedureList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"        procedureListView.setItems(procedureList);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"        procedureListView.setCellFactory(listView -\u003e new ProcedureListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"        procedureListView.setStyle(\"-fx-border-width: 0 0 0 2; -fx-border-color: white;\");","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Procedure} using a {@code ProcedureCard}.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"    class ProcedureListViewCell extends ListCell\u003cProcedure\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"        protected void updateItem(Procedure procedure, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"robinrojh"},"content":"            super.updateItem(procedure, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"robinrojh"},"content":"            if (empty || procedure \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"robinrojh"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"robinrojh"},"content":"                setGraphic(new ProcedureCard(procedure, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"robinrojh":45}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"      \u003cLabel fx:id\u003d\"plan\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$plan\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jbkim1999":1,"-":36}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aceszhenwei":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"jbkim1999"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2022-03-10"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jbkim1999":1,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"        \u003cGridPane fx:id\u003d\"clientListGridPane\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"robinrojh"},"content":"          \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" style\u003d\"-fx-border-width: 5; -fx-border-color: white;\"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"robinrojh"},"content":"                VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"            \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"robinrojh"},"content":"          \u003cVBox fx:id\u003d\"procedureList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"robinrojh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"            \u003cStackPane fx:id\u003d\"procedureListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"robinrojh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"robinrojh"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"robinrojh":11,"aceszhenwei":1,"-":55}},{"path":"src/main/resources/view/ProcedureListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"        \u003cLabel fx:id\u003d\"information\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"      \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"robinrojh":33}},{"path":"src/main/resources/view/ProcedureListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"  \u003cListView fx:id\u003d\"procedureListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"robinrojh":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jbkim1999":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"        String deleteCommand \u003d \"deleteClient 9\";","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"iztanpy"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_APPLE + PHONE_DESC_APPLE + EMAIL_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_APPLE + PLAN_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"        Client expectedClient \u003d new ClientBuilder(APPLE).withTags().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"iztanpy":9,"aceszhenwei":8,"-":146}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"aceszhenwei":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"        Client appleBees \u003d new ClientBuilder().withName(\"AppleBee\u0027s\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"        Client burger \u003d new ClientBuilder().withName(\"Burger King\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"        AddCommand addAppleBeesCommand \u003d new AddCommand(appleBees);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        AddCommand addBurgerCommand \u003d new AddCommand(burger);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(addAppleBeesCommand.equals(addAppleBeesCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"        AddCommand addAppleBeesCommandCopy \u003d new AddCommand(appleBees);","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(addAppleBeesCommand.equals(addAppleBeesCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(addAppleBeesCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(addAppleBeesCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(addAppleBeesCommand.equals(addBurgerCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"jbkim1999"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"        public void addProcedure(Procedure procedure) {","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"teominghuang"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"teominghuang"},"content":"        public void deleteProcedure(Procedure procedure) {","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"teominghuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"robinrojh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"robinrojh"},"content":"        public void setProcedures(List\u003cProcedure\u003e procedures) {","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"robinrojh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"robinrojh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"jbkim1999"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"jbkim1999"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"robinrojh"},"content":"        public ObservableList\u003cProcedure\u003e getFilteredProcedureList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"jbkim1999"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"robinrojh"},"content":"        public void updateFilteredProcedureList(Client client, Predicate\u003cProcedure\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"jbkim1999"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"jbkim1999"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"jbkim1999"},"content":"        private final Client client;","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"jbkim1999"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"jbkim1999"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"jbkim1999"},"content":"            this.client \u003d client;","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"jbkim1999"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"jbkim1999"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"jbkim1999"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"jbkim1999"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"jbkim1999"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"jbkim1999"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"jbkim1999"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"jbkim1999"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"jbkim1999"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"jbkim1999"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"jbkim1999"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"jbkim1999"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"iztanpy":2,"jbkim1999":47,"robinrojh":7,"teominghuang":9,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/AddProcCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_REPLACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HASCOMPLETED_TRUE;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INFO_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ProcedureBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.RandomProcedureBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddProcCommand.","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"public class AddProcCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"    private static final int EXPECTED_LENGTH_OF_LIST \u003d 3;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"    // new Model without any Clients","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"    private Model newModel \u003d new ModelManager();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"    private Procedure toBeAddedProcedure \u003d new ProcedureBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"    public void execute_properIndexWithProperProcedure_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"        // guaranteed to add a non-duplicated Procedure since starting from a new Client","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"        Client newClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"        newModel.addClient(newClient);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand addProcCommand \u003d new AddProcCommand(INDEX_FIRST_CLIENT, toBeAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"        String expectedMessage \u003d String.format(AddProcCommand.MESSAGE_SUCCESS, toBeAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(newModel.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"        Client clientToAddProc \u003d newModel.getFilteredClientList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"        Client clientWithAddedProcedure \u003d new ClientBuilder(clientToAddProc)","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"jbkim1999"},"content":"                .withProcedures(addProcCommand.procListWithAddedProperProc(clientToAddProc.getProcedures())).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"        expectedModel.setClient(clientToAddProc, clientWithAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"jbkim1999"},"content":"        assertCommandSuccess(addProcCommand, newModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_autosortProcedureWhenAdded_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"        RandomProcedureBuilder randomProcedureBuilder \u003d new RandomProcedureBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"        List\u003cProcedure\u003e expectedProcList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"        List\u003cProcedure\u003e currentProcList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"        AddProcCommand addProcCommand \u003d new AddProcCommand(INDEX_FIRST_CLIENT, toBeAddedProcedure);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"        // Adding in a sorted manner","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"        expectedProcList.add(toBeAddedProcedure);","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"        for (int i \u003d 0; i \u003c EXPECTED_LENGTH_OF_LIST; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"            Procedure randomProcedure \u003d randomProcedureBuilder.buildRandomProcedure(i);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"            currentProcList.add(randomProcedure);","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"            expectedProcList.add(randomProcedure);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"        } Collections.shuffle(currentProcList);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"            List\u003cProcedure\u003e newProcList \u003d addProcCommand.procListWithAddedProc(currentProcList);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"            assertEquals(expectedProcList, newProcList);","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"            assert false;","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"jbkim1999"},"content":"    public void execute_nullIndexWithProperProcedure_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddProcCommand(null, toBeAddedProcedure));","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"    public void execute_improperIndexWithProperProcedure_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"jbkim1999"},"content":"        // out of bounds index","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"jbkim1999"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand addProcCommand \u003d new AddProcCommand(outOfBoundIndex , toBeAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"        assertCommandFailure(addProcCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"jbkim1999"},"content":"    public void execute_properIndexWithNullProcedure_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddProcCommand(INDEX_FIRST_CLIENT, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"jbkim1999"},"content":"    public void execute_properIndexWithDuplicateProcedure_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"jbkim1999"},"content":"        Client newClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"jbkim1999"},"content":"        newModel.addClient(newClient);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand addProcCommand \u003d new AddProcCommand(INDEX_FIRST_CLIENT, toBeAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"        Client clientWithAddedProcedure \u003d new ClientBuilder(newClient)","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"                .withProcedures(addProcCommand.procListWithAddedProperProc(newClient.getProcedures())).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"        newModel.setClient(newClient, clientWithAddedProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"jbkim1999"},"content":"        // executing again, guaranteed to be a duplicate Procedure","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"jbkim1999"},"content":"        assertCommandFailure(addProcCommand, newModel, AddProcCommand.MESSAGE_DUPLICATE_PROCEDURE);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"jbkim1999"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"jbkim1999"},"content":"        final AddProcCommand standardCommand \u003d new AddProcCommand(INDEX_FIRST_CLIENT, DESC_REPAIR);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"jbkim1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"jbkim1999"},"content":"        Procedure copyProcedure \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPAIR).withDate(VALID_DATE_REPAIR)","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPAIR).withCompletion(VALID_HASCOMPLETED_TRUE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand commandWithSameValues \u003d new AddProcCommand(INDEX_FIRST_CLIENT, copyProcedure);","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"jbkim1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"jbkim1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"jbkim1999"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"jbkim1999"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(standardCommand.equals(new AddProcCommand(INDEX_SECOND_CLIENT, DESC_REPAIR)));","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"jbkim1999"},"content":"        // different Procedure -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(standardCommand.equals(new AddProcCommand(INDEX_FIRST_CLIENT, DESC_REPLACE)));","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"jbkim1999":115,"aceszhenwei":41}},{"path":"src/test/java/seedu/address/logic/commands/CalculateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"public class CalculateCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"iztanpy":12}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"aceszhenwei":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ProcedureBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_NAME_APPLE \u003d \"Apple\";","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_NAME_BURGER \u003d \"Burger King\";","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_PHONE_APPLE \u003d \"11111111\";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_PHONE_BURGER \u003d \"22222222\";","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_EMAIL_APPLE \u003d \"apple@example.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_EMAIL_BURGER \u003d \"burger@example.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_ADDRESS_APPLE \u003d \"Block 312, Apple Street 1\";","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_ADDRESS_BURGER \u003d \"Block 123, Burger Street 3\";","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_PLAN_APPLE \u003d \"EXPRESS 200MBps\";","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_PLAN_BURGER \u003d \"NORMAL 100MBps\";","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_TAG_TECH \u003d \"technology\";","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"    public static final String VALID_TAG_FASTFOOD \u003d \"fastfood\";","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"    public static final String NAME_DESC_APPLE \u003d \" \" + PREFIX_NAME + VALID_NAME_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"    public static final String NAME_DESC_BURGER \u003d \" \" + PREFIX_NAME + VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"    public static final String PHONE_DESC_APPLE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"    public static final String PHONE_DESC_BURGER \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"    public static final String EMAIL_DESC_APPLE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"    public static final String EMAIL_DESC_BURGER \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"    public static final String ADDRESS_DESC_APPLE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"    public static final String ADDRESS_DESC_BURGER \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"    public static final String PLAN_DESC_APPLE \u003d \" \" + PREFIX_PLAN + VALID_PLAN_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"    public static final String PLAN_DESC_BURGER \u003d \" \" + PREFIX_PLAN + VALID_PLAN_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"    public static final String TAG_DESC_FASTFOOD \u003d \" \" + PREFIX_TAG + VALID_TAG_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"    public static final String TAG_DESC_TECH \u003d \" \" + PREFIX_TAG + VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME; // empty string not allowed for names","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"burger!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"    public static final String INVALID_PLAN_DESC \u003d \" \" + PREFIX_PLAN; // empty string not allowed for plans","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"tech*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"iztanpy"},"content":"    public static final EditCommand.EditClientDescriptor DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_DATE_REPAIR \u003d \"21/04/2022 11:50\";","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_DATE_REPLACE \u003d \"18/03/2022 14:55\";","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_INFO_REPAIR \u003d \"Repair Router\";","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_INFO_REPLACE \u003d \"Replace Wires\";","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_COST_REPAIR \u003d \"13.50\";","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_COST_REPLACE \u003d \"5.05\";","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_HASCOMPLETED_TRUE \u003d \"true\";","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"    public static final String VALID_HASCOMPLETED_FALSE \u003d \"false\";","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"    public static final String INFO_DESC_REPAIR \u003d \" \" + PREFIX_INFORMATION + VALID_INFO_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"jbkim1999"},"content":"    public static final String INFO_DESC_REPLACE \u003d \" \" + PREFIX_INFORMATION + VALID_INFO_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"    public static final String COST_DESC_REPAIR \u003d \" \" + PREFIX_COST + VALID_COST_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"jbkim1999"},"content":"    public static final String COST_DESC_REPLACE \u003d \" \" + PREFIX_COST + VALID_COST_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"    public static final String DATE_DESC_REPAIR \u003d \" \" + PREFIX_DATE + VALID_DATE_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"jbkim1999"},"content":"    public static final String DATE_DESC_REPLACE \u003d \" \" + PREFIX_DATE + VALID_DATE_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"    // empty string not allowed for info","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"jbkim1999"},"content":"    public static final String INVALID_INFO_DESC \u003d \" \" + PREFIX_INFORMATION;","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"    // hyphen not allowed in dates","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"21-04-2022 11:50\";","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"jbkim1999"},"content":"    // costs support two decimal places max","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"jbkim1999"},"content":"    public static final String INVALID_COST_DESC \u003d \" \" + PREFIX_COST + \"13.555\";","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"    public static final Procedure DESC_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"jbkim1999"},"content":"    public static final Procedure DESC_REPLACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"iztanpy"},"content":"        DESC_APPLE \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"iztanpy"},"content":"                .withPhone(VALID_PHONE_APPLE).withEmail(VALID_EMAIL_APPLE).withAddress(VALID_ADDRESS_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"iztanpy"},"content":"        DESC_BURGER \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"iztanpy"},"content":"                .withPhone(VALID_PHONE_BURGER).withEmail(VALID_EMAIL_BURGER).withAddress(VALID_ADDRESS_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_TECH, VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"        DESC_REPAIR \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPAIR).withDate(VALID_DATE_REPAIR)","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPAIR).withCompletion(VALID_HASCOMPLETED_TRUE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"jbkim1999"},"content":"        DESC_REPLACE \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPLACE).withDate(VALID_DATE_REPLACE)","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPLACE).withCompletion(VALID_HASCOMPLETED_FALSE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"iztanpy"},"content":"            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"iztanpy"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"jbkim1999"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"aceszhenwei"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"jbkim1999"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"aceszhenwei"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"aceszhenwei"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"aceszhenwei"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"aceszhenwei"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"aceszhenwei"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"iztanpy":38,"jbkim1999":38,"aceszhenwei":11,"-":85}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"aceszhenwei"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jbkim1999":2,"aceszhenwei":26,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/DeleteProcCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"public class DeleteProcCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    //Will do up more in due time!","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    //@Test","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    //public void execute_procedureWasDeletedFromClient_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    //Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    //DeleteProcCommand deleteCommand \u003d new DeleteProcCommand(INDEX_FIRST_CLIENT, INDEX_FIRST_PROCEDURE);","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    //String expectedMessage \u003d String.format(DeleteProcCommand.MESSAGE_EDIT_CLIENT_SUCCESS,","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    // editedClient.getProcedures());","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    //Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    //expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    //assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    //}","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"teominghuang":29}},{"path":"src/test/java/seedu/address/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_APPLE);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"        assertTrue(DESC_APPLE.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"        assertTrue(DESC_APPLE.equals(DESC_APPLE));","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(DESC_BURGER));","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor editedApple \u003d new EditClientDescriptorBuilder(DESC_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"                .withName(VALID_NAME_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        editedApple \u003d new EditClientDescriptorBuilder(DESC_APPLE).withPhone(VALID_PHONE_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        editedApple \u003d new EditClientDescriptorBuilder(DESC_APPLE).withEmail(VALID_EMAIL_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"        editedApple \u003d new EditClientDescriptorBuilder(DESC_APPLE).withAddress(VALID_ADDRESS_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"        editedApple \u003d new EditClientDescriptorBuilder(DESC_APPLE).withTags(VALID_TAG_TECH).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"iztanpy":24,"aceszhenwei":3,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, descriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BURGER).withPhone(VALID_PHONE_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_TECH).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"                .withPhone(VALID_PHONE_BURGER).withTags(VALID_TAG_TECH).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, new EditClientDescriptor());","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"iztanpy"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"iztanpy"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BURGER).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CLIENT, descriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"jbkim1999"},"content":"        // edit client in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"aceszhenwei"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"aceszhenwei"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"aceszhenwei"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"iztanpy"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"aceszhenwei"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"aceszhenwei"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"aceszhenwei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"iztanpy"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BURGER).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"aceszhenwei"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"iztanpy"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, DESC_APPLE);","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_APPLE);","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"aceszhenwei"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CLIENT, copyDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"iztanpy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CLIENT, DESC_APPLE)));","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"iztanpy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CLIENT, DESC_BURGER)));","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"iztanpy":20,"jbkim1999":3,"aceszhenwei":45,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.CARLS;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ELLES;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Jr Elle\u0027s Kunz\");","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"        assertEquals(Arrays.asList(CARLS, ELLES, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"iztanpy":4,"jbkim1999":12,"-":67}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jbkim1999":1,"aceszhenwei":3,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListProcCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Completion;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"robinrojh"},"content":"public class ListProcCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"robinrojh"},"content":"    private Model model;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"robinrojh"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"robinrojh"},"content":"    private List\u003cProcedure\u003e sampleProcedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"robinrojh"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"robinrojh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        sampleProcedures.add(new Procedure(new Information(\"hello\"), new Date(\"15/06/2022 10:15\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"robinrojh"},"content":"                new Cost(\"1.05\"), new Completion(\"false\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        sampleProcedures.add(new Procedure(new Information(\"o no\"), new Date(\"18/08/2022 11:30\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"robinrojh"},"content":"                new Cost(\"1.10\"), new Completion(\"false\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"robinrojh"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"robinrojh"},"content":"    public void execute_listProc() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"robinrojh"},"content":"        Client sampleClient \u003d new ClientBuilder().withProcedures(sampleProcedures).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"robinrojh"},"content":"        model.addClient(sampleClient);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"robinrojh"},"content":"        expectedModel.addClient(sampleClient);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"        expectedModel.setProcedures(sampleProcedures);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"robinrojh"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"robinrojh"},"content":"                new ListProcCommand(Index.fromZeroBased(model.getFilteredClientList().size() - 1)),","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"robinrojh"},"content":"                model,","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"robinrojh"},"content":"                ListProcCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"robinrojh"},"content":"                expectedModel","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"robinrojh"},"content":"        );","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"robinrojh"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"robinrojh"},"content":"    public void execute_invalidIndex() {","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"robinrojh"},"content":"        assertCommandFailure(new ListProcCommand(Index.fromZeroBased(model.getFilteredClientList().size())),","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"robinrojh"},"content":"                model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"iztanpy":2,"robinrojh":60}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLAN_DESC;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLAN_DESC;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.VALID_PLAN_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"        Client expectedClient \u003d new ClientBuilder(BURGER).withTags(VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_APPLE + NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGER + PHONE_DESC_APPLE + PHONE_DESC_BURGER + EMAIL_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_APPLE + EMAIL_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"        // multiple plans - last plan accepted","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_APPLE + PLAN_DESC_BURGER + TAG_DESC_FASTFOOD, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"iztanpy"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BURGER).withTags(VALID_TAG_FASTFOOD, VALID_TAG_TECH)","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD, new AddCommand(expectedClientMultipleTags));","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"iztanpy"},"content":"        Client expectedClient \u003d new ClientBuilder(APPLE).withTags().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, NAME_DESC_APPLE + PHONE_DESC_APPLE + EMAIL_DESC_APPLE + ADDRESS_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_APPLE, new AddCommand(expectedClient));","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, VALID_NAME_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER,","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + VALID_PHONE_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER,","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + VALID_EMAIL_BURGER + ADDRESS_DESC_BURGER,","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + VALID_ADDRESS_BURGER,","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, VALID_NAME_BURGER + VALID_PHONE_BURGER + VALID_EMAIL_BURGER + VALID_ADDRESS_BURGER,","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + INVALID_PHONE_DESC + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + INVALID_EMAIL_DESC + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"jbkim1999"},"content":"        // invalid plan","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"iztanpy"},"content":"                + INVALID_PLAN_DESC + TAG_DESC_TECH + TAG_DESC_FASTFOOD, Plan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER + INVALID_TAG_DESC + VALID_TAG_FASTFOOD, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BURGER + EMAIL_DESC_BURGER + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"iztanpy"},"content":"                + PLAN_DESC_BURGER, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BURGER + PHONE_DESC_BURGER + EMAIL_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_BURGER + PLAN_DESC_BURGER + TAG_DESC_TECH + TAG_DESC_FASTFOOD,","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"iztanpy":61,"jbkim1999":8,"aceszhenwei":5,"-":81}},{"path":"src/test/java/seedu/address/logic/parser/AddProcCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COST_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COST_DESC_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INFO_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INFO_DESC_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COST_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INFO_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INFO_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.commands.AddProcCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ProcedureBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"public class AddProcCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProcCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    private AddProcCommandParser parser \u003d new AddProcCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"        // no index specified","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, INFO_DESC_REPAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"        // no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"        // negative index","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"-5\" + INFO_DESC_REPAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"        // zero index","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"0\" + INFO_DESC_REPAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"jbkim1999"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"jbkim1999"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1 z/string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"jbkim1999"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INFO_DESC + COST_DESC_REPAIR","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"jbkim1999"},"content":"                + DATE_DESC_REPAIR, Information.MESSAGE_CONSTRAINTS); // invalid info","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\" + INFO_DESC_REPAIR + COST_DESC_REPAIR","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"                + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\" + INFO_DESC_REPAIR + INVALID_COST_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"jbkim1999"},"content":"                + DATE_DESC_REPAIR, Cost.MESSAGE_CONSTRAINTS); // invalid cost","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"        // valid info followed by invalid info. The test case for invalid info followed by valid info","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\" + INFO_DESC_REPAIR + INVALID_INFO_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"                + DATE_DESC_REPAIR + COST_DESC_REPAIR, Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INFO_DESC + INVALID_DATE_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"                        + COST_DESC_REPAIR, Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"jbkim1999"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"jbkim1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + INFO_DESC_REPAIR + DATE_DESC_REPAIR","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"                + COST_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"        Procedure procedureToBeAdded \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPAIR).withDate(VALID_DATE_REPAIR)","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPAIR).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand expectedCommand \u003d new AddProcCommand(targetIndex, procedureToBeAdded);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"jbkim1999"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"jbkim1999"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"jbkim1999"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + INFO_DESC_REPLACE + INFO_DESC_REPAIR","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"jbkim1999"},"content":"                + DATE_DESC_REPLACE + DATE_DESC_REPAIR + COST_DESC_REPLACE + COST_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"        Procedure procedureToBeAdded \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPAIR).withDate(VALID_DATE_REPAIR)","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPAIR).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand expectedCommand \u003d new AddProcCommand(targetIndex, procedureToBeAdded);","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"jbkim1999"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"jbkim1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_INFO_DESC + INFO_DESC_REPAIR + INVALID_DATE_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"jbkim1999"},"content":"                + DATE_DESC_REPAIR + INVALID_COST_DESC + COST_DESC_REPAIR;","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"jbkim1999"},"content":"        Procedure procedureToBeAdded \u003d new ProcedureBuilder().withInfo(VALID_INFO_REPAIR).withDate(VALID_DATE_REPAIR)","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"jbkim1999"},"content":"                .withCost(VALID_COST_REPAIR).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"jbkim1999"},"content":"        AddProcCommand expectedCommand \u003d new AddProcCommand(targetIndex, procedureToBeAdded);","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"jbkim1999":124}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(new AddCommand(client), command);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CLIENT.getOneBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_CLIENT), command);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"                + INDEX_FIRST_CLIENT.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CLIENT, descriptor), command);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jbkim1999":2,"aceszhenwei":14,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/CalculateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"public class CalculateCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"iztanpy":5}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"robinrojh"},"content":"            System.out.println(parser.getClass());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"robinrojh":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CLIENT));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"aceszhenwei":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, VALID_NAME_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_APPLE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BURGER + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FASTFOOD + TAG_DESC_TECH + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FASTFOOD + TAG_EMPTY + TAG_DESC_TECH, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FASTFOOD + TAG_DESC_TECH, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"iztanpy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"iztanpy"},"content":"                        + VALID_ADDRESS_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"iztanpy"},"content":"                        + VALID_PHONE_APPLE,","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"iztanpy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BURGER + TAG_DESC_TECH","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"iztanpy"},"content":"                + EMAIL_DESC_APPLE + ADDRESS_DESC_APPLE + NAME_DESC_APPLE + TAG_DESC_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"iztanpy"},"content":"                .withPhone(VALID_PHONE_BURGER).withEmail(VALID_EMAIL_APPLE).withAddress(VALID_ADDRESS_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_TECH, VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"iztanpy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BURGER + EMAIL_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"iztanpy"},"content":"                .withEmail(VALID_EMAIL_APPLE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_THIRD_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"iztanpy"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_APPLE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"iztanpy"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"iztanpy"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_APPLE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"iztanpy"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"iztanpy"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_APPLE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"iztanpy"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"iztanpy"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_APPLE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"iztanpy"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"iztanpy"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"iztanpy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_APPLE + EMAIL_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"iztanpy"},"content":"                + TAG_DESC_FASTFOOD + PHONE_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"iztanpy"},"content":"                + ADDRESS_DESC_APPLE + EMAIL_DESC_APPLE","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"iztanpy"},"content":"                + TAG_DESC_FASTFOOD","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"iztanpy"},"content":"                + PHONE_DESC_BURGER + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"iztanpy"},"content":"                + EMAIL_DESC_BURGER + TAG_DESC_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"iztanpy"},"content":"                .withEmail(VALID_EMAIL_BURGER).withAddress(VALID_ADDRESS_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_FASTFOOD, VALID_TAG_TECH)","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"iztanpy"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"iztanpy"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"iztanpy"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BURGER + INVALID_PHONE_DESC + ADDRESS_DESC_BURGER","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"iztanpy"},"content":"                + PHONE_DESC_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"iztanpy"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BURGER).withEmail(VALID_EMAIL_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"iztanpy"},"content":"                .withAddress(VALID_ADDRESS_BURGER).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"aceszhenwei"},"content":"        Index targetIndex \u003d INDEX_THIRD_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"aceszhenwei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"iztanpy":64,"aceszhenwei":17,"-":137}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Applebee\u0027s\", \"Burger\")));","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, \"Applebee\u0027s Burger\", expectedFindCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"        assertParseSuccess(parser, \" \\n Applebee\u0027s \\n \\t Burger  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"iztanpy":3,"aceszhenwei":1,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/ListProcCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"robinrojh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"robinrojh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"robinrojh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"robinrojh"},"content":"import seedu.address.logic.commands.ListProcCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"robinrojh"},"content":"public class ListProcCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"    private ListProcCommandParser parser \u003d new ListProcCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"robinrojh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"robinrojh"},"content":"    public void parse_validArgs_returnsListProcCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"robinrojh"},"content":"        assertParseSuccess(parser, \"1\", new ListProcCommand(INDEX_FIRST_CLIENT));","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"robinrojh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"robinrojh"},"content":"        assertParseFailure(parser, \"b\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"robinrojh"},"content":"                ListProcCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"robinrojh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"robinrojh":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"    private static final String INVALID_PLAN \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    private static final String VALID_PLAN \u003d \"Express 200MBps\";","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"jbkim1999"},"content":"    public void parsePlan_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePlan((String) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"jbkim1999"},"content":"    public void parsePlan_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePlan(INVALID_PLAN));","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"jbkim1999"},"content":"    public void parsePlan_validValueWithoutWhitespace_returnsPlan() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"jbkim1999"},"content":"        Plan expectedPlan \u003d new Plan(VALID_PLAN);","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(expectedPlan, ParserUtil.parsePlan(VALID_PLAN));","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"jbkim1999"},"content":"    public void parsePlan_validValueWithWhitespace_returnsTrimmedPlan() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"jbkim1999"},"content":"        String planWithWhitespace \u003d WHITESPACE + VALID_PLAN + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"jbkim1999"},"content":"        Plan expectedPlan \u003d new Plan(VALID_PLAN);","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(expectedPlan, ParserUtil.parsePlan(planWithWhitespace));","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"iztanpy":1,"jbkim1999":26,"aceszhenwei":7,"-":188}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ARTFRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BURGER;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"jbkim1999"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        // Two clients with the same address fields","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        Client editedBurger \u003d new ClientBuilder(ARTFRIEND)","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"                .withAddress(VALID_ADDRESS_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(BURGER, editedBurger);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newClients);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"jbkim1999"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"jbkim1999"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"        addressBook.addClient(BURGER);","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"        // editedBurger only has the same address as burger","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"        Client editedBurger \u003d new ClientBuilder(ARTFRIEND).withAddress(VALID_ADDRESS_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"        assertTrue(addressBook.hasClient(editedBurger));","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"     * A stub ReadOnlyAddressBook whose clients list can violate interface constraints.","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"robinrojh"},"content":"        private final ObservableList\u003cProcedure\u003e procedures \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"jbkim1999"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"jbkim1999"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"jbkim1999"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"jbkim1999"},"content":"            return clients;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"robinrojh"},"content":"        public ObservableList\u003cProcedure\u003e getProcedureList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"robinrojh"},"content":"            return procedures;","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"iztanpy":12,"jbkim1999":18,"robinrojh":4,"-":65}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ARTFRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BOSS;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"iztanpy"},"content":"        assertFalse(modelManager.hasClient(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"jbkim1999"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"iztanpy"},"content":"        modelManager.addClient(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"iztanpy"},"content":"        assertTrue(modelManager.hasClient(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"iztanpy"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withClient(ARTFRIEND).withClient(BOSS).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"iztanpy"},"content":"        String[] keywords \u003d ARTFRIEND.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"iztanpy":7,"jbkim1999":10,"-":115}},{"path":"src/test/java/seedu/address/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"aceszhenwei":1,"-":35}},{"path":"src/test/java/seedu/address/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ARTFRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"public class ClientTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"    public void isSameClient() {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        assertTrue(ARTFRIEND.isSameClient(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.isSameClient(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"        // same address, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"        Client editedArtfriend \u003d new ClientBuilder(ARTFRIEND)","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"                .withName(VALID_NAME_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"                .withPhone(VALID_PHONE_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"                .withEmail(VALID_EMAIL_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"                .withTags(VALID_TAG_TECH).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"        assertTrue(ARTFRIEND.isSameClient(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"        // different address, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withAddress(VALID_ADDRESS_BURGER).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.isSameClient(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"        // address has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"        String addressWithTrailingSpaces \u003d VALID_ADDRESS_BURGER + \" \";","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        Client editedBurger \u003d new ClientBuilder(BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"                .withAddress(addressWithTrailingSpaces).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"        assertFalse(BURGER.isSameClient(editedBurger));","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"        Client artfriendCopy \u003d new ClientBuilder(ARTFRIEND).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        assertTrue(ARTFRIEND.equals(artfriendCopy));","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"        assertTrue(ARTFRIEND.equals(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"jbkim1999"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(BURGER));","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"        Client editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withName(VALID_NAME_BURGER).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"        editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withPhone(VALID_PHONE_BURGER).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"iztanpy"},"content":"        editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withEmail(VALID_EMAIL_BURGER).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"iztanpy"},"content":"        editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withAddress(VALID_ADDRESS_BURGER).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"iztanpy"},"content":"        editedArtfriend \u003d new ClientBuilder(ARTFRIEND).withTags(VALID_TAG_TECH).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"iztanpy"},"content":"        assertFalse(ARTFRIEND.equals(editedArtfriend));","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"iztanpy":42,"jbkim1999":7,"-":42}},{"path":"src/test/java/seedu/address/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"aceszhenwei":1,"-":67}},{"path":"src/test/java/seedu/address/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Apple Boss\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Boss\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Apple Boss\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Boss\", \"Carl\u0027s\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Apple Carl\u0027s\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"ApPle\", \"boSS\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Apple Boss\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Apple\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carls\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Apple Boss\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"iztanpy"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Apple\").withPhone(\"12345\")","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"iztanpy":12,"jbkim1999":3,"-":60}},{"path":"src/test/java/seedu/address/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Name.isValidName(\"!\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Name.isValidName(\"peter\u0027s cafe\")); // non-alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Name.isValidName(\"food 4 u\")); // alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Name.isValidName(\"Capital Food\")); // with capital letters","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Name.isValidName(\"Everyday Everynight Eating house\")); // long names","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"iztanpy":5,"aceszhenwei":1,"-":34}},{"path":"src/test/java/seedu/address/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"aceszhenwei":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/PlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jbkim1999"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jbkim1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"public class PlanTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Plan(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    public void constructor_invalidPlan_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"        String invalidPlan \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Plan(invalidPlan));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"    public void isValidPlan() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":"        // null address","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e Plan.isValidPlan(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"        // invalid plans","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(Plan.isValidPlan(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"jbkim1999"},"content":"        assertFalse(Plan.isValidPlan(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"jbkim1999"},"content":"        // valid plans","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(Plan.isValidPlan(\"NORMAL 100MBps\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(Plan.isValidPlan(\"-\")); // one character","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"        assertTrue(Plan.isValidPlan(\"NORMAL plan with speed of 100 Megabytes per second\")); // long plan","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jbkim1999":36}},{"path":"src/test/java/seedu/address/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ARTFRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        assertFalse(uniqueClientList.contains(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        assertTrue(uniqueClientList.contains(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"    public void contains_clientWithSameAddressInList_returnsTrue() {","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(BURGER);","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"        Client editedBurger \u003d new ClientBuilder(ARTFRIEND).withAddress(VALID_ADDRESS_BURGER)","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"        assertTrue(uniqueClientList.contains(editedBurger));","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ARTFRIEND, null));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"iztanpy"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ARTFRIEND, ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.setClient(ARTFRIEND, ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"iztanpy"},"content":"        expectedUniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"iztanpy"},"content":"        Client editedAlice \u003d new ClientBuilder(ARTFRIEND).withAddress(VALID_ADDRESS_BURGER).withTags(VALID_TAG_TECH)","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.setClient(ARTFRIEND, editedAlice);","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.setClient(ARTFRIEND, BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"iztanpy"},"content":"        expectedUniqueClientList.add(BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"aceszhenwei"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"iztanpy"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ARTFRIEND, BURGER));","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"aceszhenwei"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"jbkim1999"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"iztanpy"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ARTFRIEND));","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"aceszhenwei"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.remove(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"iztanpy"},"content":"        expectedUniqueClientList.add(BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"aceszhenwei"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"iztanpy"},"content":"        uniqueClientList.add(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"iztanpy"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"aceszhenwei"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"aceszhenwei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"iztanpy"},"content":"        expectedUniqueClientList.add(BURGER);","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"aceszhenwei"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"iztanpy"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ARTFRIEND, ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"aceszhenwei"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"aceszhenwei"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"aceszhenwei"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"iztanpy":37,"jbkim1999":4,"aceszhenwei":129}},{"path":"src/test/java/seedu/address/model/procedure/CompletionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"class CompletionTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public void constructor_nullHasCompleted_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Completion(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public void constructor_invalidHasCompleted_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"        String hasCompleted \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Completion(hasCompleted));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    public void isValidHasCompleted() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"        // null Completion","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Completion.isValidHasCompleted(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        // invalid Completion","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"   \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"12.111\")); // with double","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"-12\")); // with negative integer","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"^$@#\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"true#@#\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"   true\")); // with additional prefix spaces","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"true  \")); // with additional postfix spaces","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"tru3e\")); // alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"Truee\")); // with additional postfix characters","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"FFalse\")); // with additional prefix characters","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"True\")); // use case with capitalised initial","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"trUe\")); // use case with random capitalisation","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"False\")); // use case with capitalised initial","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        assertFalse(Completion.isValidHasCompleted(\"faLsE\")); // use case with random capitalisation","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        // valid Completion","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Completion.isValidHasCompleted(\"true\")); // normal use case","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Completion.isValidHasCompleted(\"false\")); // normal use case","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"teominghuang":49}},{"path":"src/test/java/seedu/address/model/procedure/CostTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"class CostTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Cost(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    public void constructor_invalidCost_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"        String invalidCost \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Cost(invalidCost));","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    public void isValidCost() {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"        // null Cost","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Cost.isValidCost(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        // invalid Cost","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"\")); // empty string","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\" \")); // spaces only","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"12.111\")); // 3 decimal points","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Cost.isValidCost(\"-12\")); // negative value","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"        // valid Costs","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Cost.isValidCost(\"12345\")); // numbers only","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Cost.isValidCost(\"12.1\")); // numbers with 1 decimal point","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Cost.isValidCost(\"12.11\")); // numbers with 2 decimal point","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    public void isValidCostAsFloat() {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        Cost test1 \u003d new Cost(\"13.11\");","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        Cost test2 \u003d new Cost(\"13.1\");","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"        Cost test3 \u003d new Cost(\"13\");","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"        assertTrue(test1.value().compareTo(new BigDecimal(\"13.11\")) \u003d\u003d 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"        assertTrue(test2.value().compareTo(new BigDecimal(\"13.1\")) \u003d\u003d 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"        assertTrue(test3.value().compareTo(new BigDecimal(\"13\")) \u003d\u003d 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":56}},{"path":"src/test/java/seedu/address/model/procedure/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"class DateTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"        // null Date","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"        // invalid Date","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"29-01-2000 23:59\")); // dashes instead of slashes","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"32/01/2000 23:59\")); // invalid date in correct format","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"32/01/2000 24:59\")); // accurate date; inaccurate time","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"31/01/2000\")); // valid date without hours:minutes","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Date.isValidDate(\"29/02/2019 01:00\")); // leap year in an invalid leap year","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        //valid Date","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Date.isValidDate(\"29/01/2000 23:59\")); // proper date in specified format","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Date.isValidDate(\"01/01/2000 11:30\")); // proper date in specified format","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Date.isValidDate(\"29/02/2020 00:00\")); // leap year in a valid leap year","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":42}},{"path":"src/test/java/seedu/address/model/procedure/InformationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"class InformationTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Information(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    public void constructor_invalidInformation_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"        String invalidInformation \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Information(invalidInformation));","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"    public void isValidInformation() {","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"        // null Information","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Information.isValidInformation(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"        // invalid Information","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Information.isValidInformation(\"\")); // empty string","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        assertFalse(Information.isValidInformation(\" \")); // spaces only","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"        // valid Information","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"fixed, cleaned, replaced router\")); // non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"fix router\")); // alphabets only","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"12\")); // numbers only","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"fix 1 router\")); // alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"Fixed One Router\")); // with capital letters","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        assertTrue(Information.isValidInformation(\"Fixed one router at the apple store!\")); // long Informations","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":41}},{"path":"src/test/java/seedu/address/model/procedure/ProcedureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.model.procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_REPLACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_REPAIR;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HASCOMPLETED_FALSE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INFO_REPLACE;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.testutil.TypicalProcedures.REPAIR_ROUTER_PROC;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import static seedu.address.testutil.TypicalProcedures.REPLACE_WIRES_PROC;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"import seedu.address.testutil.ProcedureBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"class ProcedureTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        Procedure repairCopy \u003d new ProcedureBuilder(REPAIR_ROUTER_PROC).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        assertTrue(REPAIR_ROUTER_PROC.equals(repairCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"        assertTrue(REPAIR_ROUTER_PROC.equals(REPAIR_ROUTER_PROC));","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(5));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"        // different procedure -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(REPLACE_WIRES_PROC));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"        // different information -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        Procedure editedRepair \u003d new ProcedureBuilder(REPAIR_ROUTER_PROC).withInfo(VALID_INFO_REPLACE).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(editedRepair));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        // different cost -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        editedRepair \u003d new ProcedureBuilder(REPAIR_ROUTER_PROC).withCost(VALID_COST_REPLACE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(editedRepair));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"jbkim1999"},"content":"        editedRepair \u003d new ProcedureBuilder(REPAIR_ROUTER_PROC).withDate(VALID_DATE_REPAIR).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(editedRepair));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        // different hasCompleted -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        editedRepair \u003d new ProcedureBuilder(REPAIR_ROUTER_PROC).withCompletion(VALID_HASCOMPLETED_FALSE)","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        assertFalse(REPAIR_ROUTER_PROC.equals(editedRepair));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":31,"jbkim1999":4,"teominghuang":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.BOSS;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jbkim1999"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"    private static final String INVALID_PLAN \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"    private static final String VALID_NAME \u003d BOSS.getName().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"    private static final String VALID_PHONE \u003d BOSS.getPhone().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"    private static final String VALID_EMAIL \u003d BOSS.getEmail().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    private static final String VALID_ADDRESS \u003d BOSS.getAddress().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"    private static final String VALID_PLAN \u003d BOSS.getPlan().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BOSS.getTags().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    private static final List\u003cJsonAdaptedProcedure\u003e VALID_PROCEDURES \u003d BOSS.getProcedures().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"            .map(JsonAdaptedProcedure::new)","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jbkim1999"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BOSS);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"        assertEquals(BOSS, client.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_PLAN,","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"                VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"                VALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_PLAN,","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"                VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"jbkim1999"},"content":"    public void toModelType_invalidPlan_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"                        INVALID_PLAN, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"jbkim1999"},"content":"        String expectedMessage \u003d Plan.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"jbkim1999"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"jbkim1999"},"content":"    public void toModelType_nullPlan_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"                null, VALID_TAGS, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"jbkim1999"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Plan.class.getSimpleName());","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"jbkim1999"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"teominghuang"},"content":"                VALID_ADDRESS, VALID_PLAN, invalidTags, VALID_PROCEDURES);","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"jbkim1999"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"iztanpy":10,"jbkim1999":40,"teominghuang":20,"-":71}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.ARTFRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.HOON;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalClients.OWNDAYS;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"    public void readAddressBook_invalidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"    public void readAddressBook_invalidAndValidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"        original.addClient(HOON);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"        original.removeClient(ARTFRIEND);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"iztanpy"},"content":"        original.addClient(OWNDAYS);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"iztanpy":4,"aceszhenwei":7,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsAddressBook.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"        AddressBook typicalClientsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"        assertEquals(addressBookFromFile, typicalClientsAddressBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"iztanpy":2,"aceszhenwei":13,"-":35}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aceszhenwei":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aceszhenwei":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"robinrojh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"robinrojh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"robinrojh"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_NAME \u003d \"APPLE\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_EMAIL \u003d \"apple@gmail.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Apple Road, #08-111\";","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"jbkim1999"},"content":"    public static final String DEFAULT_PLAN \u003d \"EXPRESS 200MBps\";","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    private Name name;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    private Email email;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"    private Address address;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jbkim1999"},"content":"    private Plan plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"robinrojh"},"content":"    private List\u003cProcedure\u003e procedures;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jbkim1999"},"content":"        plan \u003d new Plan(DEFAULT_PLAN);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"robinrojh"},"content":"        procedures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"jbkim1999"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"jbkim1999"},"content":"        plan \u003d clientToCopy.getPlan();","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"robinrojh"},"content":"        procedures \u003d clientToCopy.getProcedures();","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aceszhenwei"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aceszhenwei"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"aceszhenwei"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"jbkim1999"},"content":"     * Sets the {@code Plan} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"jbkim1999"},"content":"    public ClientBuilder withPlan(String plan) {","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"jbkim1999"},"content":"        this.plan \u003d new Plan(plan);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"jbkim1999"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"robinrojh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"robinrojh"},"content":"     * Sets the {@code procedures} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"robinrojh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"robinrojh"},"content":"    public ClientBuilder withProcedures(List\u003cProcedure\u003e procedures) {","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"robinrojh"},"content":"        this.procedures \u003d procedures;","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"robinrojh"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"robinrojh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"robinrojh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"jbkim1999"},"content":"    public Client build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"robinrojh"},"content":"        return new Client(name, phone, email, address, plan, tags, procedures);","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"iztanpy":3,"jbkim1999":18,"robinrojh":15,"aceszhenwei":86}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"jbkim1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"jbkim1999"},"content":" * A utility class for Client.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"public class ClientUtil {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"jbkim1999"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jbkim1999"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"jbkim1999"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"jbkim1999"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jbkim1999"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jbkim1999"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jbkim1999"},"content":"        sb.append(PREFIX_PLAN + client.getPlan().value + \" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"jbkim1999"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"jbkim1999"},"content":"        descriptor.getPlan().ifPresent(plan -\u003e sb.append(PREFIX_PLAN).append(plan.value).append(\" \"));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jbkim1999":19,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Plan;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jbkim1999"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"jbkim1999"},"content":"        descriptor.setPlan(client.getPlan());","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"aceszhenwei"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"jbkim1999"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"jbkim1999"},"content":"     * Sets the {@code Plan} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"jbkim1999"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"    public EditClientDescriptorBuilder withPlan(String plan) {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"jbkim1999"},"content":"        descriptor.setPlan(new Plan(plan));","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"jbkim1999"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"jbkim1999"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"jbkim1999"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"aceszhenwei"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"aceszhenwei"},"content":"     * that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"aceszhenwei"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"aceszhenwei"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aceszhenwei"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"aceszhenwei"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"aceszhenwei"},"content":"        return descriptor;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jbkim1999":12,"aceszhenwei":85}},{"path":"src/test/java/seedu/address/testutil/ProcedureBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import seedu.address.model.procedure.Completion;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":" * A utility class to help with building Procedure objects.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"public class ProcedureBuilder {","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_INFO \u003d \"Fix Router\";","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_DATE \u003d \"01/01/2000 11:30\";","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    public static final String DEFAULT_COST \u003d \"13.50\";","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"jbkim1999"},"content":"    public static final String DEFAULT_COMPLETION \u003d \"false\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    private Information info;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"    private Date date;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"    private Cost cost;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    private Completion hasCompleted;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"iztanpy"},"content":"     * Creates a {@code ProcedureBuilder} with the default details.","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"iztanpy"},"content":"    public ProcedureBuilder() {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"        info \u003d new Information(DEFAULT_INFO);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"iztanpy"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"iztanpy"},"content":"        cost \u003d new Cost(DEFAULT_COST);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        hasCompleted \u003d new Completion(DEFAULT_COMPLETION);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"iztanpy"},"content":"     * Initializes the ProcedureBuilder with the data of {@code ProcedureToCopy}.","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"    public ProcedureBuilder(Procedure procedureToCopy) {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"        info \u003d procedureToCopy.getInfo();","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"        date \u003d procedureToCopy.getDate();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"iztanpy"},"content":"        cost \u003d procedureToCopy.getCost();","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        hasCompleted \u003d procedureToCopy.getHasCompleted();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"     * Sets the {@code Info} of the {@code Procedure} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    public seedu.address.testutil.ProcedureBuilder withInfo(String info) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"iztanpy"},"content":"        this.info \u003d new Information(info);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"iztanpy"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"     * Sets the {@code Date} of the {@code Procedure} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"iztanpy"},"content":"    public seedu.address.testutil.ProcedureBuilder withDate(String date) {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"iztanpy"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"     * Sets the {@code Cost} of the {@code Procedure} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"iztanpy"},"content":"    public seedu.address.testutil.ProcedureBuilder withCost(String cost) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"iztanpy"},"content":"        this.cost \u003d new Cost(cost);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"iztanpy"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"     * Sets the {@code Completion} of the {@code Procedure} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    public seedu.address.testutil.ProcedureBuilder withCompletion(String hasCompleted) {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d new Completion(hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"iztanpy"},"content":"    public Procedure build() {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"        return new Procedure(info, date, cost, hasCompleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"iztanpy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":65,"jbkim1999":1,"teominghuang":13}},{"path":"src/test/java/seedu/address/testutil/RandomProcedureBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Completion;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":" * Builds random Procedure objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":"public class RandomProcedureBuilder {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"    private Date[] dateList;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"    private Information info;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"    private Date date;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    private Cost cost;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"    private Completion hasCompleted;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    private boolean dateCheck \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    private TypicalRandomProcedureDetails procedureDetails \u003d new TypicalRandomProcedureDetails();","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    public RandomProcedureBuilder() {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a new random Procedure out of the details selected from TypicalRandomProcedureDetails. Guarantees that","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"     * when called during the test, it will return three procedures that are sorted by date.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"     * @param i Integer to assist in selecting dates from dateList","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"     * @return A new random Procedure","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"    public Procedure buildRandomProcedure(int i) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"        info \u003d procedureDetails.getInfo();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"        cost \u003d procedureDetails.getCost();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"        hasCompleted \u003d new Completion(\"false\");","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"        if (!dateCheck) {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"            dateList \u003d procedureDetails.getDates();","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"            dateCheck \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"        date \u003d dateList[i];","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"        return new Procedure(info, date, cost, hasCompleted);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"aceszhenwei":44}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jbkim1999"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jbkim1999"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jbkim1999"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jbkim1999"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jbkim1999"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jbkim1999"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jbkim1999"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jbkim1999":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_APPLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BURGER;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FASTFOOD;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TECH;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"import static seedu.address.testutil.TypicalProcedures.REPAIR_ROUTER_PROC;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"jbkim1999"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"jbkim1999"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"jbkim1999"},"content":"public class TypicalClients {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"iztanpy"},"content":"    public static final Client ARTFRIEND \u003d new ClientBuilder().withName(\"Artfriend\")","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"iztanpy"},"content":"            .withTags(\"art\")","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"iztanpy"},"content":"            .build();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"iztanpy"},"content":"    public static final Client BOSS \u003d new ClientBuilder().withName(\"Boss\")","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"iztanpy"},"content":"            .withTags(\"clothes\")","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"iztanpy"},"content":"            .withProcedures(new ArrayList\u003c\u003e(List.of(REPAIR_ROUTER_PROC)))","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"iztanpy"},"content":"            .build();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"iztanpy"},"content":"    public static final Client CARLS \u003d new ClientBuilder().withName(\"Carl\u0027s Jr\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"iztanpy"},"content":"    public static final Client DOMINOS \u003d new ClientBuilder().withName(\"Domino\u0027s\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"iztanpy"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"fastfood\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"iztanpy"},"content":"    public static final Client ELLES \u003d new ClientBuilder().withName(\"Elle\u0027s\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"iztanpy"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz Sewing\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"iztanpy"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Electronics\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"iztanpy"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Noodles\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"iztanpy"},"content":"    public static final Client OWNDAYS \u003d new ClientBuilder().withName(\"Owndays\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"jbkim1999"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"iztanpy"},"content":"    public static final Client APPLE \u003d new ClientBuilder().withName(VALID_NAME_APPLE).withPhone(VALID_PHONE_APPLE)","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"iztanpy"},"content":"            .withEmail(VALID_EMAIL_APPLE).withAddress(VALID_ADDRESS_APPLE).withPlan(\"EXPRESS 200MBps\")","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"iztanpy"},"content":"            .withTags(VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"iztanpy"},"content":"    public static final Client BURGER \u003d new ClientBuilder().withName(VALID_NAME_BURGER).withPhone(VALID_PHONE_BURGER)","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"iztanpy"},"content":"            .withEmail(VALID_EMAIL_BURGER).withAddress(VALID_ADDRESS_BURGER).withPlan(\"NORMAL 100MBps\")","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"iztanpy"},"content":"            .withTags(VALID_TAG_TECH, VALID_TAG_FASTFOOD).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"jbkim1999"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"jbkim1999"},"content":"     * Returns an {@code AddressBook} with all the typical clients.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"jbkim1999"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"jbkim1999"},"content":"            ab.addClient(client);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"jbkim1999"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"iztanpy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ARTFRIEND, BOSS, CARLS, DOMINOS, ELLES, FIONA, GEORGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"iztanpy":34,"jbkim1999":9,"-":39}},{"path":"src/test/java/seedu/address/testutil/TypicalDates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import seedu.address.commons.core.dateWithoutTime.DateWithoutTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"iztanpy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"iztanpy"},"content":"public class TypicalDates {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"    public static final Date DATE_WITH_TIME_FIRST \u003d new Date(\"22/03/2018 23:00\");","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"    public static final Date DATE_WITH_TIME_SECOND \u003d new Date(\"31/12/2020 00:00\");","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"iztanpy"},"content":"    public static final Date DATE_WITH_TIME_THIRD \u003d new Date(\"29/02/2016 06:00\");","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"    public static final Date DATE_WITH_TIME_INVALID \u003d new Date(\"29/02/2016 26:00\");","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"iztanpy"},"content":"    public static final DateWithoutTime DATE_WITHOUT_TIME_FIRST \u003d new DateWithoutTime(\"22/03/2018\");","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"iztanpy"},"content":"    public static final DateWithoutTime DATE_WITHOUT_TIME_SECOND \u003d new DateWithoutTime(\"31/12/2020\");","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"iztanpy"},"content":"    public static final DateWithoutTime DATE_WITHOUT_TIME_THIRD \u003d new DateWithoutTime(\"29/02/2016\");","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"iztanpy"},"content":"    public static final DateWithoutTime DATE_WITHOUT_TIME_INVALID \u003d new DateWithoutTime(\"39/02/2016\");","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"iztanpy":21}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"    public static final Index INDEX_FIRST_CLIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":"    public static final Index INDEX_SECOND_CLIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":"    public static final Index INDEX_THIRD_CLIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final Index INDEX_FIRST_PROCEDURE \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final Index INDEX_SECOND_PROCEDURE \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final Index INDEX_THIRD_PROCEDURE \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"teominghuang":4,"aceszhenwei":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalProcedures.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iztanpy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"iztanpy"},"content":"import seedu.address.model.procedure.Procedure;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"iztanpy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"iztanpy"},"content":"public class TypicalProcedures {","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"    public static final Procedure REPAIR_ROUTER_PROC \u003d new ProcedureBuilder().withInfo(\"Repair Router\")","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"iztanpy"},"content":"            .withDate(\"01/01/2000 12:15\").withCost(\"13.50\").withCompletion(\"true\")","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"iztanpy"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    public static final Procedure REPLACE_WIRES_PROC \u003d new ProcedureBuilder().withInfo(\"Replace wires\")","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"iztanpy"},"content":"            .withDate(\"05/03/2005 18:30\").withCost(\"23.00\").withCompletion(\"true\")","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"iztanpy"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final Procedure TROUBLESHOOT_NETWORK_PROC \u003d new ProcedureBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"iztanpy"},"content":"            .withInfo(\"Troubleshoot network\").withDate(\"10/05/2015 10:15\").withCost(\"5.05\").withCompletion(\"true\")","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"iztanpy"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"iztanpy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"iztanpy":12,"teominghuang":3}},{"path":"src/test/java/seedu/address/testutil/TypicalRandomProcedureDetails.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aceszhenwei"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"aceszhenwei"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Cost;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Date;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"aceszhenwei"},"content":"import seedu.address.model.procedure.Information;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"aceszhenwei"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"aceszhenwei"},"content":" * Holds typical details that can make up a Procedure. Date field has 3 additional separate components to account for","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"aceszhenwei"},"content":" * AddProcCommandTest (autosort variant). For example, the dates in the first index are earlier than the dates in","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"aceszhenwei"},"content":" * the second index. This is true for the second index with respect to the third index.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"aceszhenwei"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"aceszhenwei"},"content":"public class TypicalRandomProcedureDetails {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"aceszhenwei"},"content":"    public static final Information[] EXAMPLE_INFORMATION \u003d {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"aceszhenwei"},"content":"        new Information(\"Apple Inc.\"), new Information(\"Google Inc.\"), new Information(\"Singtel Inc.\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"aceszhenwei"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"aceszhenwei"},"content":"    public static final Cost[] EXAMPLE_COST \u003d {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"aceszhenwei"},"content":"        new Cost(\"10.00\"), new Cost(\"23.23\"), new Cost(\"76.10\")","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"aceszhenwei"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"aceszhenwei"},"content":"    public static final Date[][] EXAMPLE_DATE_SEPARATED_BY_PERIOD \u003d {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"aceszhenwei"},"content":"            {new Date(\"29/02/2012 10:00\"), new Date(\"10/10/2015 13:45\"), new Date(\"02/03/2013 09:00\")},","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"aceszhenwei"},"content":"            {new Date(\"25/12/2015 16:00\"), new Date(\"01/02/2016 17:12\"), new Date(\"03/11/2018 12:00\")},","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"aceszhenwei"},"content":"            {new Date(\"12/12/2018 09:00\"), new Date(\"29/02/2020 11:10\"), new Date(\"03/03/2022 11:01\")}","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"aceszhenwei"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"aceszhenwei"},"content":"    private static Random rand \u003d new Random();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"aceszhenwei"},"content":"    private static final Date EARLY_DATE \u003d EXAMPLE_DATE_SEPARATED_BY_PERIOD[0][rand.nextInt(3)];","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"aceszhenwei"},"content":"    private static final Date NEUTRAL_DATE \u003d EXAMPLE_DATE_SEPARATED_BY_PERIOD[1][rand.nextInt(3)];","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"aceszhenwei"},"content":"    private static final Date FUTURE_DATE \u003d EXAMPLE_DATE_SEPARATED_BY_PERIOD[2][rand.nextInt(3)];","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"aceszhenwei"},"content":"    public TypicalRandomProcedureDetails() {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"aceszhenwei"},"content":"    Information getInfo() {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"aceszhenwei"},"content":"        int randInt \u003d rand.nextInt(3);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"aceszhenwei"},"content":"        return EXAMPLE_INFORMATION[randInt];","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"aceszhenwei"},"content":"    Cost getCost() {","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"aceszhenwei"},"content":"        int randInt \u003d rand.nextInt(3);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"aceszhenwei"},"content":"        return EXAMPLE_COST[randInt];","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"aceszhenwei"},"content":"    Random getRand() {","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"aceszhenwei"},"content":"        return rand;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"aceszhenwei"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"aceszhenwei"},"content":"     * Returns a random array of dates that have been pre-sorted.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"aceszhenwei"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"aceszhenwei"},"content":"     * @return Date array containing random dates for Procedure generation.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"aceszhenwei"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"aceszhenwei"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"aceszhenwei"},"content":"    Date[] getDates() {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"aceszhenwei"},"content":"        return new Date[]{EARLY_DATE, NEUTRAL_DATE, FUTURE_DATE};","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"aceszhenwei"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"aceszhenwei"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"aceszhenwei":60}}]
