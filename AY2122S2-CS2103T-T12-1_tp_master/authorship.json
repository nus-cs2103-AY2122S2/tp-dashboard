[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-T12-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T12-1/tp/branch/master/graph/badge.svg?token\u003dJ12HX0WRHI)](https://codecov.io/gh/AY2122S2-CS2103T-T12-1/tp)","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"# Ultimate Divoc Tracker (UDT)","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"This application is a variation of the above original project, tailored for school administrators to track COVID-19 cases amongst students in schools.","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"## Features","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"Below are the current and upcoming features of the UDT","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"**Current Features**:","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"* Adding a student into the list of students","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"* Listing all students","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"* Finding students by name","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"* Finding student by status","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"* Finding student by class","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"* Finding students by activity","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"* Deleting a student from the list","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"* Updating COVID-19 status","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"* Editing studentâ€™s personal details","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"* Exiting the program","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"**Upcoming Features**:","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"* Importing students from csv files","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"* Automated contacting of Next-of-Kin for Close-Contact students","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"## Miscellaneous","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"* Refer to our Ultimate Divoc Tracker (UDT) website here: **[Ultimate Divoc Tracker](https://ay2122s2-cs2103t-t12-1.github.io/tp/)**.","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"* This project was adopted from the existing AB3 se-education.org project. Refer to the AB3 product website **[here](https://se-education.org/addressbook-level3/)**.","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"lzf834":16,"Fenway17":17,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"e0544333"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"e0544333"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"e0544333"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"e0544333":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"### Wee Jun Hong","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"\u003cimg src\u003d\"images/whoisjunhong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"[[github](https://github.com/whoisjunhong)]","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"[[portfolio](team/whoisjunhong.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"e0544333"},"content":"### Joshua Yap","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"e0544333"},"content":"\u003cimg src\u003d\"images/e0544333.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"e0544333"},"content":"[[github](http://github.com/e0544333)]","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"[[portfolio](team/e0544333.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"### Louis Davin Lie","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"\u003cimg src\u003d\"images/louisdavinlie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"[[github](http://github.com/louisdavinlie)]","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"[[portfolio](team/louisdavinlie.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"### Tan Yong Rui","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"\u003cimg src\u003d\"images/fenway17.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"[[github](http://github.com/fenway17)]","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"[[portfolio](team/fenway17.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"### Lye Zi Foong","lastModifiedDate":"2022-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"\u003cimg src\u003d\"images/lzf834.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"[[github](http://github.com/lzf834)]","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"[[portfolio](team/lzf834.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"whoisjunhong"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"lzf834":7,"Fenway17":4,"whoisjunhong":9,"-":33,"e0544333":4,"louisdavinlie":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"## Table of Contents","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"| Quick Links                                                                                                     |","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"|-----------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"| [Introduction](#introduction)                                                                                   |","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"| [Acknowledgements](#acknowledgements)                                                                           |","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"| [Setting up, getting started](#setting-up-getting-started)                                                      |","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"| [Design](#design)                                                                                               |","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"| [Architecture](#architecture)                                                                                   |","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"| [Implementation](#implementation)                                                                               |","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"| [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops) |","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"| [Appendix: Requirements](#appendix-requirements)                                                                |","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"| [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)                          |","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"## **Introduction**","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"**Ultimate DivocTracker _(UDT)_** is a desktop app for managing COVID-19 contacts in school administration,","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"optimized for use via interacting with the application through easy-to-use commands on a user-centric interface.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"Ultimate Divoc Tracker can get your contact-tracing tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"This is a Developer Guide written to help developers get a deeper understanding of how UDT is implemented and the reasons this project is done a certain way.","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"It explains the internal structure and how components in the architecture work together to allow users to command UDT.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"Our team would like to welcome any form improvements or adaptations to our application via Github Pull Requests or Issues.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"lzf834"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lzf834"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-T12-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"lzf834"},"content":"This section describes some noteworthy details on how certain features are implemented, updated","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"lzf834"},"content":"or any new features that we have in mind.","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"lzf834"},"content":"- Implemented","lastModifiedDate":"2022-04-08"},{"lineNumber":182,"author":{"gitId":"lzf834"},"content":"  - [Status Feature](#implemented-status-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":183,"author":{"gitId":"lzf834"},"content":"  - [Find By Status Feature](#implemented-find-by-status-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"lzf834"},"content":"  - [Class Code Feature](#implemented-class-code-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":185,"author":{"gitId":"lzf834"},"content":"  - [Find By Class Code Feature](#implemented-find-by-class-code-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":186,"author":{"gitId":"lzf834"},"content":"  - [Activity Feature](#implemented-activity-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":187,"author":{"gitId":"lzf834"},"content":"  - [Find By Activity Feature](#implemented-find-by-activity-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"lzf834"},"content":"- Updated","lastModifiedDate":"2022-04-08"},{"lineNumber":189,"author":{"gitId":"lzf834"},"content":"  - [Adding a Person Feature](#updated-adding-a-person-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":190,"author":{"gitId":"lzf834"},"content":"  - [Editing a Person Feature](#updated-editing-a-person-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":191,"author":{"gitId":"lzf834"},"content":"  - [User Interface](#updated-user-interface)","lastModifiedDate":"2022-04-08"},{"lineNumber":192,"author":{"gitId":"lzf834"},"content":"  - [Storage](#updated-storage)","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"lzf834"},"content":"- Enhancements","lastModifiedDate":"2022-04-08"},{"lineNumber":194,"author":{"gitId":"lzf834"},"content":"  - [Batch Update Feature](#enhancement-batch-update)","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"lzf834"},"content":"- Proposed","lastModifiedDate":"2022-04-08"},{"lineNumber":196,"author":{"gitId":"lzf834"},"content":"  - [Implementing CSV Compatibility](#proposed-enhancement-implementing-csv-compatibility)","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"lzf834"},"content":"  - [Undo/redo Feature](#proposed-undoredo-feature)","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"lzf834"},"content":"  - [User Interface](#proposed-update-user-interface)","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":200,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Status Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":201,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"Fenway17"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"lzf834"},"content":"The implemented status label is facilitated by `Status` attribute. This label is an additional attribute for each person within the application","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"lzf834"},"content":"and is implemented as a separate file within the `Person` Package.","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"Fenway17"},"content":"The `Status` attribute of each `Person` will take either `\"Positive\"`, `\"Negative\"` or `\"Close Contact\"`.","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"Fenway17"},"content":"- `\"Positive\"` denotes that the `Person` is labelled as COVID positive.","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"Fenway17"},"content":"- `\"Negative\"` denotes that the `Person` is labelled as COVID negative.","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"Fenway17"},"content":"- `\"Close Contact\"` denotes that the `Person` is labelled as having close contact to another `Person` who is COVID positive.","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"Fenway17"},"content":"The `Status` class is facilitated by using `execute()` command in the `EditCommand` and `AddCommand` classes.","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"lzf834"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-21"},{"lineNumber":215,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":216,"author":{"gitId":"lzf834"},"content":"**Aspect: Abstracting `Status` attribute**","lastModifiedDate":"2022-03-21"},{"lineNumber":217,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":218,"author":{"gitId":"lzf834"},"content":"* **Alternative 1 (current choice):** Abstracted class.","lastModifiedDate":"2022-03-21"},{"lineNumber":219,"author":{"gitId":"lzf834"},"content":"  * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"    * Higher Level of abstraction","lastModifiedDate":"2022-03-21"},{"lineNumber":221,"author":{"gitId":"lzf834"},"content":"    * Changes can be made easily from this class","lastModifiedDate":"2022-03-21"},{"lineNumber":222,"author":{"gitId":"lzf834"},"content":"  * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":223,"author":{"gitId":"lzf834"},"content":"    * Existing layers of abstraction and tangled dependencies make introducing a new attribute for the base Person model difficult","lastModifiedDate":"2022-03-21"},{"lineNumber":224,"author":{"gitId":"lzf834"},"content":"    * Difficulty navigating through folders to find specific files","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"lzf834"},"content":"* **Alternative 2:** Attribute placed within `Person` class.","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"lzf834"},"content":"  * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":228,"author":{"gitId":"lzf834"},"content":"    * Single file where changes can be made","lastModifiedDate":"2022-03-21"},{"lineNumber":229,"author":{"gitId":"lzf834"},"content":"  * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":230,"author":{"gitId":"lzf834"},"content":"    * Lesser level of abstraction, changes made have to be constantly changed throughout the file","lastModifiedDate":"2022-03-21"},{"lineNumber":231,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":232,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Find By Status Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":234,"author":{"gitId":"lzf834"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":235,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":236,"author":{"gitId":"lzf834"},"content":"The implemented find by status mechanism is facilitated by `findstatus` command. It extends `UDT` with a Find By Status, allowing users to find persons by their current COVID-19 statuses.","lastModifiedDate":"2022-03-21"},{"lineNumber":237,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":238,"author":{"gitId":"lzf834"},"content":"Classes added for this feature:","lastModifiedDate":"2022-03-21"},{"lineNumber":239,"author":{"gitId":"lzf834"},"content":"* `StatusContainsKeywordsPredicate`","lastModifiedDate":"2022-03-21"},{"lineNumber":240,"author":{"gitId":"lzf834"},"content":"* `FindStatusCommand`","lastModifiedDate":"2022-03-21"},{"lineNumber":241,"author":{"gitId":"lzf834"},"content":"* `FindStatusCommandParser`","lastModifiedDate":"2022-03-21"},{"lineNumber":242,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":243,"author":{"gitId":"Fenway17"},"content":"Given below is an example usage scenario and how the find by status mechanism behaves at each step.","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"Fenway17"},"content":"Step 1. The user launches the application. The full list of `Person`s will be shown to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"Fenway17"},"content":"Step 2. The user executes `findstatus positive` command to find all `Person`s that are COVID positive in the address book. The `findstatus` command calls `AddressBookParser#parseCommand()` to parse the command given, which then calls `FindStatusCommandParser#parse()` to parse the given arguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"Fenway17"},"content":"Step 3. `FindStatusCommandParser#parse()` calls `FindStatusCommand`\u0027s constructor along with `StatusContainsKeywordsPredicate`\u0027s constructor given the arguments to allow the command, when executed, to use the given `Predicate` _(Java)_ to filter the list of `Person`s by checking if they have the matching `Status` of `\"positive\"`.","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"louisdavinlie"},"content":"Step 4. The filtered list of persons is displayed to the user.","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"louisdavinlie"},"content":"The following sequence diagram shows how the `findstatus` operation works:","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":252,"author":{"gitId":"louisdavinlie"},"content":"![FindStatusSequenceDiagram](images/FindStatusSequenceDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":253,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":254,"author":{"gitId":"louisdavinlie"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindStatusCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"louisdavinlie"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"Fenway17"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-21"},{"lineNumber":259,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":260,"author":{"gitId":"lzf834"},"content":"**Aspect: Abstracting into different classes**","lastModifiedDate":"2022-03-21"},{"lineNumber":261,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":262,"author":{"gitId":"lzf834"},"content":"* **Alternative 1 (current choice):** Abstracted classes.","lastModifiedDate":"2022-03-21"},{"lineNumber":263,"author":{"gitId":"lzf834"},"content":"    * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":264,"author":{"gitId":"lzf834"},"content":"        * Higher Level of abstraction","lastModifiedDate":"2022-03-21"},{"lineNumber":265,"author":{"gitId":"Fenway17"},"content":"        * Changes can be made easily for each class","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"Fenway17"},"content":"        * Better organisation of classes into separate packages (e.g. `FindStatusCommandParser` belongs to the `parser` package)","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"Fenway17"},"content":"          * Different classes serve different lower-level purposes","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"lzf834"},"content":"    * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":269,"author":{"gitId":"Fenway17"},"content":"        * Adds more class files to the currently already large amount of class files","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"Fenway17"},"content":"        * Changes to one method may require going through all the different class files due to high level of abstraction","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":272,"author":{"gitId":"lzf834"},"content":"* **Alternative 2:** Single command that executed upon reading from parser","lastModifiedDate":"2022-03-21"},{"lineNumber":273,"author":{"gitId":"lzf834"},"content":"    * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":274,"author":{"gitId":"Fenway17"},"content":"        * Single class file where changes can be made","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"lzf834"},"content":"    * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":276,"author":{"gitId":"Fenway17"},"content":"        * Lesser level of abstraction, class file may become exceptionally long to accommodate all the smaller features required","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"Fenway17"},"content":"        * May violate SLAP principles, as every thing is done in a single class","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":279,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Class Code Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":280,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":281,"author":{"gitId":"Fenway17"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":282,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":283,"author":{"gitId":"Fenway17"},"content":"The implemented Class Code label is facilitated by `ClassCode`. It extends `AddressBook` with a Class Code, tied to each person.","lastModifiedDate":"2022-03-21"},{"lineNumber":284,"author":{"gitId":"Fenway17"},"content":"* Group students by using `ClassCode` and used as an identifier for contact-tracing.","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"Fenway17"},"content":"The `ClassCode` attribute of each `Person` will take a `String` _(Java)_ denoting their class groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":288,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Find By Class Code Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":289,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":290,"author":{"gitId":"Fenway17"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":291,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":292,"author":{"gitId":"Fenway17"},"content":"The implemented find by class code mechanism is facilitated by `FindByClassCode`. It extends `AddressBook` with a Find By Class Code, allowing users to find persons by their current statuses.","lastModifiedDate":"2022-03-21"},{"lineNumber":293,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":294,"author":{"gitId":"Fenway17"},"content":"Classes added for this feature:","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"Fenway17"},"content":"* `ClassCodeContainsKeywordsPredicate`","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"Fenway17"},"content":"* `FindClassCodeCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"Fenway17"},"content":"* `FindClassCodeCommandParser`","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"Fenway17"},"content":"Given below is an example usage scenario and how the find by class code mechanism behaves at each step.","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"Fenway17"},"content":"Step 1. The user launches the application. The full list of `Person`s will be shown to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"Fenway17"},"content":"Step 2. The user executes `findclasscode 4A` command to find all `Person`s that are COVID positive in the address book. The `findclasscode` command calls `AddressBookParser#parseCommand()` to parse the command given, which then calls `FindClassCodeCommandParser#parse()` to parse the given arguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"Fenway17"},"content":"Step 3. `FindClassCodeCommandParser#parse()` calls `FindClassCodeCommand`\u0027s constructor along with `ClassCodeContainsKeywordsPredicate`\u0027s constructor given the arguments to allow the command, when executed, to use the given `Predicate` _(Java)_ to filter the list of `Person`s by checking if they have the matching `ClassCode` of `\"4A\"`.","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"Fenway17"},"content":"Step 4. The filtered list of perons is displayed to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"louisdavinlie"},"content":"The following sequence diagram shows how the `findclasscode` operation works:","lastModifiedDate":"2022-04-07"},{"lineNumber":307,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":308,"author":{"gitId":"louisdavinlie"},"content":"![FindClassCodeSequenceDiagram](images/FindClassCodeSequenceDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":309,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"louisdavinlie"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindClassCodeCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":312,"author":{"gitId":"louisdavinlie"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":313,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":314,"author":{"gitId":"Fenway17"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"Fenway17"},"content":"**Aspect: Abstracting into different classes**","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"Fenway17"},"content":"* **Alternative 1 (current choice):** Abstracted classes.","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"Fenway17"},"content":"    * Pros:","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"Fenway17"},"content":"        * Higher Level of abstraction","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"Fenway17"},"content":"        * Changes can be made easily for each class","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"Fenway17"},"content":"        * Better organisation of classes into separate packages (e.g. `FindStatusCommandParser` belongs to the `parser` package)","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"Fenway17"},"content":"          * Different classes serve different lower-level purposes","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"Fenway17"},"content":"    * Cons:","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"Fenway17"},"content":"        * Adds more class files to the currently already large amount of class files","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"Fenway17"},"content":"        * Changes to one method may require going through all the different class files due to high level of abstraction","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"Fenway17"},"content":"* **Alternative 2:** Single command that executed upon reading from parser","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"Fenway17"},"content":"    * Pros:","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"Fenway17"},"content":"        * Single class file where changes can be made","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"Fenway17"},"content":"    * Cons:","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"Fenway17"},"content":"        * Lesser level of abstraction, class file may become exceptionally long to accommodate all the smaller features required","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"Fenway17"},"content":"        * May violate SLAP principles, as every thing is done in a single class","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Activity Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":336,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":337,"author":{"gitId":"Fenway17"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":338,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":339,"author":{"gitId":"lzf834"},"content":"The implemented status label is facilitated by `Activity` attribute. This label is an additional attribute for each person within the application","lastModifiedDate":"2022-03-21"},{"lineNumber":340,"author":{"gitId":"lzf834"},"content":"and is implemented as a separate package within the `activity` Package. A `person` will have a Set of `activity` as an attribute.","lastModifiedDate":"2022-03-21"},{"lineNumber":341,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":342,"author":{"gitId":"Fenway17"},"content":"The `Activity` attribute of each `Person` will take a `String` _(Java)_ denoting their different activities","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"Fenway17"},"content":"* Each `Person` can hold multiple `Activity` attributes.","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"lzf834"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-21"},{"lineNumber":346,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":347,"author":{"gitId":"lzf834"},"content":"**Aspect: Abstracting `activity` attribute**","lastModifiedDate":"2022-03-21"},{"lineNumber":348,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":349,"author":{"gitId":"lzf834"},"content":"* **Alternative 1 (current choice):** Abstracted class.","lastModifiedDate":"2022-03-21"},{"lineNumber":350,"author":{"gitId":"lzf834"},"content":"    * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":351,"author":{"gitId":"lzf834"},"content":"        * Higher Level of abstraction","lastModifiedDate":"2022-03-21"},{"lineNumber":352,"author":{"gitId":"lzf834"},"content":"        * Changes can be made easily from this class","lastModifiedDate":"2022-03-21"},{"lineNumber":353,"author":{"gitId":"lzf834"},"content":"        * Ease of accommodating how `activity` attribute can be implemented and added in to the `Person` class as a `Set`","lastModifiedDate":"2022-03-21"},{"lineNumber":354,"author":{"gitId":"lzf834"},"content":"    * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":355,"author":{"gitId":"lzf834"},"content":"        * Existing layers of abstraction and tangled dependencies make introducing a new attribute for the base Person model difficult","lastModifiedDate":"2022-03-21"},{"lineNumber":356,"author":{"gitId":"lzf834"},"content":"        * Difficulty navigating through folders to find specific files","lastModifiedDate":"2022-03-21"},{"lineNumber":357,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":358,"author":{"gitId":"lzf834"},"content":"* **Alternative 2:** Attribute placed within `Person` class.","lastModifiedDate":"2022-03-21"},{"lineNumber":359,"author":{"gitId":"lzf834"},"content":"    * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":360,"author":{"gitId":"lzf834"},"content":"        * Single file where changes can be made","lastModifiedDate":"2022-03-21"},{"lineNumber":361,"author":{"gitId":"lzf834"},"content":"    * Cons:","lastModifiedDate":"2022-03-21"},{"lineNumber":362,"author":{"gitId":"lzf834"},"content":"        * Lesser level of abstraction, changes made have to be constantly changed throughout the file","lastModifiedDate":"2022-03-21"},{"lineNumber":363,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":364,"author":{"gitId":"lzf834"},"content":"### \\[Implemented\\] Find By Activity Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":365,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":366,"author":{"gitId":"Fenway17"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":367,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":368,"author":{"gitId":"Fenway17"},"content":"The implemented find by activity mechanism is facilitated by `FindByActivity`. It extends `AddressBook` with a Find By Activity, allowing users to find persons by their Activity.","lastModifiedDate":"2022-03-21"},{"lineNumber":369,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":370,"author":{"gitId":"Fenway17"},"content":"Classes added for this feature:","lastModifiedDate":"2022-03-23"},{"lineNumber":371,"author":{"gitId":"Fenway17"},"content":"* `ActivityContainsKeywordsPredicate`","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"Fenway17"},"content":"* `FindActivityCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"Fenway17"},"content":"* `FindActivityCommandParser`","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"Fenway17"},"content":"Given below is an example usage scenario and how the find by activity mechanism behaves at each step.","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"Fenway17"},"content":"Step 1. The user launches the application. The full list of `Person`s will be shown to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"Fenway17"},"content":"Step 2. The user executes `findactivity choir` command to find all `Person`s that are COVID positive in the address book. The `findactivity` command calls `AddressBookParser#parseCommand()` to parse the command given, which then calls `FindActivityCommandParser#parse()` to parse the given arguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"Fenway17"},"content":"Step 3. `FindActivityCommandParser#parse()` calls `FindActivityCommand`\u0027s constructor along with `ActivityContainsKeywordsPredicate`\u0027s constructor given the arguments to allow the command, when executed, to use the given `Predicate` _(Java)_ to filter the list of `Person`s by checking if they have the matching `Activity` of `\"choir\"`.","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"Fenway17"},"content":"Step 4. The filtered list of perons is displayed to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":382,"author":{"gitId":"louisdavinlie"},"content":"The following sequence diagram shows how the `findactivity` operation works:","lastModifiedDate":"2022-04-07"},{"lineNumber":383,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":384,"author":{"gitId":"louisdavinlie"},"content":"![FindActivitySequenceDiagram](images/FindActivitySequenceDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":385,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":386,"author":{"gitId":"louisdavinlie"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindActivityCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-07"},{"lineNumber":387,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":388,"author":{"gitId":"louisdavinlie"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":389,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":390,"author":{"gitId":"Fenway17"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"Fenway17"},"content":"**Aspect: Abstracting into different classes**","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"Fenway17"},"content":"* **Alternative 1 (current choice):** Abstracted classes.","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"Fenway17"},"content":"    * Pros:","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"Fenway17"},"content":"        * Higher Level of abstraction","lastModifiedDate":"2022-03-23"},{"lineNumber":397,"author":{"gitId":"Fenway17"},"content":"        * Changes can be made easily for each class","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"Fenway17"},"content":"        * Better organisation of classes into separate packages (e.g. `FindActivityCommandParser` belongs to the `parser` package)","lastModifiedDate":"2022-03-23"},{"lineNumber":399,"author":{"gitId":"Fenway17"},"content":"          * Different classes serve different lower-level purposes","lastModifiedDate":"2022-03-23"},{"lineNumber":400,"author":{"gitId":"Fenway17"},"content":"    * Cons:","lastModifiedDate":"2022-03-23"},{"lineNumber":401,"author":{"gitId":"Fenway17"},"content":"        * Adds more class files to the currently already large amount of class files","lastModifiedDate":"2022-03-23"},{"lineNumber":402,"author":{"gitId":"Fenway17"},"content":"        * Changes to one method may require going through all the different class files due to high level of abstraction","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":404,"author":{"gitId":"Fenway17"},"content":"* **Alternative 2:** Single command that executed upon reading from parser","lastModifiedDate":"2022-03-23"},{"lineNumber":405,"author":{"gitId":"Fenway17"},"content":"    * Pros:","lastModifiedDate":"2022-03-23"},{"lineNumber":406,"author":{"gitId":"Fenway17"},"content":"        * Single class file where changes can be made","lastModifiedDate":"2022-03-23"},{"lineNumber":407,"author":{"gitId":"Fenway17"},"content":"    * Cons:","lastModifiedDate":"2022-03-23"},{"lineNumber":408,"author":{"gitId":"Fenway17"},"content":"        * Lesser level of abstraction, class file may become exceptionally long to accommodate all the smaller features required","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"Fenway17"},"content":"        * May violate SLAP principles, as every thing is done in a single class","lastModifiedDate":"2022-03-23"},{"lineNumber":410,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":411,"author":{"gitId":"lzf834"},"content":"**Aspect: `findactivity` with multiple inputs**","lastModifiedDate":"2022-04-05"},{"lineNumber":412,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":413,"author":{"gitId":"lzf834"},"content":"* **Alternative 1 (current choice):** Student participating in **ANY** of the input activities will be returned.","lastModifiedDate":"2022-04-05"},{"lineNumber":414,"author":{"gitId":"lzf834"},"content":"  * Pros:","lastModifiedDate":"2022-04-05"},{"lineNumber":415,"author":{"gitId":"lzf834"},"content":"    * Applicable to use case. `findactivity` with 2 inputs returns a list of students who are in either of those","lastModifiedDate":"2022-04-05"},{"lineNumber":416,"author":{"gitId":"lzf834"},"content":"activities. Allows user to check across multiple activities instead of only that few students participating in both activities","lastModifiedDate":"2022-04-05"},{"lineNumber":417,"author":{"gitId":"lzf834"},"content":"    * More practical for usecase","lastModifiedDate":"2022-04-05"},{"lineNumber":418,"author":{"gitId":"lzf834"},"content":"  * Cons:","lastModifiedDate":"2022-04-05"},{"lineNumber":419,"author":{"gitId":"lzf834"},"content":"    * Less specific","lastModifiedDate":"2022-04-05"},{"lineNumber":420,"author":{"gitId":"lzf834"},"content":"    * Returns a larger list as compared to alternative 2","lastModifiedDate":"2022-04-05"},{"lineNumber":421,"author":{"gitId":"lzf834"},"content":"* **Alternative 2:** Student participating in **ALL** the input activities will be returned","lastModifiedDate":"2022-04-05"},{"lineNumber":422,"author":{"gitId":"lzf834"},"content":"  * Pros:","lastModifiedDate":"2022-04-05"},{"lineNumber":423,"author":{"gitId":"lzf834"},"content":"    * More specific, allowing for a more detailed search","lastModifiedDate":"2022-04-05"},{"lineNumber":424,"author":{"gitId":"lzf834"},"content":"    * List is smaller and easier to browse through","lastModifiedDate":"2022-04-05"},{"lineNumber":425,"author":{"gitId":"lzf834"},"content":"  * Cons:","lastModifiedDate":"2022-04-05"},{"lineNumber":426,"author":{"gitId":"lzf834"},"content":"    * Only students who are participating in all the input activities will be returned, possibly only a handful","lastModifiedDate":"2022-04-05"},{"lineNumber":427,"author":{"gitId":"lzf834"},"content":"of students which makes it slightly impractical to use","lastModifiedDate":"2022-04-05"},{"lineNumber":428,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":429,"author":{"gitId":"lzf834"},"content":"### \\[Updated\\] Adding a Person Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":430,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":431,"author":{"gitId":"louisdavinlie"},"content":"#### Updates","lastModifiedDate":"2022-03-23"},{"lineNumber":432,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":433,"author":{"gitId":"louisdavinlie"},"content":"`AddCommand` is updated to accommodate the addition of the following attributes:","lastModifiedDate":"2022-03-23"},{"lineNumber":434,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":435,"author":{"gitId":"louisdavinlie"},"content":"* `Status`","lastModifiedDate":"2022-03-23"},{"lineNumber":436,"author":{"gitId":"louisdavinlie"},"content":"  * Use the prefix `s/` followed by the `STATUS` (e.g. `s/Positive`).","lastModifiedDate":"2022-03-23"},{"lineNumber":437,"author":{"gitId":"louisdavinlie"},"content":"* `ClassCode`","lastModifiedDate":"2022-03-23"},{"lineNumber":438,"author":{"gitId":"louisdavinlie"},"content":"  * Use the prefix `c/` followed by the `CLASSCODE` (e.g. `c/4A`).","lastModifiedDate":"2022-03-23"},{"lineNumber":439,"author":{"gitId":"louisdavinlie"},"content":"* `Activity`","lastModifiedDate":"2022-03-23"},{"lineNumber":440,"author":{"gitId":"louisdavinlie"},"content":"  * Use the prefix `act/` followed by the `ACTIVITES` (e.g. `act/basketball`).","lastModifiedDate":"2022-03-23"},{"lineNumber":441,"author":{"gitId":"louisdavinlie"},"content":"  * A student can have ANY number of activities, including zero (optional).","lastModifiedDate":"2022-03-23"},{"lineNumber":442,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":443,"author":{"gitId":"lzf834"},"content":"### \\[Updated\\] Editing a Person Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":444,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":445,"author":{"gitId":"louisdavinlie"},"content":"#### Updates","lastModifiedDate":"2022-03-23"},{"lineNumber":446,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":447,"author":{"gitId":"louisdavinlie"},"content":"`EditCommand` is updated to accommodate the addition of the following attributes:","lastModifiedDate":"2022-03-23"},{"lineNumber":448,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":449,"author":{"gitId":"louisdavinlie"},"content":"* `Status`","lastModifiedDate":"2022-03-23"},{"lineNumber":450,"author":{"gitId":"louisdavinlie"},"content":"    * Use the prefix `s/` followed by the `STATUS` (e.g. `s/Negative`).","lastModifiedDate":"2022-03-23"},{"lineNumber":451,"author":{"gitId":"louisdavinlie"},"content":"* `ClassCode`","lastModifiedDate":"2022-03-23"},{"lineNumber":452,"author":{"gitId":"louisdavinlie"},"content":"    * Use the prefix `c/` followed by the `CLASSCODE` (e.g. `c/4B`).","lastModifiedDate":"2022-03-23"},{"lineNumber":453,"author":{"gitId":"louisdavinlie"},"content":"* `Activity`","lastModifiedDate":"2022-03-23"},{"lineNumber":454,"author":{"gitId":"louisdavinlie"},"content":"    * Use the prefix `act/` followed by the `ACTIVITES` (e.g. `act/badminton`).","lastModifiedDate":"2022-03-23"},{"lineNumber":455,"author":{"gitId":"louisdavinlie"},"content":"    * When editing a student\u0027s activities, the user has to list out all activities even if the activities","lastModifiedDate":"2022-03-23"},{"lineNumber":456,"author":{"gitId":"louisdavinlie"},"content":"have already been added.","lastModifiedDate":"2022-03-23"},{"lineNumber":457,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":458,"author":{"gitId":"Fenway17"},"content":"### \\[Updated\\] User Interface","lastModifiedDate":"2022-03-21"},{"lineNumber":459,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":460,"author":{"gitId":"Fenway17"},"content":"#### Updates","lastModifiedDate":"2022-03-21"},{"lineNumber":461,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":462,"author":{"gitId":"louisdavinlie"},"content":"The User Interface is updated to display the newly added attributes:","lastModifiedDate":"2022-03-23"},{"lineNumber":463,"author":{"gitId":"louisdavinlie"},"content":"* `Status`","lastModifiedDate":"2022-03-23"},{"lineNumber":464,"author":{"gitId":"louisdavinlie"},"content":"* `ClassCode`","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"louisdavinlie"},"content":"* `Activity`","lastModifiedDate":"2022-03-23"},{"lineNumber":466,"author":{"gitId":"louisdavinlie"},"content":"    * The list of activities will be displayed horizontally under the name where each","lastModifiedDate":"2022-03-23"},{"lineNumber":467,"author":{"gitId":"louisdavinlie"},"content":"acitivity is contained in a blue box.","lastModifiedDate":"2022-03-23"},{"lineNumber":468,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":469,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"Fenway17"},"content":"### \\[Updated\\] Storage","lastModifiedDate":"2022-03-21"},{"lineNumber":471,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":472,"author":{"gitId":"Fenway17"},"content":"#### Updates","lastModifiedDate":"2022-03-21"},{"lineNumber":473,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":474,"author":{"gitId":"louisdavinlie"},"content":"The flow of saving and loading the data storage is updated to accommodate the addtion of","lastModifiedDate":"2022-03-23"},{"lineNumber":475,"author":{"gitId":"louisdavinlie"},"content":"`Status`, `ClassCode`, and `Activity`.","lastModifiedDate":"2022-03-23"},{"lineNumber":476,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":477,"author":{"gitId":"lzf834"},"content":"### \\[Enhancement\\] Batch Update","lastModifiedDate":"2022-04-08"},{"lineNumber":478,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":479,"author":{"gitId":"Fenway17"},"content":"#### Enhancements","lastModifiedDate":"2022-03-21"},{"lineNumber":480,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":481,"author":{"gitId":"louisdavinlie"},"content":"The purpose of the batch update enhancement is to update all students by `ClassCode` and `Activity` when the `Status` of a student in that `ClassCode` or `Activity` changes from `Negative` -\u003e `Positive` and vice-versa.","lastModifiedDate":"2022-04-07"},{"lineNumber":482,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":483,"author":{"gitId":"louisdavinlie"},"content":"The batch update enhancement is facilitated by using `execute()` command in the `EditCommand`, `AddCommand`, and `DeleteCommand` class.","lastModifiedDate":"2022-04-07"},{"lineNumber":484,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":485,"author":{"gitId":"whoisjunhong"},"content":"Batch update depends on the `Model` and `Person` class and methods to implement this enhancement.","lastModifiedDate":"2022-03-21"},{"lineNumber":486,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":487,"author":{"gitId":"whoisjunhong"},"content":"How the batch update works:","lastModifiedDate":"2022-03-21"},{"lineNumber":488,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":489,"author":{"gitId":"louisdavinlie"},"content":"* **EditCommand**:","lastModifiedDate":"2022-04-07"},{"lineNumber":490,"author":{"gitId":"louisdavinlie"},"content":"  * When `batchUpdateNegativeToPositive()` under `execute()` in `EditCommand` checks for a change in `Status` if the person to edit from `Negative` -\u003e `Positive` and `Status` is not already `Positive`","lastModifiedDate":"2022-04-07"},{"lineNumber":491,"author":{"gitId":"louisdavinlie"},"content":"    * If true, a filtered `List` of students with the same `ClassCode` or `Acitivty` who are not `Positive` and not the current student being edited would be created.","lastModifiedDate":"2022-04-07"},{"lineNumber":492,"author":{"gitId":"whoisjunhong"},"content":"    * All students `Status` in the filtered `List` will be switched from `Negative` -\u003e `Close-Contact`.","lastModifiedDate":"2022-03-21"},{"lineNumber":493,"author":{"gitId":"louisdavinlie"},"content":"  * Conversely, `batchUpdatePositiveToNegative()` under `execute()` in `EditCommand` checks if a student\u0027s `Status` changes from `Positive` -\u003e `Negative`.","lastModifiedDate":"2022-04-07"},{"lineNumber":494,"author":{"gitId":"louisdavinlie"},"content":"    * If true, a filtered `List` of students with the same `ClassCode` or `Activity` who are not the current student edited would be created.","lastModifiedDate":"2022-04-07"},{"lineNumber":495,"author":{"gitId":"louisdavinlie"},"content":"    * For every student in that list (denoted as A), another `List` is created consisting students who have the same `ClassCode` or `Activity` as A and have `Positive` as their `Status`.","lastModifiedDate":"2022-04-07"},{"lineNumber":496,"author":{"gitId":"louisdavinlie"},"content":"      * If the `List` is empty, edit A\u0027s status to `Negative`","lastModifiedDate":"2022-04-07"},{"lineNumber":497,"author":{"gitId":"louisdavinlie"},"content":"      * Else, do nothing.","lastModifiedDate":"2022-04-07"},{"lineNumber":498,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":499,"author":{"gitId":"louisdavinlie"},"content":"* **AddCommand**:","lastModifiedDate":"2022-04-07"},{"lineNumber":500,"author":{"gitId":"louisdavinlie"},"content":"  * When `batchUpdateNegativeToPositive()` under `execute()` in `AddCommand` checks for the `Status` of the student added,","lastModifiedDate":"2022-04-07"},{"lineNumber":501,"author":{"gitId":"louisdavinlie"},"content":"    * If the student to be added is `Positive`,","lastModifiedDate":"2022-04-07"},{"lineNumber":502,"author":{"gitId":"louisdavinlie"},"content":"      * A filtered `List` of students with the same `ClassCode` or `Acitivty` who are not `Positive` and not the current student being added would be created.","lastModifiedDate":"2022-04-07"},{"lineNumber":503,"author":{"gitId":"louisdavinlie"},"content":"      * All students `Status` in the filtered `List` will be switched from `Negative` -\u003e `Close-Contact`.","lastModifiedDate":"2022-04-07"},{"lineNumber":504,"author":{"gitId":"louisdavinlie"},"content":"    * If the student to be added is `Negative` or `Close-Contact`,","lastModifiedDate":"2022-04-07"},{"lineNumber":505,"author":{"gitId":"louisdavinlie"},"content":"      * A filtered `List` of students with the same `ClassCode` or `Acitivty` who are not the current student being added would be created.","lastModifiedDate":"2022-04-07"},{"lineNumber":506,"author":{"gitId":"louisdavinlie"},"content":"      * For every student in that list (denoted as A), another `List` is created consisting students who have the same `ClassCode` or `Activity` as A and have `Positive` as their `Status`.","lastModifiedDate":"2022-04-07"},{"lineNumber":507,"author":{"gitId":"louisdavinlie"},"content":"        * If the `List` is empty, edit A\u0027s status to `Negative`.","lastModifiedDate":"2022-04-07"},{"lineNumber":508,"author":{"gitId":"louisdavinlie"},"content":"        * Else, edit the added student\u0027s status to `Close-Contact`.","lastModifiedDate":"2022-04-07"},{"lineNumber":509,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":510,"author":{"gitId":"louisdavinlie"},"content":"* **DeleteCommand**:","lastModifiedDate":"2022-04-07"},{"lineNumber":511,"author":{"gitId":"louisdavinlie"},"content":"  * When `batchUpdateDeletedPerson()` under `execute()` in DeleteCommand checks for the `Status` of the student deleted,","lastModifiedDate":"2022-04-07"},{"lineNumber":512,"author":{"gitId":"louisdavinlie"},"content":"    * If the student to be deleted is `Positive`,","lastModifiedDate":"2022-04-07"},{"lineNumber":513,"author":{"gitId":"louisdavinlie"},"content":"      * A filtered `List` of students with the same `ClassCode` or `Acitivty` who are not the current student being deleted would be created.","lastModifiedDate":"2022-04-07"},{"lineNumber":514,"author":{"gitId":"louisdavinlie"},"content":"      * For every student in that list (denoted as A), another `List` is created consisting students who have the same `ClassCode` or `Activity` as A and have `Positive` as their `Status`.","lastModifiedDate":"2022-04-07"},{"lineNumber":515,"author":{"gitId":"louisdavinlie"},"content":"        * If the `List` is empty, edit A\u0027s status to `Negative`.","lastModifiedDate":"2022-04-07"},{"lineNumber":516,"author":{"gitId":"louisdavinlie"},"content":"        * Else, do nothing.","lastModifiedDate":"2022-04-07"},{"lineNumber":517,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":518,"author":{"gitId":"lzf834"},"content":"### \\[Proposed Enhancement\\] Implementing CSV Compatibility","lastModifiedDate":"2022-04-08"},{"lineNumber":519,"author":{"gitId":"e0544333"},"content":"The purpose of the CSV compatibility ehancement is to enable administrators to quickly import students\u0027 information","lastModifiedDate":"2022-03-22"},{"lineNumber":520,"author":{"gitId":"e0544333"},"content":"from a central data bank. Fields that are required includes `Name`, `Address`, `ClassCode` and other attributes","lastModifiedDate":"2022-03-22"},{"lineNumber":521,"author":{"gitId":"e0544333"},"content":"that can be found in the `Person` Class.","lastModifiedDate":"2022-03-22"},{"lineNumber":522,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":523,"author":{"gitId":"e0544333"},"content":"The proposed CSV support mechanism is facilitated by `AddressBook`. It performs read/write on a target Excel file,","lastModifiedDate":"2022-03-22"},{"lineNumber":524,"author":{"gitId":"e0544333"},"content":"stored internally as an `addressBookContactList`. Additionally, it supports the following operations:","lastModifiedDate":"2022-03-22"},{"lineNumber":525,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":526,"author":{"gitId":"e0544333"},"content":"* `AddressBook#readCSV()`â€‰â€”â€‰Reads the target Excel file and streams the information into a `Person` list.","lastModifiedDate":"2022-03-22"},{"lineNumber":527,"author":{"gitId":"e0544333"},"content":"* `VersionedAddressBook#writeCSV()`â€‰â€”â€‰Writes `Person` information to a target Excel file.","lastModifiedDate":"2022-03-22"},{"lineNumber":528,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":529,"author":{"gitId":"e0544333"},"content":"These operations are exposed in the `Model` interface as `Model#readCSV()` and `Model#writeCSV()` respectively.","lastModifiedDate":"2022-03-22"},{"lineNumber":530,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":531,"author":{"gitId":"e0544333"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":532,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":533,"author":{"gitId":"e0544333"},"content":"**Aspect: How reading of CSV executes:**","lastModifiedDate":"2022-03-22"},{"lineNumber":534,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":535,"author":{"gitId":"e0544333"},"content":"* **Alternative 1 (current choice):** Automatically attempt to read from a target CSV file.","lastModifiedDate":"2022-03-22"},{"lineNumber":536,"author":{"gitId":"e0544333"},"content":"    * Pros: Automated process of importing contacts.","lastModifiedDate":"2022-03-22"},{"lineNumber":537,"author":{"gitId":"e0544333"},"content":"    * Cons: May have performance issues due to constant execution read operation.","lastModifiedDate":"2022-03-22"},{"lineNumber":538,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":539,"author":{"gitId":"e0544333"},"content":"* **Alternative 2:** Individual command to execute read by","lastModifiedDate":"2022-03-22"},{"lineNumber":540,"author":{"gitId":"e0544333"},"content":"  itself.","lastModifiedDate":"2022-03-22"},{"lineNumber":541,"author":{"gitId":"e0544333"},"content":"    * Pros: Will use less memory (e.g. create another UI component to a user to input the CSV file).","lastModifiedDate":"2022-03-22"},{"lineNumber":542,"author":{"gitId":"e0544333"},"content":"    * Cons: More components to implement (e.g. an Upload file component on JavaFX).","lastModifiedDate":"2022-03-22"},{"lineNumber":543,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":544,"author":{"gitId":"e0544333"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-03-22"},{"lineNumber":545,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":546,"author":{"gitId":"e0544333"},"content":"Given below is an example usage scenario and how read mechanism behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":547,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":548,"author":{"gitId":"e0544333"},"content":"1. The user launches the application for the first time. The Addressbook will be initialized with the initial","lastModifiedDate":"2022-03-22"},{"lineNumber":549,"author":{"gitId":"e0544333"},"content":"address book state, and the `addressBookContactList` initialized as an empty list.","lastModifiedDate":"2022-03-22"},{"lineNumber":550,"author":{"gitId":"e0544333"},"content":"2. The AddressBook then attempts to execute `Model#readCSV()`, reading the target CSV file that the administrator","lastModifiedDate":"2022-03-22"},{"lineNumber":551,"author":{"gitId":"e0544333"},"content":"has _uploaded into the same directory_ as the file.","lastModifiedDate":"2022-03-22"},{"lineNumber":552,"author":{"gitId":"e0544333"},"content":"3. The User Interface will prompt the administrator that the information from the CSV file is being processed and it","lastModifiedDate":"2022-03-22"},{"lineNumber":553,"author":{"gitId":"e0544333"},"content":"will require time to complete the import process.","lastModifiedDate":"2022-03-22"},{"lineNumber":554,"author":{"gitId":"e0544333"},"content":"4. `addressBookContactList` is populated by `Model#readCSV()` and changes the state of the User Interface.","lastModifiedDate":"2022-03-22"},{"lineNumber":555,"author":{"gitId":"e0544333"},"content":"5. Administrator can interact with the Addressbook, with all the relevant contacts being updated on the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":556,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":557,"author":{"gitId":"e0544333"},"content":"Given below is an example usage scenario and how write mechanism behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":558,"author":{"gitId":"e0544333"},"content":"_To be Continued_","lastModifiedDate":"2022-03-22"},{"lineNumber":559,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":560,"author":{"gitId":"e0544333"},"content":"#### Limitations:","lastModifiedDate":"2022-03-22"},{"lineNumber":561,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":562,"author":{"gitId":"e0544333"},"content":"* Data accepted is scoped to the `Person` model. Other information deemed important","lastModifiedDate":"2022-03-22"},{"lineNumber":563,"author":{"gitId":"e0544333"},"content":"will be omitted from the read process.","lastModifiedDate":"2022-03-22"},{"lineNumber":564,"author":{"gitId":"e0544333"},"content":"* File size will affect the performance of the application.","lastModifiedDate":"2022-03-22"},{"lineNumber":565,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":566,"author":{"gitId":"lzf834"},"content":"### \\[Proposed\\] Undo/redo Feature","lastModifiedDate":"2022-04-08"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":568,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":570,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-04-08"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2022-04-08"},{"lineNumber":573,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2022-04-08"},{"lineNumber":574,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2022-04-08"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":576,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2022-04-08"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2022-04-08"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":580,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2022-04-08"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":582,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":584,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-04-08"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":586,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":588,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-04-08"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":590,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":592,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2022-04-08"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":594,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-04-08"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":598,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":600,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-04-08"},{"lineNumber":601,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2022-04-08"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":603,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":605,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2022-04-08"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":607,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":609,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-08"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":611,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":613,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-04-08"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":615,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-04-08"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":617,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":619,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-04-08"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":621,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":623,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-04-08"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":625,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":627,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2022-04-08"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":629,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":631,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2022-04-08"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":633,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2022-04-08"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":635,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":636,"author":{"gitId":"lzf834"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-04-08"},{"lineNumber":637,"author":{"gitId":"lzf834"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-04-08"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":639,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-04-08"},{"lineNumber":640,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2022-04-08"},{"lineNumber":641,"author":{"gitId":"lzf834"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2022-04-08"},{"lineNumber":642,"author":{"gitId":"lzf834"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-04-08"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":644,"author":{"gitId":"e0544333"},"content":"#### Proposed Enhancement:","lastModifiedDate":"2022-03-22"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":646,"author":{"gitId":"louisdavinlie"},"content":"### \\[Proposed Update\\] User Interface","lastModifiedDate":"2022-03-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"whoisjunhong"},"content":"The purpose of updating the user interface is to create a more user-friendly and seamless application.","lastModifiedDate":"2022-04-10"},{"lineNumber":649,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":650,"author":{"gitId":"louisdavinlie"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":652,"author":{"gitId":"louisdavinlie"},"content":"* Create a light themed display.","lastModifiedDate":"2022-03-23"},{"lineNumber":653,"author":{"gitId":"louisdavinlie"},"content":"* The display of a person card, along with its attributes, could be enhanced.","lastModifiedDate":"2022-03-23"},{"lineNumber":654,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":655,"author":{"gitId":"lzf834"},"content":"### \\[Testing\\] JUnit Tests","lastModifiedDate":"2022-04-08"},{"lineNumber":656,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":657,"author":{"gitId":"Fenway17"},"content":"#### JUnit tests","lastModifiedDate":"2022-03-21"},{"lineNumber":658,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":659,"author":{"gitId":"louisdavinlie"},"content":"Proper JUnit tests have been added as a means to check if the features listed above are correctly implemented.","lastModifiedDate":"2022-03-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":661,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":666,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":667,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":668,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":669,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"lzf834"},"content":"* Has a need to manage a significant number of contacts","lastModifiedDate":"2022-04-08"},{"lineNumber":680,"author":{"gitId":"lzf834"},"content":"  * COVID-19 Cases in Schools","lastModifiedDate":"2022-04-08"},{"lineNumber":681,"author":{"gitId":"lzf834"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2022-04-08"},{"lineNumber":682,"author":{"gitId":"lzf834"},"content":"* Can type fast","lastModifiedDate":"2022-04-08"},{"lineNumber":683,"author":{"gitId":"lzf834"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2022-04-08"},{"lineNumber":684,"author":{"gitId":"lzf834"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2022-04-08"},{"lineNumber":685,"author":{"gitId":"lzf834"},"content":"* Has access to details of students","lastModifiedDate":"2022-04-08"},{"lineNumber":686,"author":{"gitId":"lzf834"},"content":"* School admins","lastModifiedDate":"2022-02-21"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"lzf834"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-21"},{"lineNumber":689,"author":{"gitId":"lzf834"},"content":"* Manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-21"},{"lineNumber":690,"author":{"gitId":"lzf834"},"content":"* To enable the schoolâ€™s COVID-19 management task force to identify and implement the correct measures for students who are positive/close-contact","lastModifiedDate":"2022-02-21"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                       | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"lzf834"},"content":"|----------|--------------------------------------------|------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-20"},{"lineNumber":699,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions             | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"lzf834"},"content":"| `* * *`  | user                                       | add a new student                  |                                                                        |","lastModifiedDate":"2022-02-21"},{"lineNumber":701,"author":{"gitId":"lzf834"},"content":"| `* * *`  | user                                       | delete a student                   | remove entries that I no longer need                                   |","lastModifiedDate":"2022-02-21"},{"lineNumber":702,"author":{"gitId":"lzf834"},"content":"| `* *`    | user                                       | find a student by name             | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-02-21"},{"lineNumber":703,"author":{"gitId":"lzf834"},"content":"| `* *`    | user                                       | find a student by status           | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-02-21"},{"lineNumber":704,"author":{"gitId":"lzf834"},"content":"| `* *`    | user                                       | find a student by class            | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-02-21"},{"lineNumber":705,"author":{"gitId":"lzf834"},"content":"| `* *`    | user                                       | update a student\u0027s Covid-19 status | make the necessary changes to the student\u0027s status as required         |","lastModifiedDate":"2022-02-21"},{"lineNumber":706,"author":{"gitId":"lzf834"},"content":"| `* *`    | user                                       | edit a student\u0027s details           | update the details of a student\u0027s particulars                          |","lastModifiedDate":"2022-02-21"},{"lineNumber":707,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name               | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"Fenway17"},"content":"(For all use cases below, the **System** is the `UltimateDivocTracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-21"},{"lineNumber":714,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":715,"author":{"gitId":"Fenway17"},"content":"**Use case: Add a person**","lastModifiedDate":"2022-02-21"},{"lineNumber":716,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":717,"author":{"gitId":"Fenway17"},"content":"**MSS**","lastModifiedDate":"2022-02-21"},{"lineNumber":718,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":719,"author":{"gitId":"Fenway17"},"content":"1.  User requests to add a person","lastModifiedDate":"2022-02-21"},{"lineNumber":720,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker adds a person to the list of persons","lastModifiedDate":"2022-02-21"},{"lineNumber":721,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":722,"author":{"gitId":"Fenway17"},"content":"    Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":723,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":724,"author":{"gitId":"Fenway17"},"content":"**Extensions**","lastModifiedDate":"2022-02-21"},{"lineNumber":725,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":726,"author":{"gitId":"Fenway17"},"content":"* 2a. The person already exists.","lastModifiedDate":"2022-02-21"},{"lineNumber":727,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":728,"author":{"gitId":"Fenway17"},"content":"  * 2a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-02-21"},{"lineNumber":729,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":730,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":731,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker shows a list of persons","lastModifiedDate":"2022-02-21"},{"lineNumber":739,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"Fenway17"},"content":"4.  UltimateDivocTracker deletes the person","lastModifiedDate":"2022-02-21"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"  * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":757,"author":{"gitId":"Fenway17"},"content":"**Use case: Finding a person by name**","lastModifiedDate":"2022-02-21"},{"lineNumber":758,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":759,"author":{"gitId":"Fenway17"},"content":"**MSS**","lastModifiedDate":"2022-02-21"},{"lineNumber":760,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":761,"author":{"gitId":"Fenway17"},"content":"1.  User requests to find a person by name","lastModifiedDate":"2022-02-21"},{"lineNumber":762,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker shows the person\u0027s information","lastModifiedDate":"2022-02-21"},{"lineNumber":763,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":764,"author":{"gitId":"Fenway17"},"content":"    Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":765,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":766,"author":{"gitId":"Fenway17"},"content":"**Extensions**","lastModifiedDate":"2022-02-21"},{"lineNumber":767,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":768,"author":{"gitId":"Fenway17"},"content":"* 2a. The given name is invalid (cannot be found).","lastModifiedDate":"2022-02-21"},{"lineNumber":769,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":770,"author":{"gitId":"Fenway17"},"content":"  * 2a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-02-21"},{"lineNumber":771,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":772,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":773,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":774,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":775,"author":{"gitId":"Fenway17"},"content":"**Use case: Finding persons by status**","lastModifiedDate":"2022-02-21"},{"lineNumber":776,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":777,"author":{"gitId":"Fenway17"},"content":"**MSS**","lastModifiedDate":"2022-02-21"},{"lineNumber":778,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":779,"author":{"gitId":"Fenway17"},"content":"1.  User requests to find persons by status","lastModifiedDate":"2022-02-21"},{"lineNumber":780,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker shows the list of persons with said status","lastModifiedDate":"2022-02-21"},{"lineNumber":781,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":782,"author":{"gitId":"Fenway17"},"content":"    Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":783,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":784,"author":{"gitId":"Fenway17"},"content":"**Extensions**","lastModifiedDate":"2022-02-21"},{"lineNumber":785,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":786,"author":{"gitId":"lzf834"},"content":"* 1a. The given status is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":787,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":788,"author":{"gitId":"lzf834"},"content":"    * 1a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-03-21"},{"lineNumber":789,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":790,"author":{"gitId":"lzf834"},"content":"  Use case ends.","lastModifiedDate":"2022-03-21"},{"lineNumber":791,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":792,"author":{"gitId":"lzf834"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-21"},{"lineNumber":793,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":794,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":796,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":797,"author":{"gitId":"Fenway17"},"content":"**Use case: Finding persons by class**","lastModifiedDate":"2022-02-21"},{"lineNumber":798,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":799,"author":{"gitId":"Fenway17"},"content":"**MSS**","lastModifiedDate":"2022-02-21"},{"lineNumber":800,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":801,"author":{"gitId":"Fenway17"},"content":"1.  User requests to find persons by class","lastModifiedDate":"2022-02-21"},{"lineNumber":802,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker shows the list of persons with said class","lastModifiedDate":"2022-02-21"},{"lineNumber":803,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":804,"author":{"gitId":"Fenway17"},"content":"    Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":805,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":806,"author":{"gitId":"Fenway17"},"content":"**Extensions**","lastModifiedDate":"2022-02-21"},{"lineNumber":807,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":808,"author":{"gitId":"lzf834"},"content":"* 1a. The given class is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":809,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":810,"author":{"gitId":"lzf834"},"content":"    * 1a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-03-21"},{"lineNumber":811,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":812,"author":{"gitId":"lzf834"},"content":"  Use case ends.","lastModifiedDate":"2022-03-21"},{"lineNumber":813,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":814,"author":{"gitId":"lzf834"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-21"},{"lineNumber":815,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":816,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":817,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":818,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":819,"author":{"gitId":"Fenway17"},"content":"**Use case: Updating a person\u0027s status**","lastModifiedDate":"2022-02-21"},{"lineNumber":820,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":821,"author":{"gitId":"Fenway17"},"content":"**MSS**","lastModifiedDate":"2022-02-21"},{"lineNumber":822,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":823,"author":{"gitId":"Fenway17"},"content":"1.  User requests person\u0027s information","lastModifiedDate":"2022-02-21"},{"lineNumber":824,"author":{"gitId":"Fenway17"},"content":"2.  UltimateDivocTracker shows the person\u0027s information","lastModifiedDate":"2022-02-21"},{"lineNumber":825,"author":{"gitId":"Fenway17"},"content":"3.  User requests to update a person\u0027s status","lastModifiedDate":"2022-02-21"},{"lineNumber":826,"author":{"gitId":"Fenway17"},"content":"4.  UltimateDivocTracker updates the person\u0027s status","lastModifiedDate":"2022-02-21"},{"lineNumber":827,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":828,"author":{"gitId":"Fenway17"},"content":"    Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":829,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":830,"author":{"gitId":"Fenway17"},"content":"**Extensions**","lastModifiedDate":"2022-02-21"},{"lineNumber":831,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":832,"author":{"gitId":"Fenway17"},"content":"* 2a. The person cannot be found.","lastModifiedDate":"2022-02-21"},{"lineNumber":833,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":834,"author":{"gitId":"Fenway17"},"content":"  * 2a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-02-21"},{"lineNumber":835,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":836,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":837,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":838,"author":{"gitId":"lzf834"},"content":"* 3a. The given status is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":839,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":840,"author":{"gitId":"lzf834"},"content":"  * 3a1. UltimateDivocTracker shows an error message.","lastModifiedDate":"2022-03-21"},{"lineNumber":841,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":842,"author":{"gitId":"Fenway17"},"content":"  Use case ends.","lastModifiedDate":"2022-02-21"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":844,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"e0544333"},"content":"2. Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-21"},{"lineNumber":850,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"e0544333"},"content":"4. Administrative requirements: there should be at least 1 DIVOCTracker admin to monitor data entries.","lastModifiedDate":"2022-02-21"},{"lineNumber":852,"author":{"gitId":"e0544333"},"content":"5. Performance requirements: the display of students\u0027 information should be done within 2 seconds.","lastModifiedDate":"2022-02-21"},{"lineNumber":853,"author":{"gitId":"e0544333"},"content":"6. Quality requirements: the system should be usable by a novice who has never administered COVID-19 statuses.","lastModifiedDate":"2022-02-21"},{"lineNumber":854,"author":{"gitId":"e0544333"},"content":"7. Notes about project scope:","lastModifiedDate":"2022-02-21"},{"lineNumber":855,"author":{"gitId":"e0544333"},"content":"   1. DIVOCtracker is not required to handle user login and permissions.","lastModifiedDate":"2022-02-21"},{"lineNumber":856,"author":{"gitId":"e0544333"},"content":"   2. The central idea of the product is to provide a tracking tool for teachers/administrators to track COVID-19 in schools.","lastModifiedDate":"2022-02-21"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-04-05"},{"lineNumber":870,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"lzf834"},"content":"2. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2022-03-21"},{"lineNumber":907,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":908,"author":{"gitId":"lzf834"},"content":"### Adding a person","lastModifiedDate":"2022-03-21"},{"lineNumber":909,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":910,"author":{"gitId":"lzf834"},"content":"1. Adding a person to the list","lastModifiedDate":"2022-03-21"},{"lineNumber":911,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":912,"author":{"gitId":"lzf834"},"content":"    1. Prerequisites: None","lastModifiedDate":"2022-03-21"},{"lineNumber":913,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":914,"author":{"gitId":"lzf834"},"content":"    1. Test case: `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 c/5A s/NEGATIVE`\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":915,"author":{"gitId":"lzf834"},"content":"       Expected: Student John Doe is added to the list. Details of the added contact shown in the status message.","lastModifiedDate":"2022-03-21"},{"lineNumber":916,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":917,"author":{"gitId":"lzf834"},"content":"    1. Test case: `add 0`\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":918,"author":{"gitId":"lzf834"},"content":"       Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-21"},{"lineNumber":919,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":920,"author":{"gitId":"lzf834"},"content":"    1. Other incorrect delete commands to try: `add ?!@`, `add p/1231923`, `...` (Missing details)\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":921,"author":{"gitId":"lzf834"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-03-21"},{"lineNumber":922,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":923,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"whoisjunhong"},"content":"2. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"lzf834":190,"Fenway17":244,"whoisjunhong":14,"-":335,"e0544333":53,"louisdavinlie":93}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"**Ultimate DivocTracker _(UDT)_** is a desktop app for managing COVID-19 contacts in school administration,","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"optimized for use via interacting with the application through easy-to-use commands on a user-centric interface.","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"Ultimate Divoc Tracker can get your contact-tracing tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"School administrators _(like teachers)_ in charge of managing COVID-19 can use UDT to easily track COVID-19 cases amongst the student population with ease and concentrate on what matters most,","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"the education of the students.","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"Through this user guide, you will learn how to use UDT effectively and efficiently, to manage COVID-19 cases in your schools.","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"Features below are accompanied by instructions, figures and examples to help you understand how to use them.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"A glossary is included at the end to clarify any technical or vague terms used.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"# Content Page","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"- [About UDT](#about-udt)","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"- [Features](#features)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"  - [Add a student](#add-a-student-add): `add`","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"  - [List all students](#list-all-students-list): `list`","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"  - [Find student by name](#find-student-by-name-find): `find`","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"  - [Find student by status](#find-student-by-status-findstatus):  `findstatus`","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"  - [Find student by class](#find-student-by-class-findclasscode): `findclasscode`","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"  - [Find student by activity](#find-student-by-activity-findactivity): `findactivity`","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"  - [Edit studentâ€™s personal details](#edit-student-details-edit): `edit`","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"  - [Delete a student](#delete-a-student-delete): `delete`","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"  - [Right-Click Help Menu](#right-click-help-menu)","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    - [Undo/Redo](#undoredo)","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"    - [Cut/Copy/Paste](#cutcopypaste)","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    - [Delete](#delete)","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    - [Select All](#select-all)","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"  - [Viewing help window](#viewing-the-help-window-help): `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"  - [Clearing the data](#clearing-the-data-clear): `clear`","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"  - [Exit the application](#exit-the-application-exit): `exit`","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"- [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"- [Frequently Asked Questions](#faq)","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"----------------","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"# Quick start","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"1. Ensure you have **Java 11** or above installed on your Computer.","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"    - You can download **Java 11** from [this link](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    - To check which version of Java you have installed:","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"    1. Type \"Command Prompt\" into the search bar next to your Start menu, and click on it when it appears in the search results.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"    2. Type \"java -version\" into the Command Prompt, then press Enter on your keyboard.","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"2. Download the latest **udt.jar** from [our GitHub repository](https://github.com/AY2122S2-CS2103T-T12-1/tp/releases).","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"3. Copy the file to the folder you want to use as the home folder for your Ultimate DivocTracker application.","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"    - Alternatively, running the file via command line can also start the app. (In the event double-click does not work)","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"    1. Navigate to the folder containing the **udt.jar** file.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"    2. Type \"cmd\" into the navigation bar in Windows Explorer, and press Enter to launch Command Prompt in that folder location.","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"    3. Type \"java -jar udt.jar\" to launch UDT from the Command Prompt.","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"5. Refer to the Features below for details of each command.","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"Fenway17"},"content":"\u003e :information_source: **Installation notes:**","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Fenway17"},"content":"\u003e - Application save data will be stored in the same folder containing the **ultimatedivoctracker.jar** application.","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"\u003e - Currently officially supported for **Windows**, **Mac** and **Linux** platforms.","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"## About UDT","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"Before we get into the details of what UDT can do, let\u0027s first bring you through what the application will look like.","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"|![UDTGUI](images/UdtGuiWithLabels.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"|*Figure 1 - GUI*|","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"As seen in Figure 1 above, the application contains 3 main segments.","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"Firstly, the Command Line (area to input commands) is at the top of the application and can be easily seen by the blinking cursor/insertion point.","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"Secondly, the box beneath the Command Line is where the application will produce any text outputs or errors if the command provided requires so.","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"Lastly, each information card contains the following details of the student and are presented in order:","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"1. Name","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"2. Activity/Activities","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"3. Phone Number","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"4. Address","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"5. Email Address","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"6. Class","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"7. COVID-19 Status","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"|![Information Card](images/user-guide/infocardwithlabel.png)|","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"|*Figure 2 - Information Card*|","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"With UDT, you can update and track COVID-19 Cases in your school, keep track of Close-Contacts, to perform timely updates to parents and Next-of-Kin.","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"Filter through the endless list of students with a simple command to extract details on the cases by class, or by activities (CCAs etc.).","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Fenway17"},"content":"### Graphical User Interface","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"Fenway17"},"content":"Graphical User Interface (GUI) has a **locked aspect ratio** to prevent the GUI elements from producing any unintended cosmetic problems","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"Fenway17"},"content":"- This also applies to maximising of application to full screen","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"Fenway17"},"content":"----------------","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"Fenway17"},"content":"# Features","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"Below are a set of commands that can be used in the **_UDT_**. Their formats and examples are provided along with each feature.","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"Fenway17"},"content":"\u003e :information_source: **Formatting notes:**","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"Fenway17"},"content":"\u003e - Words in `UPPER_CASE` are the user inputs to be supplied.","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"\u003e - Items in square brackets `[]` are optional.","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"Fenway17"},"content":"## Add a student: `add`","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"Fenway17"},"content":"Adds a student to the tracking list","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"Fenway17"},"content":"- Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESSâ€‹ cc/CLASS s/STATUS [act/ACTIVITY] [act/MORE ACTIVITIES]`","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"  - `NAME` takes in alphabetical characters and have a character limit of 50","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"  - `ADDRESS` takes in any characters and have a character limit of 70","lastModifiedDate":"2022-04-05"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"  - `ACTIVITY` takes in alphanumeric text and have a character limit of 50","lastModifiedDate":"2022-04-05"},{"lineNumber":123,"author":{"gitId":"Fenway17"},"content":"  - `CLASS` takes in a number and alphabet pair","lastModifiedDate":"2022-04-02"},{"lineNumber":124,"author":{"gitId":"Fenway17"},"content":"    - Eg. `4A`","lastModifiedDate":"2022-04-02"},{"lineNumber":125,"author":{"gitId":"Fenway17"},"content":"  - `EMAIL` follows the standard email formatting","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"    - Accepts input such as alphanumeric inputs, \"-\", \"_\", and \"+\"","lastModifiedDate":"2022-04-05"},{"lineNumber":127,"author":{"gitId":"Fenway17"},"content":"    - Eg. `johntan@example.com`","lastModifiedDate":"2022-04-02"},{"lineNumber":128,"author":{"gitId":"Fenway17"},"content":"  - `PHONE_NUMBER` takes a sequence of numbers","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"    - Requires at least 3 numbers up to a maximum of 15 numbers","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"lzf834"},"content":"  - `STATUS` takes either of these texts `Positive`, `Negative`, `Close-Contact`","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"    - `STATUS` is case-sensitive and should strictly follow the texts stated above","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"Fenway17"},"content":"- Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"lzf834"},"content":"  - `add n/John Doe p/98765432 e/johnd@example.com a/John Street, Block 123 #01-01 cc/5A s/Negative`","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"whoisjunhong"},"content":"  - `add n/Candice N Utz p/98765432 e/candicenuts@example.com a/123, Sunrise Road, #01-25 s/Negative cc/4A act/Basketball act/Dance`","lastModifiedDate":"2022-04-10"},{"lineNumber":135,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":136,"author":{"gitId":"whoisjunhong"},"content":"|![add command](images/user-guide/add.png)|","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"whoisjunhong"},"content":"|:--:|","lastModifiedDate":"2022-04-10"},{"lineNumber":138,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 3 - `add` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":139,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":141,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tips:**","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"\u003e - Multiple activity tags can be added to a single student by using multiple `act/` prefixes","lastModifiedDate":"2022-04-02"},{"lineNumber":144,"author":{"gitId":"lzf834"},"content":"\u003e - Eg. `act/choir act/dance`","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"Fenway17"},"content":"\u003e - A student can also have no activity tags","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"Fenway17"},"content":"\u003e - User inputs can be in any order","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":151,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"Fenway17"},"content":"\u003e :information_source: **Note:** Capitalization of text will be reflected in the User Interface","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"Fenway17"},"content":"## List all students: `list`","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"lzf834"},"content":"Shows a list of all students in the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"lzf834"},"content":"- Format: `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":159,"author":{"gitId":"Fenway17"},"content":"  - Any user input after `list` is ignored","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"Fenway17"},"content":"  - `list 12345 john` is the same as `list`","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tip:** For a filtered list, use the __*find*__ commands","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"lzf834"},"content":"|![list command](images/user-guide/list.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 4 - `list` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"Fenway17"},"content":"## Find student by name: `find`","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"lzf834"},"content":"Find an existing student in the application by their name","lastModifiedDate":"2022-02-21"},{"lineNumber":174,"author":{"gitId":"lzf834"},"content":"- Format: `find NAME`","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"lzf834"},"content":"  - Returns a list of students with the specified `NAME`","lastModifiedDate":"2022-02-21"},{"lineNumber":176,"author":{"gitId":"Fenway17"},"content":"    - If no one with the specified `NAME` is found, an empty list will be shown","lastModifiedDate":"2022-04-04"},{"lineNumber":177,"author":{"gitId":"lzf834"},"content":"  - `NAME` is case-insensitive","lastModifiedDate":"2022-02-21"},{"lineNumber":178,"author":{"gitId":"lzf834"},"content":"  - Order of words in `NAME` is irrelevant","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"lzf834"},"content":"    - `find yeoh alex` can find student _\"Alex Yeoh\"_","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"Fenway17"},"content":"  - Searching for name returns a list of names contains the provided name","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"Fenway17"},"content":"    - `find john` can find students _\"John Tan\"_ and _\"John Lee\"_","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"lzf834"},"content":"- Example:","lastModifiedDate":"2022-02-21"},{"lineNumber":183,"author":{"gitId":"Fenway17"},"content":"  - `find bernice` will find student _\"Bernice Yu\"_","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":185,"author":{"gitId":"e0544333"},"content":"\u003e :bulb: **Tip:** find multiple students at the same time by typing their names in the same command","lastModifiedDate":"2022-04-05"},{"lineNumber":186,"author":{"gitId":"Fenway17"},"content":"\u003e - Eg. `find alex bernice` will find students _\"Alex Yeoh\"_ and _\"Bernice Yu\"_","lastModifiedDate":"2022-04-02"},{"lineNumber":187,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":188,"author":{"gitId":"lzf834"},"content":"|![find command](images/user-guide/find.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 5 - `find` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":191,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"Fenway17"},"content":"## Find student by status: `findstatus`","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"lzf834"},"content":"Find an existing student in the application by their Covid-19 Status","lastModifiedDate":"2022-02-21"},{"lineNumber":194,"author":{"gitId":"lzf834"},"content":"- Format: `findstatus STATUS`","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"lzf834"},"content":"  - Returns a list of students with the specified `STATUS`","lastModifiedDate":"2022-02-21"},{"lineNumber":196,"author":{"gitId":"lzf834"},"content":"  - `STATUS` is either `positive`, `negative` or `close-contact`","lastModifiedDate":"2022-04-02"},{"lineNumber":197,"author":{"gitId":"lzf834"},"content":"  - `STATUS` is case-insensitive","lastModifiedDate":"2022-02-21"},{"lineNumber":198,"author":{"gitId":"Fenway17"},"content":"- Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"Fenway17"},"content":"  - `findstatus positive` finds all students that are labelled COVID positive","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"Fenway17"},"content":"  - `findstatus negative` finds all students that are labelled COVID negative","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":202,"author":{"gitId":"lzf834"},"content":"|![find status command](images/user-guide/findstatus.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 6 - `findstatus` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":205,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"lzf834"},"content":"## Find student by class: `findclasscode`","lastModifiedDate":"2022-03-09"},{"lineNumber":207,"author":{"gitId":"lzf834"},"content":"Finds an existing student in the application by their class","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"lzf834"},"content":"- Format: `findclasscode CLASS`","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"Fenway17"},"content":"  - Returns a list of students with the specified `CLASS`","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"e0544333"},"content":"  - `CLASS` is case-insensitive","lastModifiedDate":"2022-02-21"},{"lineNumber":211,"author":{"gitId":"e0544333"},"content":"- Example:","lastModifiedDate":"2022-02-21"},{"lineNumber":212,"author":{"gitId":"Fenway17"},"content":"  - `findclasscode 4A` finds all students in the class 4A","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"lzf834"},"content":"|![find classcode command](images/user-guide/findclasscode.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 7 - `findclasscode` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":217,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"Fenway17"},"content":"## Find student by activity: `findactivity`","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"lzf834"},"content":"Finds an existing student in the application by the activities they are participating in","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"- Format: `findactivity ACTIVITIY [MORE ACTIVITIES]`","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"Fenway17"},"content":"  - Returns a list of students with the specified `ACTIVITY`","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"lzf834"},"content":"    - Matches based on students that have specified `ACTIVITY` in their list of `ACTIVITIES`","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"lzf834"},"content":"  - If more than 1 activity is specified, command returns a list of student that participated in **ANY** of the activities specified","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"lzf834"},"content":"  - `ACTIVITY` is case-insensitive","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"lzf834"},"content":"- Example:","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"Fenway17"},"content":"  - `findactivity badminton` finds all students that have the activity _\"Badminton\"_","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"lzf834"},"content":"  - `findactivity badminton choir` finds all students that have the activity _\"Badminton\"_, _\"choir\"_ or **both**","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"lzf834"},"content":"|![find activity command](images/user-guide/findactivity.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 8 - `findactivity` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":232,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"Fenway17"},"content":"## Edit student details: `edit`","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"Fenway17"},"content":"Edits an existing student\u0027s details in the list Index provided and the parts that you want to edit","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"lzf834"},"content":"- Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [cc/CLASS] [s/STATUS] [act/ACTIVITY] [act/MORE ACTIVITIES]`","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"Fenway17"},"content":"  - Edits the student at the specified `INDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"Fenway17"},"content":"  - `INDEX` denotes the list index of the student in the displayed list","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"Fenway17"},"content":"  - `INDEX` must be a _positive integer (1, 2, 3...)_","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"Fenway17"},"content":"  - Only listed fields will be changed","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"lzf834"},"content":"- Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"Fenway17"},"content":"  - `edit 1 s/Positive` edits 1st student to be _COVID-19 Positive_","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"Fenway17"},"content":"  - `edit 5 p/98641865 e/maryjane@yahoo.com` edits 5th student to a new phone number and email address","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":245,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tips:**","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"lzf834"},"content":"\u003e - Filter the student list via __*find*__ commands to make finding the index easier","lastModifiedDate":"2022-04-02"},{"lineNumber":248,"author":{"gitId":"lzf834"},"content":"\u003e - Omitting parts of the student details from the command will leave them unedited","lastModifiedDate":"2022-04-02"},{"lineNumber":249,"author":{"gitId":"lzf834"},"content":"\u003e - To clear a student\u0027s activities use `edit INDEX act/`","lastModifiedDate":"2022-04-02"},{"lineNumber":250,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":251,"author":{"gitId":"Fenway17"},"content":"\u003e :information_source: **Notes:**","lastModifiedDate":"2022-04-02"},{"lineNumber":252,"author":{"gitId":"Fenway17"},"content":"\u003e - Capitalization of text will be reflected in the User Interface","lastModifiedDate":"2022-04-02"},{"lineNumber":253,"author":{"gitId":"Fenway17"},"content":"\u003e - Editing `Activity` of a student will **replace** all activities with the newly added ones","lastModifiedDate":"2022-04-02"},{"lineNumber":254,"author":{"gitId":"Fenway17"},"content":"\u003e - Eg. `edit 1 act/tennis` will replace the `Activity` of the 1st student in the list with _\"tennis\"_","lastModifiedDate":"2022-04-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"lzf834"},"content":"|![edit command](images/user-guide/edit.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 9 - `edit` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"Fenway17"},"content":"## Delete a student: `delete`","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"lzf834"},"content":"Deletes the specified person from the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"lzf834"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"Fenway17"},"content":"  - Deletes the student at the specified `INDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"Fenway17"},"content":"  - `INDEX` denotes the list index of the student in the displayed list","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"Fenway17"},"content":"  - `INDEX` must be a _positive integer (1, 2, 3...)_","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"e0544333"},"content":"- Examples:","lastModifiedDate":"2022-02-21"},{"lineNumber":269,"author":{"gitId":"Fenway17"},"content":"  - `list` followed by `delete 2` deletes the 2nd person in the student list","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"Fenway17"},"content":"  - `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":274,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tip:** filter the student list via __*find*__ commands to make finding the index easier","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":276,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"lzf834"},"content":"|![delete command](images/user-guide/delete.png)|","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 10 - `delete` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":282,"author":{"gitId":"Fenway17"},"content":"### Automation of `Status`","lastModifiedDate":"2022-04-06"},{"lineNumber":283,"author":{"gitId":"lzf834"},"content":"`Status` denotes the COVID status of an individual, and can take either `Positive`, `Negative` or `Close-contact` states.","lastModifiedDate":"2022-04-05"},{"lineNumber":284,"author":{"gitId":"lzf834"},"content":"- UDT will **automatically** label individuals as `Close-contact` from `Negative` if they are in the same class or activity as another person who is labelled `Positive`","lastModifiedDate":"2022-04-05"},{"lineNumber":285,"author":{"gitId":"lzf834"},"content":"- UDT will also **automatically** label individuals as `Negative` from `Close-contact` if they are not close-contacts to any individuals labelled `Positive` anymore.","lastModifiedDate":"2022-04-05"},{"lineNumber":286,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":287,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":289,"author":{"gitId":"lzf834"},"content":"\u003e :information_source: **Note:**  UDT tracks COVID statuses of those listed in the tracker only, and does not account for external cases.","lastModifiedDate":"2022-04-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":293,"author":{"gitId":"Fenway17"},"content":"#### Limitations of automation","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"louisdavinlie"},"content":"- UDT may not automatically update students\u0027 `Status` if complex edits are executed. e.g. Changing a COVID-19 **Positive** student\u0027s `ClassCode` or","lastModifiedDate":"2022-04-07"},{"lineNumber":295,"author":{"gitId":"Fenway17"},"content":"  `Activity` will not effectively update their previous **Close-Contact** list. Instead, they would remain **Close-Contact** until someone else in the class","lastModifiedDate":"2022-04-06"},{"lineNumber":296,"author":{"gitId":"Fenway17"},"content":"  changes their status from **Positive** to **Negative**. A remedy for this is to re-enter all student entries or use the **import function** that will be released","lastModifiedDate":"2022-04-06"},{"lineNumber":297,"author":{"gitId":"Fenway17"},"content":"  in the *next iteration (v1.5)*.","lastModifiedDate":"2022-04-06"},{"lineNumber":298,"author":{"gitId":"louisdavinlie"},"content":"- If student A recovers from COVID-19 (`Status` is changed from `Positive` to `Negative`), A\u0027s status will be `Negative` even though there are still `Positive` cases","lastModifiedDate":"2022-04-07"},{"lineNumber":299,"author":{"gitId":"louisdavinlie"},"content":"  related to A. However, if a student related to A by `ClassCode` or `Activity` becomes COVID-19 positive after A recovers, A\u0027s status will be listed as `Close-Contact`","lastModifiedDate":"2022-04-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":301,"author":{"gitId":"lzf834"},"content":"## Right-Click Help Menu","lastModifiedDate":"2022-04-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":303,"author":{"gitId":"lzf834"},"content":"|![RightClick](images/user-guide/rightclick.PNG)|","lastModifiedDate":"2022-04-11"},{"lineNumber":304,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-04-06"},{"lineNumber":305,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 11 - Right-Click Help Menu*|","lastModifiedDate":"2022-04-10"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":307,"author":{"gitId":"lzf834"},"content":"The following few features can be achieved through right-clicking the Command Line.","lastModifiedDate":"2022-04-06"},{"lineNumber":308,"author":{"gitId":"lzf834"},"content":"Some features have keyboard shortcuts as well, so do read on to find out more.","lastModifiedDate":"2022-04-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":310,"author":{"gitId":"lzf834"},"content":"### Undo/Redo:","lastModifiedDate":"2022-04-06"},{"lineNumber":311,"author":{"gitId":"lzf834"},"content":"Undo or redo what you have been typing in the Command Line **BEFORE** it has been executed/entered,","lastModifiedDate":"2022-04-06"},{"lineNumber":312,"author":{"gitId":"lzf834"},"content":"allowing you to make any edits as required.","lastModifiedDate":"2022-04-06"},{"lineNumber":313,"author":{"gitId":"whoisjunhong"},"content":"Refer to **_Figure 11_** above to see the menu.","lastModifiedDate":"2022-04-10"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":315,"author":{"gitId":"lzf834"},"content":"Using a Mouse:","lastModifiedDate":"2022-04-06"},{"lineNumber":316,"author":{"gitId":"lzf834"},"content":"- Right-click on the Command Line to open the menu containing the `undo` and `redo` buttons","lastModifiedDate":"2022-04-06"},{"lineNumber":317,"author":{"gitId":"lzf834"},"content":"- Click on the respective buttons to undo/redo what you have typed","lastModifiedDate":"2022-04-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":319,"author":{"gitId":"lzf834"},"content":"**OR**","lastModifiedDate":"2022-04-06"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":321,"author":{"gitId":"lzf834"},"content":"Using a Keyboard:","lastModifiedDate":"2022-04-06"},{"lineNumber":322,"author":{"gitId":"lzf834"},"content":"- `ctrl+z` to undo","lastModifiedDate":"2022-04-06"},{"lineNumber":323,"author":{"gitId":"lzf834"},"content":"- `ctrl+y` to redo","lastModifiedDate":"2022-04-11"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":325,"author":{"gitId":"lzf834"},"content":"\u003e :information_source: **Note:**  Undo and redo can only be used on commands that have yet to be executed/entered (before hitting enter).","lastModifiedDate":"2022-04-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":327,"author":{"gitId":"lzf834"},"content":"### Cut/Copy/Paste:","lastModifiedDate":"2022-04-06"},{"lineNumber":328,"author":{"gitId":"lzf834"},"content":"`Cut` any text that has been highlighted.","lastModifiedDate":"2022-04-06"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":330,"author":{"gitId":"lzf834"},"content":"`Copy` any text that has been highlighted.","lastModifiedDate":"2022-04-06"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":332,"author":{"gitId":"lzf834"},"content":"`Paste` any text that is currently stored in your clipboard.","lastModifiedDate":"2022-04-06"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":334,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":336,"author":{"gitId":"lzf834"},"content":"\u003e :bulb: **Tips:** Keyboard Shortcuts","lastModifiedDate":"2022-04-06"},{"lineNumber":337,"author":{"gitId":"lzf834"},"content":"\u003e - `ctrl+x` to cut","lastModifiedDate":"2022-04-06"},{"lineNumber":338,"author":{"gitId":"lzf834"},"content":"\u003e - `ctrl+c` to copy","lastModifiedDate":"2022-04-06"},{"lineNumber":339,"author":{"gitId":"lzf834"},"content":"\u003e - `ctrl+v` to paste","lastModifiedDate":"2022-04-06"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":341,"author":{"gitId":"lzf834"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":343,"author":{"gitId":"lzf834"},"content":"### Delete:","lastModifiedDate":"2022-04-06"},{"lineNumber":344,"author":{"gitId":"lzf834"},"content":"Removes any text that has been highlighted.","lastModifiedDate":"2022-04-06"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":346,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":348,"author":{"gitId":"lzf834"},"content":"\u003e :bulb: **Tips:** Use the `Backspace` key or `del` key on your keyboard to perform the same command","lastModifiedDate":"2022-04-06"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":350,"author":{"gitId":"lzf834"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":352,"author":{"gitId":"lzf834"},"content":"### Select All:","lastModifiedDate":"2022-04-06"},{"lineNumber":353,"author":{"gitId":"lzf834"},"content":"Highlights all the text that is currently in the Command Box","lastModifiedDate":"2022-04-06"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":355,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":357,"author":{"gitId":"lzf834"},"content":"\u003e :bulb: **Tips:** Use this to highlight everything so that you can follow up with a `cut`, `copy` or `delete` command.","lastModifiedDate":"2022-04-06"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":359,"author":{"gitId":"lzf834"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"louisdavinlie"},"content":"## Viewing the help window: `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":362,"author":{"gitId":"louisdavinlie"},"content":"Displays a list of commands to use and a link to our user guide. A `Copy URL` button is provided to copy the link.","lastModifiedDate":"2022-04-07"},{"lineNumber":363,"author":{"gitId":"louisdavinlie"},"content":"- Format: `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":364,"author":{"gitId":"louisdavinlie"},"content":"  - Any user input after `help` is ignored","lastModifiedDate":"2022-04-07"},{"lineNumber":365,"author":{"gitId":"louisdavinlie"},"content":"  - `help 12345 john` is the same as `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":366,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":367,"author":{"gitId":"louisdavinlie"},"content":"|![help command](images/user-guide/help.png)|","lastModifiedDate":"2022-04-07"},{"lineNumber":368,"author":{"gitId":"lzf834"},"content":"|:--:|","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"whoisjunhong"},"content":"|*Figure 12 - `help` Command*|","lastModifiedDate":"2022-04-10"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"lzf834"},"content":"## Clearing the data: `clear`","lastModifiedDate":"2022-04-02"},{"lineNumber":372,"author":{"gitId":"Fenway17"},"content":"Clears and deletes all the data within the application","lastModifiedDate":"2022-04-02"},{"lineNumber":373,"author":{"gitId":"lzf834"},"content":"- Format: `clear`","lastModifiedDate":"2022-04-02"},{"lineNumber":374,"author":{"gitId":"Fenway17"},"content":"  - Any user input after `clear` is ignored","lastModifiedDate":"2022-04-02"},{"lineNumber":375,"author":{"gitId":"Fenway17"},"content":"    - `clear 12345 john` is the same as `clear`","lastModifiedDate":"2022-04-02"},{"lineNumber":376,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":377,"author":{"gitId":"Fenway17"},"content":"\u003e :warning: **Warning:** This deletes all data for the application irreversibly. Ensure you save a copy of the data if you intend to restore it at a later date.","lastModifiedDate":"2022-04-02"},{"lineNumber":378,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":379,"author":{"gitId":"Fenway17"},"content":"## Exit the application: `exit`","lastModifiedDate":"2022-03-25"},{"lineNumber":380,"author":{"gitId":"whoisjunhong"},"content":"Exits the program.","lastModifiedDate":"2022-02-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-02-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":383,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":384,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":385,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tip:** You can also close the application directly","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"louisdavinlie"},"content":"## Saving the data","lastModifiedDate":"2022-02-21"},{"lineNumber":390,"author":{"gitId":"Fenway17"},"content":"UDT data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"Fenway17"},"content":"- Data is saved to the same location as the application executable","lastModifiedDate":"2022-03-25"},{"lineNumber":392,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":393,"author":{"gitId":"louisdavinlie"},"content":"## Editing the data file","lastModifiedDate":"2022-02-21"},{"lineNumber":394,"author":{"gitId":"Fenway17"},"content":"UDT data are saved as a JSON file `[JAR file location]/data/addressbook.json`.","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"Fenway17"},"content":"- Data is saved to the same location as the application executable","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":397,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":398,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":399,"author":{"gitId":"Fenway17"},"content":"\u003e :bulb: **Tip:** Advanced users are welcome to update data directly by editing that data file","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":401,"author":{"gitId":"Fenway17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"lzf834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\" role\u003d\"alert\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"Fenway17"},"content":"\u003e :warning: **Warning:** Editing the data file erroneously may result in the entire data file becoming unreadable by UDT","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":409,"author":{"gitId":"Fenway17"},"content":"----------------","lastModifiedDate":"2022-03-25"},{"lineNumber":410,"author":{"gitId":"Fenway17"},"content":"# FAQ","lastModifiedDate":"2022-03-25"},{"lineNumber":411,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":412,"author":{"gitId":"Fenway17"},"content":"Q: How do I transfer my data to another Computer?","lastModifiedDate":"2022-03-25"},{"lineNumber":413,"author":{"gitId":"lzf834"},"content":"A: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous _**UDT**_.","lastModifiedDate":"2022-03-25"},{"lineNumber":414,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":415,"author":{"gitId":"Fenway17"},"content":"Q: I edited my data file directly and now the application does not work properly!","lastModifiedDate":"2022-03-25"},{"lineNumber":416,"author":{"gitId":"lzf834"},"content":"A: Delete the data folder to allow _**UDT**_ to create a new data file. Your previous data has unfortunately been lost to time.","lastModifiedDate":"2022-03-25"},{"lineNumber":417,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"Fenway17"},"content":"Q: Manual insertion of students takes time, is there a faster way to do it?","lastModifiedDate":"2022-03-25"},{"lineNumber":419,"author":{"gitId":"lzf834"},"content":"A: We are working on a feature to allow importing of **.csv** files into _**UDT**_!","lastModifiedDate":"2022-03-25"},{"lineNumber":420,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":421,"author":{"gitId":"e0544333"},"content":"Q: What if I key in the wrong command?","lastModifiedDate":"2022-03-26"},{"lineNumber":422,"author":{"gitId":"e0544333"},"content":"A: An error message colored in red will appear stating that you have typed an unknown command.","lastModifiedDate":"2022-03-26"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":424,"author":{"gitId":"e0544333"},"content":"![invalid command](images/user-guide/invalidcommand.png)","lastModifiedDate":"2022-03-26"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":427,"author":{"gitId":"Fenway17"},"content":"----------------","lastModifiedDate":"2022-03-25"},{"lineNumber":428,"author":{"gitId":"Fenway17"},"content":"## Command Summary","lastModifiedDate":"2022-03-25"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":430,"author":{"gitId":"Fenway17"},"content":"| Action       | Format           | Example        |","lastModifiedDate":"2022-03-25"},{"lineNumber":431,"author":{"gitId":"Fenway17"},"content":"|:------------:|:----------------:|:--------------:|","lastModifiedDate":"2022-04-10"},{"lineNumber":432,"author":{"gitId":"lzf834"},"content":"| [Add a student](#add-a-student-add)                                | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS cc/CLASS s/STATUS [act/ACTIVITIES] [act/MORE ACTIVITIES]`                    | `add n/John Doe p/98765432 e/johnd@example.com a/John Street, Block 123, #01-01 cc/5A s/Negative act/badminton` |","lastModifiedDate":"2022-03-29"},{"lineNumber":433,"author":{"gitId":"Fenway17"},"content":"| [List all students](#list-all-students-list)                       | `list`                                                                                                                    | `list`                                                                                                          |","lastModifiedDate":"2022-03-25"},{"lineNumber":434,"author":{"gitId":"Fenway17"},"content":"| [Find student by name](#find-student-by-name-find)                 | `find NAME [MORE_NAME]`                                                                                                   | `find James Jake`                                                                                               |","lastModifiedDate":"2022-03-25"},{"lineNumber":435,"author":{"gitId":"Fenway17"},"content":"| [Find student by status](#find-student-by-status-findstatus)       | `findstatus STATUS`                                                                                                       | `findstatus positive`                                                                                           |","lastModifiedDate":"2022-03-25"},{"lineNumber":436,"author":{"gitId":"Fenway17"},"content":"| [Find student by class](#find-student-by-class-findclasscode)      | `findclasscode CLASS`                                                                                                     | `findclasscode 4A`                                                                                              |","lastModifiedDate":"2022-03-25"},{"lineNumber":437,"author":{"gitId":"lzf834"},"content":"| [Find student by activity](#find-student-by-activity-findactivity) | `findactivity ACTIVITY [MORE ACTIVITIES]`                                                                                 | `findactivity choir`                                                                                            |","lastModifiedDate":"2022-03-31"},{"lineNumber":438,"author":{"gitId":"lzf834"},"content":"| [Edit student details](#edit-student-details-edit)                 | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [cc/CLASS] [s/STATUS] [act/ACTIVITIES] [act/MORE ACTIVITIES]` | `edit 2 n/James Lee e/jameslee@example.com`                                                                     |","lastModifiedDate":"2022-03-29"},{"lineNumber":439,"author":{"gitId":"Fenway17"},"content":"| [Delete a student](#delete-a-student-delete)                       | `delete INDEX`                                                                                                            | `delete 3`                                                                                                      |","lastModifiedDate":"2022-03-25"},{"lineNumber":440,"author":{"gitId":"lzf834"},"content":"| [Clear](Clear)                                                     | `clear`                                                                                                                   | `clear`                                                                                                         |","lastModifiedDate":"2022-04-02"},{"lineNumber":441,"author":{"gitId":"Fenway17"},"content":"| [Exit the application](#exit-the-application-exit)                 | `exit`                                                                                                                    | `exit`                                                                                                          |","lastModifiedDate":"2022-03-25"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":443,"author":{"gitId":"Fenway17"},"content":"----------------","lastModifiedDate":"2022-03-25"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":445,"author":{"gitId":"lzf834"},"content":"## Glossary","lastModifiedDate":"2022-03-29"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":447,"author":{"gitId":"lzf834"},"content":"| Term      | Meaning                                 |","lastModifiedDate":"2022-03-29"},{"lineNumber":448,"author":{"gitId":"lzf834"},"content":"|:---------:|:---------------------------------------:|","lastModifiedDate":"2022-04-10"},{"lineNumber":449,"author":{"gitId":"lzf834"},"content":"| Parameter | Input supplied after the command        |","lastModifiedDate":"2022-03-29"},{"lineNumber":450,"author":{"gitId":"lzf834"},"content":"| JSON      | A file type that UDT uses to store data |","lastModifiedDate":"2022-03-29"},{"lineNumber":451,"author":{"gitId":"lzf834"},"content":"| csv       | A common file type used to store data   |","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"lzf834":170,"Fenway17":152,"whoisjunhong":18,"-":82,"e0544333":12,"louisdavinlie":17}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"lzf834"},"content":"    content: \"Ultimate Divoc Tracker\";","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"lzf834":1,"-":294}},{"path":"docs/diagrams/FindActivitySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"participant \":FindActivityCommandParser\" as FindActivityCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"participant \"p:ActivityContainsKeywordsPredicate\" as ActivityContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"participant \"f:FindActivityCommand\" as FindActivityCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"[-\u003e LogicManager : execute(\"findactivity Basketball Dance\")","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"activate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findactivity Basketball Dance\")","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"create FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"activate FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindActivityCommandParser : parse(\"Basketball Dance\")","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"activate FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"create ActivityContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommandParser -\u003e ActivityContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"activate ActivityContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"ActivityContainsKeywordPredicate --\u003e FindActivityCommandParser : p","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"deactivate ActivityContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"create FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommandParser -\u003e FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"activate FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommand --\u003e FindActivityCommandParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"destroy FindActivityCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e FindActivityCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"activate FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"Model --\u003e FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"CommandResult --\u003e FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"FindActivityCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindActivityCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"louisdavinlie":77}},{"path":"docs/diagrams/FindClassCodeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"participant \":FindClassCodeCommandParser\" as FindClassCodeCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"participant \"p:ClassCodeContainsKeywordsPredicate\" as ClassCodeContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"participant \"f:FindClassCodeCommand\" as FindClassCodeCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"[-\u003e LogicManager : execute(\"findclasscode 3A 3B\")","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"activate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findclasscode 3A 3B\")","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"create FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"activate FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindClassCodeCommandParser : parse(\"3A 3B\")","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"activate FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"create ClassCodeContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommandParser -\u003e ClassCodeContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"activate ClassCodeContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"ClassCodeContainsKeywordPredicate --\u003e FindClassCodeCommandParser : p","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"deactivate ClassCodeContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"create FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommandParser -\u003e FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"activate FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommand --\u003e FindClassCodeCommandParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"destroy FindClassCodeCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e FindClassCodeCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"activate FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"Model --\u003e FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"CommandResult --\u003e FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"FindClassCodeCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindClassCodeCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"louisdavinlie":77}},{"path":"docs/diagrams/FindStatusSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"participant \":FindStatusCommandParser\" as FindStatusCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"participant \"p:StatusContainsKeywordsPredicate\" as StatusContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"participant \"f:FindStatusCommand\" as FindStatusCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"[-\u003e LogicManager : execute(\"findstatus Positive\")","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"activate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findstatus Positive\")","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"create FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"activate FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser -\u003e FindStatusCommandParser : parse(\"Positive\")","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"activate FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"create StatusContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommandParser -\u003e StatusContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"activate StatusContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"StatusContainsKeywordPredicate --\u003e FindStatusCommandParser : p","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"deactivate StatusContainsKeywordPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"create FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommandParser -\u003e FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"activate FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommand --\u003e FindStatusCommandParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"destroy FindStatusCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"LogicManager -\u003e FindStatusCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"activate FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"Model --\u003e FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"CommandResult --\u003e FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"FindStatusCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"deactivate FindStatusCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"louisdavinlie":77}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"title: Ultimate Divoc Tracker (UDT)","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-T12-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T12-1/tp/branch/master/graph/badge.svg?token\u003dJ12HX0WRHI)](https://codecov.io/gh/AY2122S2-CS2103T-T12-1/tp)","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"**Ultimate DivocTracker _(UDT)_** is a desktop app for managing COVID-19 contacts in school administration,","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"optimized for use via interacting with the application through easy-to-use commands on a user-centric interface.","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"Ultimate Divoc Tracker can get your contact-tracing tasks done faster than traditional GUI apps. ","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"* If you are interested in using UDT, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"* If you are interested about developing UDT, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lzf834":9,"-":13}},{"path":"docs/team/e0544333.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"e0544333"},"content":"title: Joshua\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"### Project: Ultimate Divoc Tracker","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"e0544333"},"content":"Ultimate Divoc Tracker is a desktop app for managing COVID-19 contacts in school admin, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Ultimate DivocTracker can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"e0544333"},"content":"* **New Feature**: Added the ability to perform Batch student Status update [\\#62](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/62)","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"e0544333"},"content":"  * What it does: allows administrators to quickly update students who was in close-contact with a COVID-19 positive student by class/co-curricular activity.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"e0544333"},"content":"  * Justification: this feature improves the product significantly because it removes the need for repetitive manual change of statuses.","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"  * Highlights: This enhancement leverages on the editCommand that was implemented by the AddressBook. Moreover, it was a challenge to add a layer to the edit process.","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"e0544333"},"content":"  * Credits: [whoisjunhong](https://github.com/whoisjunhong), [louisdavinlie](https://github.com/louisdavinlie)","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"e0544333"},"content":"* **Unit Test**: Fixed code-breaking test cases after introducing new attributes to `Person` [\\#62](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/62)","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"e0544333"},"content":"  * What it does: allows test cases to pass with the addition of new Class attributes, and cater to a wider spectrum of edge cases.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"e0544333"},"content":"  * Justification: this allows more test cases to be generated for stress testing the product.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"e0544333"},"content":"  * Highlights: This amendment replies on various Class attributes from the Person class.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"e0544333"},"content":"  * Credits: [whoisjunhong](https://github.com/whoisjunhong), [louisdavinlie](https://github.com/louisdavinlie)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"e0544333"},"content":"* **New Attribute** Created `ClassCode` attribute","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"e0544333"},"content":"  * What it does: caters for an important element of contact tracing in schools, allowing administrators to categorize students by ClassCode.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"e0544333"},"content":"  * Justification: this attribute provides an additional layer of filtering for administrators.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"e0544333"},"content":"  * Credits: [whoisjunhong](https://github.com/whoisjunhong), [louisdavinlie](https://github.com/louisdavinlie)","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"e0544333"},"content":"  * Managed releases `v1.2.1` (1 release) on GitHub","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"e0544333"},"content":"  * Managed releases `v1.3` (1 release) on GitHub","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"e0544333"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"e0544333"},"content":"  * Tested Add and Delete commands to cater for the batch update feature [\\#122](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/122)","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"e0544333"},"content":"  * Assisted in setting character limits of `Name` and `Address` attribute [\\#180](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/180)","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"e0544333"},"content":"    * Refactored command syntax (e.g. find_by_status -\u003e findstatus) [#62](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/62)","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"e0544333"},"content":"    * Fixed multiple checkstyle errors","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"e0544333"},"content":"    * Fix grammatical issues after User Guide consultation","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"e0544333"},"content":"    * Added documentation for the features `find_student_by_classcode` and `delete_student` [\\#22](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/22)","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"e0544333"},"content":"    * Added question about invalid command in FAQ section","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"e0544333"},"content":"    * Added documentation for to-be-implemented features (e.g. CSV import) [\\#94](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/94)","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"e0544333"},"content":"    * Added non-functional requirements [\\#29](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/29)","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"e0544333"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"e0544333"},"content":"    * Test cases for find commands by [louisdavinlie](https://github.com/louisdavinlie) [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/175)","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"e0544333"},"content":"    * Abstraction of methods by [louisdavinlie](https://github.com/louisdavinlie) [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/174)","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"e0544333"},"content":"    * Fix of application\u0027s font by [whoisjunhong](https://github.com/whoisjunhong) [\\#173](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/173)","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"e0544333"},"content":"    * UG update after CS2101 consultation by [lzf834](https://github.com/lzf834) [\\#173]( https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/114)","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"e0544333"},"content":"  * Reported bugs and suggestions for other teams (examples: [1](https://github.com/AY2122S2-CS2103-W17-4/tp/issues/249), [2](https://github.com/AY2122S2-CS2103-W17-4/tp/issues/246), [3](https://github.com/AY2122S2-CS2103-W17-4/tp/issues/243))","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"e0544333"},"content":"  * Integrated a new Github plugin (CodeCov) to the team repo","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"e0544333"},"content":"* **Test Cases**:","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"e0544333"},"content":"  * Fix Test Cases for Add and Edit commands [\\#49](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/49)","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"-":19,"e0544333":42}},{"path":"docs/team/fenway17.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"e0544333"},"content":"title: Yong Rui\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"### Project: Ultimate Divoc Tracker","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative. This application is a variation of the above original project, tailored for school administrators to track COVID-19 cases amongst students in schools.","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"* **New Feature**: Status attribute for persons (Pull request [\\#32](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/32))","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"  * What it does: Gives each person in the list a status attribute denoting their COVID-19 status.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"  * Justification: Track COVID-19 status of each person","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"  * Highlights: Status can be `\"Positive\"`, `\"Negative\"` or `\"Close-Contact\"`","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"  * Credits: *{Collaborators: Yong Rui, Zi Foong}*","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"* **New Feature**: Command to find persons by Class Code (Pull request [\\#56](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/56))","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"  * What it does: Find a list of persons that match the Class Code given.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"  * Justification: Allows admins and users to find all persons in the same class","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"  * Highlights: Given Class Code can be part of the full Class Code","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"  * Credits: *{}*","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"* **New Feature**: Command to find persons by Activity (Pull request [\\#83](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/83))","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"  * What it does: Find a list of persons that match the Activity given.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"  * Justification: Allows admins and users to find all persons in the same activity groups.","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"  * Highlights: Can find specific Activity from multiple Activities tied to the same person.","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"  * Credits: *{Collaborators: Yong Rui, Zi Foong}*","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"  * Managed releases `--` - `--` (-- releases) on GitHub","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"  * Fixed multiple checkstyle errors (Pull request [\\#49](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/49))","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"  * Added JUnit tests for Finding persons by Class Code and its related classes (Pull request [\\#75](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/75))","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"  * Added JUnit tests for Finding persons by Activity and its related classes (Pull request [\\#86](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/86))","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"  * -- (Pull requests [\\#--](), [\\#--]())","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"    * Added glossary for user guide ([commit](https://github.com/AY2122S2-CS2103T-T12-1/tp/commit/54c68ab0ecae3cd1a5237a74df7cb7264c24b692))","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"    * Added quick start for user guide ([commit](https://github.com/AY2122S2-CS2103T-T12-1/tp/commit/54c68ab0ecae3cd1a5237a74df7cb7264c24b692))","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"    * Added documentation for the features `add` and `list` ([commit](https://github.com/AY2122S2-CS2103T-T12-1/tp/commit/54c68ab0ecae3cd1a5237a74df7cb7264c24b692))","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"      * Fixed formatting errors ([commit](https://github.com/AY2122S2-CS2103T-T12-1/tp/commit/9bb104d5c2c16abdd577221d100916e6f9f8edc1))","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"    * Added more introduction information [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"    * Added link to download application .jar file [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"    * Added installation notes [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"    * Added more information to certain commands\u0027 sections [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"    * Added tips and warnings to multiple sections [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"    * Added feature notes [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"    * Added links to multiple parts of the markdown [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"    * Updated and change user guide to have more information and be more user friendly to read [\\#109](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/109)","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"    * Updated user guide to resolve issues from Practical Exam Dry Run [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"      * Solves: #152, #150, #148, #147, #145, #141, #136, #135, #124","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"      * Added information about status and how it automatically changes [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"      * Updated find by name section to include tips to find multiple students at the same time [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"      * Added information about editing activities replacing the activities rather than adding [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"      * Added information in add student section about the restrictions of each input [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"      * Added information for clear command [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"      * Added warning for clear command [\\#166](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/166)","lastModifiedDate":"2022-04-02"},{"lineNumber":63,"author":{"gitId":"Fenway17"},"content":"    * Updated user guide to resolve issues from Practical Exam Dry Run [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"      * Solves: #159, #157, #143, #137, #128, #127","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"Fenway17"},"content":"      * Added information about GUI aspect ratio [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"Fenway17"},"content":"      * Added alternate ways to start the app from command line [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"Fenway17"},"content":"      * Added notes on UDT only tracking COVID within the app, not externally [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"Fenway17"},"content":"      * Added information on find command finding a person not listed inside the app [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"Fenway17"},"content":"      * Added information on limitations of automation of status changes by the app [\\#171](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/171)","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Fenway17"},"content":"    * Added use cases for developer guide [\\#27](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/27)","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"Fenway17"},"content":"    * Added skeleton for DG additions [\\#90](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/90)","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Fenway17"},"content":"    * Added information for Find By Class Code, Find By Activity [\\#96](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/96)","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Fenway17"},"content":"    * Updated design considerations for Find By Class Code, Find By Activity, and Find By Status [\\#96](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/96)","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Fenway17"},"content":"    * Updated implementation information for Status, Class Code, Activity and Find By Status [\\#96](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/96)","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Fenway17"},"content":"    * Added followed steps for Find By Class Code, Find By Activity, and Find By Status [\\#96](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/96)","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Fenway17"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#32](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/32) [\\#63](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/63) [\\#105](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/105) [\\#106](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/106) [\\#164](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/164) [\\#181](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/181)","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Fenway17"},"content":"  * Some parts of the -- feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Fenway17"},"content":"  * -- ([\\#--]())","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"Fenway17"},"content":"  * --","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"Fenway17":60,"-":25,"e0544333":1}},{"path":"docs/team/louisdavinlie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"e0544333"},"content":"title: Louis\u0027 Project Portfolio Page","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"### Project: Ultimate Divoc Tracker","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"Ultimate Divoc Tracker is a desktop app for managing COVID-19 contacts in school admin, optimized for use via a","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast,","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"Ultimate Divoc Tracker can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"School administrators _(like teachers)_ in charge of managing COVID-19 can use UDT to easily track COVID-19 cases","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"amongst the student population with ease and concentrate on what matters most, the education of the students.","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"* **New Feature**: `ClassCode` attribute for Person [\\#38](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/38)","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"  * What it does:","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    * Adds a `ClassCode` attribute for each person denoting their class number/code","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    * Displays the `ClassCode` attribute on the person\u0027s card in the user interface","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    * Stores the `ClassCode` attribute on a JSON file with the key as \"classCode\"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"  * Justification: This attribute provides a way for schools to track COVID-19 in each classroom denoted by `ClassCode`","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"  * Highlights: This enhancement is used in the batch update status feature.","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"  * Credits: *{Jun Hong, Joshua}*","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"* **New Feature**: Batch update status when a person recovers [\\#76](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/76)","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"  * What it does:","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    * When a person recovers (`Status` changes from `Positive` to `Negative`) and there is no person in the same","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"    `ClassCode` whose `Status` is `Positive`, every person with the same `ClassCode` as the recovered person will have","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"    their status changed from `Close-Contact` to `Negative`.","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    * The reverse (`Status` changes from `Negative` to `Positive`) is implemented by Joshua and Jun Hong.","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"  * Justification: Automate the tracking of COVID-19 in every `ClassCode`. If no more positive cases in a `ClassCode`,","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"  persons with `Close-Contact` status having the same `ClassCode` as the recovered person should change to `Negative`.","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"  * Highlights: This feature is called every time a person\u0027s `Status` is changed from `Positive` to `Negative`.","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"  It requires a check whether there are still positive cases in the `ClassCode` of the recovered person.","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"* **New Feature**: Batch update status based on the same activities [\\#112](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/112)","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"  * What it does: Considers those with the same `Activity` close contacts instead of only those with the same","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"  `ClassCode` in the batch update status feature.","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"    * When a person becomes COVID-19 positive, those in the same `ClassCode` or `Activity` will have their status","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"    updated to `Close-Contact` if they are `Negative`.","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"    * When a person recovers from COVID-19, those in the same `ClassCode` or `Activity` will have their status updated","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"    to `Negative` if they are `Close-Contact` and they are not related to any `Positive` person in the same `ClassCode`","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"    or `Activity` as them.","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"  * Justification: If a person has the same `Activity` as another person, they should be considered as close contacts.","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"  Hence, this should also be included in the batch update status feature as one should be labeled as `Close-Contact`","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"  if the other is `Positive`.","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"  * Highlights: One person can have multiple `Activity` so the implementation is not the same as the `ClassCode`","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"  only implementation since one person can only have one `ClassCode`.","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"* **JUnit Test**:","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"  * Added test methods for:","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"    * Batch update status feature [\\#71](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/71)","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"    * `Find` command [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/175)","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"    * `FindActivity` command [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/175)","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"    * `FindClassCode` command [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/175)","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"    * `FindStatus` command [\\#175](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/175)","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"  * Displayed `Activity` on persons\u0027 cards [\\#78](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/78)","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"  * Updated UI by adding different text colors according to `Status` [\\#103](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/103)","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"  * Applied abstraction to different parts of the code [\\#113](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/113) and [\\#174](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/174)","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"  * Added assertions to the code [\\#176](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/176)","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dlouisdavinlie\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"    * Added documentation for saving and editing the data file [\\#23](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/23)","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"    * Added command summary in user guide [\\#23](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/23)","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"    * Added viewing help window section (help command) [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"    * Added limitation on the automation of status [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"    * Added documentation for updated AddCommand and EditCommand following the addition of ClassCode, Status and Activity attributes [\\#98](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/98)","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"    * Added documentation for updated UI and Storage flow [\\#98](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/98)","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"    * Added proposed enhancements for UDT [\\#98](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/98)","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"    * Added a sequence diagram for findstatus command execution [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"    * Added a sequence diagram for findclasscode command execution [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"    * Added a sequence diagram for findactivity command execution [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"    * Updated the documentation for the implementation of batch update with respect to the incorporation of the `activity` attribute [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"    * Added and edited explanations for the role of batch update in AddCommand, DeleteCommand and EditCommand [\\#183](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/183)","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"    * Add command for finding students by their Covid-19 Status [\\#55](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/55)","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"    * Added command for finding students by their Class Code [\\#56](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/56)","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"    * Batch student status update [\\#62](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/62)","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"    * Move editStatus method to ModelManager [\\#179](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/179)","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"  * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"    * AY2122S2-CS2103T-T09-4:","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"      * Inaccurate command message in results window [\\#1](https://github.com/louisdavinlie/ped/issues/1)","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"      * Product does not show all items after series of steps [\\#2](https://github.com/louisdavinlie/ped/issues/2)","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"      * Able to set expiry date to past dates [\\#3](https://github.com/louisdavinlie/ped/issues/3)","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"      * Category is shown as required field in update product window [\\#4](https://github.com/louisdavinlie/ped/issues/4)","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"      * Name and category fields can contain only symbols [\\#5](https://github.com/louisdavinlie/ped/issues/5)","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"      * Invalid remind command [\\#6](https://github.com/louisdavinlie/ped/issues/6)","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"      * Find command not working [\\#7](https://github.com/louisdavinlie/ped/issues/7)","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"-":18,"e0544333":1,"louisdavinlie":85}},{"path":"docs/team/lzf834.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"layout: page","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"title: Zi Foong\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"### Project: Ultimate Divoc Tracker","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"**Ultimate DivocTracker _(UDT)_** is a desktop app for managing COVID-19 contacts in school administration, optimized for use via interacting with the application through easy-to-use commands on a user-centric interface.","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"Ultimate Divoc Tracker can get your contact-tracing tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"School administrators _(like teachers)_ in charge of managing COVID-19 can use UDT to easily track COVID-19 cases amongst the student population with ease and concentrate on what matters most, the education of the students.","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"* **New Feature**: Status attribute for persons: `Status` -- (Pull Request [\\#32](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/32))","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"  * What it does: Gives each person in the list a status attribute denoting their COVID-19 status.","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"  * Justification: Track COVID-19 status of each person","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"  * Highlights: `Status` can be `Positive`, `Negative` or `Close-Contact`","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"  * Credits: *{Collaborators: Yong Rui, Zi Foong}*","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"* **New Feature**: Find Students by their Covid-19 Status: `findstatus` -- (Pull Request [\\#55](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/55))","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"  * What it does: Allows the user to find students by their status","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"  * Justification: Track students with specific statuses e.g. `Positive` or `Close-Contact`","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"  * Credits: *{Collaborators: Yong Rui, Zi Foong}*","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"* **New Feature**: Find Students by the Activities they have participated in: `findactivity` -- (Pull Request [\\#83](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/83))","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"  * What it does: Allows the user to find students by their activities they are participating in (e.g. Being the Badminton CCA)","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"  * Justification: Track students who are participating in the same particular `Activity`","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"  * Credits: *{Collaborators: Yong Rui, Zi Foong}*","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dlzf834\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"  * UI changes: Making `Status` attribute more prominent -- (Pull Request [\\#100](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/100))","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"  * Set character limit to `Phone` attribute -- (Pull Request [\\#168](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/168))","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"  * Set character limits to `Activity`, `Address`, `Name` attributes (Pull Request [\\#180](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/180))","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"  * Update AboutUs.md -- (Pull Request [\\#40](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/40))","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"  * Update Readme.md -- (Pull Request [\\#40](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/40))","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    * Update for new features `findstatus` and `findclasscode` -- (Pull Request [\\#63](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/63))","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"    * Correction for certain features stated in UserGuide and specificity for commands -- (Pull Request [\\#105](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/105))","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    * Add Introduction and Minor fixes to terms -- (Pull Request [\\#107](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/107))","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"    * Bug Fixes and Image/Captions -- (Pull Request [\\#114](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/114))","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"      * Fixed AB3 issue during `ctrl+p` of github pages","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"      * Added captions to images used in UG","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"      * Added GUI/CLI and brief intro of the application","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"      * Add red box for edit command figure to highlight the student changed","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"    * Bug Fixes for issues raised from TP-D -- (Pull Request [\\#164](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/164))","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"      * Added `clear` command and details into UserGuide","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"      * Removed empty tip box","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"      * Grammar issues","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"    * Bug Fixes for div where `\u003e` constantly appeared erroneously -- (Pull Request [\\#168](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/168))","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"    * New images of information card with labels to explain GUI -- (Pull Request [\\#177](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/177))","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"    * Edited Glossary","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"    * Added User Profile, User Stories and Value Prepositions -- (Pull Request [\\#25](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/25))","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"    * Added QuickLinks and Table of Content -- (Pull Request [\\#84](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/84))","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"    * Features `Status`, `findstatus` and `Activity` implementation -- (Pull Request [\\#91](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/91))","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"    * `findactivity` implementation alternative -- (Pull Request [\\#177](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/177))","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"    * JUnit Tests for `findactivity` method -- (Pull Request [\\#86](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/86))","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"    * DeveloperGuide.md updates by [Jun Hong](https://github.com/whoisjunhong) for Batch Update and `ClassCode` -- (Pull Request [\\#92](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/92))","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"    * Logging and Exception checking for Batch Update enhancement -- (Pull Request [\\#93](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/93))","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"    * DeveloperGuide.md updates by [Yong Rui](https://github.com/Fenway17) -- (Pull Request [\\#96](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/96))","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"    * UserGuide.md changes by [Yong Rui](https://github.com/Fenway17) -- (Pull Request [\\#104](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/104))","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"    * Add images for features -- (Pull Request [\\#106](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/106))","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"    * Updated UserGuide.md and changed application top bar -- (Pull Request [\\#109](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/109))","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"    * Enhance UI -- (Pull Request [\\#116](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/116))","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"    * Fix batch update edge cases for AddCommand and DeleteCommand -- (Pull Request [\\#118](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/118))","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"* **Test Cases**:","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"  * Implement JUnit Tests for updated `Edit` Command -- (Pull Request [\\#69](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/69))","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"  * Updated Test Cases for Activity and Activity-related functions -- (Pull Request [\\#79](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/79))","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"  * Implement Test Cases for `Activity`, `Address`, `Name`, `Status`, `Phone`  attributes which are too short/long to prevent over-the-top inputs from Users -- (Pull Request [\\#181](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/181))","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"lzf834":73,"-":10}},{"path":"docs/team/whoisjunhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"whoisjunhong"},"content":"Wee Jun Hong\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"### Project: Ultimate Divoc Tracker","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"This application is a variation of the above original project, tailored for school administrators to automate the tracking COVID-19 cases amongst students in schools.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"* **New Feature**: Batch Update Status based on Class Code -- (Pull request:[\\#70](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/70))","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"  * What it does:","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"    * Upon a positive case in the ClassCode, all student\u0027s status in that ClassCode will be updated to Close-Contact","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"    * If no positive cases in the ClassCode, all student\u0027s status in that ClassCode wil be updated back to Negative","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"  * Justification: Track and automate COVID-19 close contact using class code","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"  * Credits: *{Collaborators: Jun Hong, Joshua, Louis}*","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"* **New Feature**: Add ClassCode methods -- (Pull request: [\\#37](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/37))","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"  * What it does: Gives each person in the list a class code attribute denoting class number/code","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"  * Justification: Track COVID-19 close contact using class code","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"  * Highlights: Class Code follows the convention of an integer followed by an alphabet","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"whoisjunhong"},"content":"  * Credits: *{Collaborators: Jun Hong, Joshua, Louis}*","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"whoisjunhong"},"content":"* **Fixes**: Fix batch update status for `AddCommand` and `DeleteCommand`  -- (Pull request: [\\#118](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/118))","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"* What it fixes:","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"* Edge Case 1: If user is added into application who is `Positive`, the students in the same ClassCode and Activity does not change to `Close-Contact`","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"* Edge Case 2: If user is deleted from the application who is `Positive` and the ClassCode and/or Activity does not have any other positive cases, those students statuses does not change to `Negative`","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"* Edge Case 3: If user is added into application who is `Negative` while the ClassCode and/or Activity is `Close-Contact`, those students statuses does not change to `Negative`","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"* Edge Case 4: If user is added into application who is `Negative` while there is still a `Positive` case in the ClassCode and/or Activity, the recently added student status will be changed to `Close-Contact`","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"* Justification: Fix edge cases which will snowball into other critical bugs in the future","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"whoisjunhong"},"content":"* Credits: *Jun Hong*","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"whoisjunhong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dwhoisjunhong\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"  * Managed releases `v1.1` - `v1.3` (- releases) on GitHub","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"  * Repurpose tags to activities (Pull requests [\\#77](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/77))","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"whoisjunhong"},"content":"    * What it does: Person can have multiple activities (e.g. CCA, functional groups)","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"    * Justification: Track COVID-19 close contact using activities","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"whoisjunhong"},"content":"  * Enhancement to UI (Pull request [\\#116](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/116))","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"    * What it does: Enhancement to current AB3 UI to make it more UI/UX centric","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"    * Justification: To beautify the application and allow the user to have a more pleasant experience using the application instead of the default theme provided by AB3","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"    * Update AboutUs.md [\\#16](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/16)","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"whoisjunhong"},"content":"    * Update Readme.md [\\#26](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/26)","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"whoisjunhong"},"content":"    * Add Batch Update and ClassCode developer guide [\\#92](https://github.com/AY2122S2-CS2103T-T12-1/tp/pull/92)","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"whoisjunhong":41,"-":16}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"louisdavinlie":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Sorry I don\u0027t know what command that is! :(\"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"            + \"\\n\\nType \\\"help\\\" to see list of commands!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whoisjunhong":3,"-":10,"louisdavinlie":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Adds a person to the address book. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"whoisjunhong"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"            + PREFIX_CLASSCODE + \"CLASSCODE \"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"            + \"[\" + PREFIX_ACTIVITY + \"ACTIVITIES]...\"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"whoisjunhong"},"content":"            + \"\\n\\n\" + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_NAME + \"Candice N Utz \"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_EMAIL + \"candicenuts@example.com \"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_ADDRESS + \"123, Sunrise Road, #01-25 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"            + PREFIX_STATUS + \"Negative \"","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"e0544333"},"content":"            + PREFIX_CLASSCODE + \"4A \"","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_ACTIVITY + \"Basketball \"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_ACTIVITY + \"Dance\";","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddCommand.class);","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"whoisjunhong"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"        assert toAdd !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"whoisjunhong"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"whoisjunhong"},"content":"            batchUpdateNegativeToPositive(toAdd, studentList, model);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"whoisjunhong"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"whoisjunhong"},"content":"            logger.severe(\"Batch update failed: \" + StringUtil.getDetails(ex));","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"whoisjunhong"},"content":"     * Batch updates the list when a new person\u0027s with positive status joins the class and/or activity","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"whoisjunhong"},"content":"    private static void batchUpdateNegativeToPositive(Person addedPerson,","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"whoisjunhong"},"content":"                                                      ObservableList\u003cPerson\u003e studentList,","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"whoisjunhong"},"content":"                                                      Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"        assert addedPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"        assert studentList !\u003d null : \"The student list should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"        assert model !\u003d null : \"A model should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"        if (addedPerson.isPositive()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"whoisjunhong"},"content":"            List\u003cPerson\u003e filteredByClassCodeList \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(addedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"whoisjunhong"},"content":"                            || student.hasSameActivity(addedPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"whoisjunhong"},"content":"                            \u0026\u0026 !student.isSamePerson(addedPerson)","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"                            \u0026\u0026 !student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"whoisjunhong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"whoisjunhong"},"content":"            for (int i \u003d 0; i \u003c filteredByClassCodeList.size(); i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"whoisjunhong"},"content":"                Person currentPerson \u003d filteredByClassCodeList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"                assert currentPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":110,"author":{"gitId":"e0544333"},"content":"                ModelManager.editPersonStatus(currentPerson, new Status(Status.CLOSE_CONTACT), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":111,"author":{"gitId":"whoisjunhong"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"whoisjunhong"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"whoisjunhong"},"content":"            List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(addedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"whoisjunhong"},"content":"                            || student.hasSameActivity(addedPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"whoisjunhong"},"content":"                            \u0026\u0026 !student.isSamePerson(addedPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"whoisjunhong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"whoisjunhong"},"content":"            for (int i \u003d 0; i \u003c filteredByClassCodeAndActivityList.size(); i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"whoisjunhong"},"content":"                Person currentPerson \u003d filteredByClassCodeAndActivityList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"louisdavinlie"},"content":"                assert currentPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":122,"author":{"gitId":"whoisjunhong"},"content":"                List\u003cPerson\u003e positiveRelatedToPerson \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"louisdavinlie"},"content":"                        .filter(student -\u003e (student.hasSameClassCode(currentPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"whoisjunhong"},"content":"                                || student.hasSameActivity(currentPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"whoisjunhong"},"content":"                                \u0026\u0026 !student.isSamePerson(addedPerson)","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"                                \u0026\u0026 student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"whoisjunhong"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"whoisjunhong"},"content":"                if (positiveRelatedToPerson.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"e0544333"},"content":"                    ModelManager.editPersonStatus(currentPerson, new Status(Status.NEGATIVE), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"whoisjunhong"},"content":"                } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"e0544333"},"content":"                    ModelManager.editPersonStatus(addedPerson, new Status(Status.CLOSE_CONTACT), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":133,"author":{"gitId":"whoisjunhong"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"whoisjunhong"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":1,"Fenway17":2,"whoisjunhong":64,"-":57,"e0544333":7,"louisdavinlie":13}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    private final boolean openBrowser;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"whoisjunhong"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean openBrowser, boolean exit) {","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"        this.openBrowser \u003d openBrowser;","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"whoisjunhong"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"    public boolean isOpenBrowser() {","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"        return openBrowser;","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"whoisjunhong"},"content":"                \u0026\u0026 openBrowser \u003d\u003d otherCommandResult.openBrowser","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"whoisjunhong"},"content":"        return Objects.hash(feedbackToUser, showHelp, openBrowser, exit);","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whoisjunhong":11,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"e0544333"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"            + \" Command: Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"e0544333"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteCommand.class);","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"e0544333"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"                        + \" Only \" + lastShownList.size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"            assert personToDelete !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"whoisjunhong"},"content":"            try {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"whoisjunhong"},"content":"                batchUpdateDeletedPerson(personToDelete, studentList, model);","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"whoisjunhong"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"whoisjunhong"},"content":"                logger.severe(\"Batch update failed: \" + StringUtil.getDetails(ex));","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"whoisjunhong"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"e0544333"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"e0544333"},"content":"            logger.severe(\"Delete Command failed: \" + StringUtil.getDetails(ex));","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"                    + \" Only \" + lastShownList.size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"whoisjunhong"},"content":"     * Batch updates the list when a person\u0027s status changes","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"whoisjunhong"},"content":"     * from positive to negative.","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"whoisjunhong"},"content":"    private static void batchUpdateDeletedPerson(Person deletedPerson,","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"whoisjunhong"},"content":"                                                      ObservableList\u003cPerson\u003e studentList,","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"whoisjunhong"},"content":"                                                      Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"        assert deletedPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"        assert studentList !\u003d null : \"The student list should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"        assert model !\u003d null : \"A model should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"        if (deletedPerson.isPositive()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"whoisjunhong"},"content":"            List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(deletedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"whoisjunhong"},"content":"                            || student.hasSameActivity(deletedPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"whoisjunhong"},"content":"                            \u0026\u0026 !student.isSamePerson(deletedPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"whoisjunhong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"whoisjunhong"},"content":"            for (int i \u003d 0; i \u003c filteredByClassCodeAndActivityList.size(); i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"whoisjunhong"},"content":"                Person currentPerson \u003d filteredByClassCodeAndActivityList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"                assert currentPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"whoisjunhong"},"content":"                List\u003cPerson\u003e positiveRelatedToPerson \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"                        .filter(student -\u003e (student.hasSameClassCode(currentPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"whoisjunhong"},"content":"                                || student.hasSameActivity(currentPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"whoisjunhong"},"content":"                                \u0026\u0026 !student.isSamePerson(deletedPerson)","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"                                \u0026\u0026 student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"whoisjunhong"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"whoisjunhong"},"content":"                if (positiveRelatedToPerson.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"e0544333"},"content":"                    ModelManager.editPersonStatus(currentPerson, new Status(Status.NEGATIVE), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":105,"author":{"gitId":"whoisjunhong"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"whoisjunhong"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whoisjunhong":36,"-":55,"e0544333":9,"louisdavinlie":16}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Successfully edited %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommand.class);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Edits details of person by index used \"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"            + \"in the displayed person list. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"whoisjunhong"},"content":"            + PREFIX_CLASSCODE + \"CLASSCODE \"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"whoisjunhong"},"content":"            + \"[\" + PREFIX_ACTIVITY + \"ACTIVITIES]...\"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"whoisjunhong"},"content":"            + \"\\n\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"whoisjunhong"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"                    + \" Only \" + lastShownList.size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"        assert personToEdit !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"        assert editedPerson !\u003d null : \"An edited person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"            batchUpdateNegativeToPositive(personToEdit, editedPerson, studentList, model);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"louisdavinlie"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"            logger.severe(\"Batch update failed: \" + StringUtil.getDetails(ex));","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"louisdavinlie"},"content":"            batchUpdatePositiveToNegative(personToEdit, editedPerson, studentList, model);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"louisdavinlie"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"louisdavinlie"},"content":"            logger.severe(\"Batch update failed: \" + StringUtil.getDetails(ex));","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"louisdavinlie"},"content":"     * Batch updates the list when a person\u0027s status changes","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"louisdavinlie"},"content":"     * from negative to positive.","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"louisdavinlie"},"content":"    private static void batchUpdateNegativeToPositive(Person personToEdit, Person editedPerson,","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"louisdavinlie"},"content":"                                                      ObservableList\u003cPerson\u003e studentList, Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"        assert personToEdit !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"        assert editedPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"louisdavinlie"},"content":"        assert studentList !\u003d null : \"The student list should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"louisdavinlie"},"content":"        assert model !\u003d null : \"A model should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"louisdavinlie"},"content":"        if ((personToEdit.isNegative() || personToEdit.isCloseContact()) \u0026\u0026 editedPerson.isPositive()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"whoisjunhong"},"content":"            List\u003cPerson\u003e filteredByClassCodeList \u003d studentList.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(editedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"louisdavinlie"},"content":"                            || student.hasSameActivity(editedPerson))","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"whoisjunhong"},"content":"                            \u0026\u0026 !student.isSamePerson(editedPerson)","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"louisdavinlie"},"content":"                            \u0026\u0026 !student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"whoisjunhong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"e0544333"},"content":"            for (int i \u003d 0; i \u003c filteredByClassCodeList.size(); i++) {","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"e0544333"},"content":"                Person currentPerson \u003d filteredByClassCodeList.get(i);","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"louisdavinlie"},"content":"                assert currentPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":143,"author":{"gitId":"e0544333"},"content":"                ModelManager.editPersonStatus(currentPerson, new Status(Status.CLOSE_CONTACT), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":144,"author":{"gitId":"e0544333"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"louisdavinlie"},"content":"     * Batch updates the list when a person\u0027s status changes","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"louisdavinlie"},"content":"     * from positive to negative.","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"louisdavinlie"},"content":"    private static void batchUpdatePositiveToNegative(Person personToEdit, Person editedPerson,","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"louisdavinlie"},"content":"                                                      ObservableList\u003cPerson\u003e studentList, Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"louisdavinlie"},"content":"        assert personToEdit !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":155,"author":{"gitId":"louisdavinlie"},"content":"        assert editedPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"louisdavinlie"},"content":"        assert studentList !\u003d null : \"The student list should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"louisdavinlie"},"content":"        assert model !\u003d null : \"A model should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":158,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":159,"author":{"gitId":"louisdavinlie"},"content":"        if (personToEdit.isPositive() \u0026\u0026 editedPerson.isNegative()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":160,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"louisdavinlie"},"content":"            List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(editedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":163,"author":{"gitId":"louisdavinlie"},"content":"                            || student.hasSameActivity(editedPerson))","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"louisdavinlie"},"content":"                            \u0026\u0026 !student.isSamePerson(editedPerson))","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"louisdavinlie"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"louisdavinlie"},"content":"            for (int i \u003d 0; i \u003c filteredByClassCodeAndActivityList.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"louisdavinlie"},"content":"                Person currentPerson \u003d filteredByClassCodeAndActivityList.get(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"louisdavinlie"},"content":"                assert currentPerson !\u003d null : \"A person should not be null\";","lastModifiedDate":"2022-04-05"},{"lineNumber":170,"author":{"gitId":"louisdavinlie"},"content":"                List\u003cPerson\u003e positiveRelatedToPerson \u003d studentList.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"louisdavinlie"},"content":"                        .filter(student -\u003e (student.hasSameClassCode(currentPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"louisdavinlie"},"content":"                                || student.hasSameActivity(currentPerson))","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"louisdavinlie"},"content":"                                \u0026\u0026 !student.isSamePerson(editedPerson)","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"louisdavinlie"},"content":"                                \u0026\u0026 student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"louisdavinlie"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"louisdavinlie"},"content":"                if (positiveRelatedToPerson.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"e0544333"},"content":"                    ModelManager.editPersonStatus(currentPerson, new Status(Status.NEGATIVE), model);","lastModifiedDate":"2022-04-05"},{"lineNumber":179,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"e0544333"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-04-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"Fenway17"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2022-02-22"},{"lineNumber":196,"author":{"gitId":"whoisjunhong"},"content":"        ClassCode updatedClassCode \u003d editPersonDescriptor.getClassCode().orElse(personToEdit.getClassCode());","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"whoisjunhong"},"content":"        Set\u003cActivity\u003e updatedActivity \u003d editPersonDescriptor.getActivities().orElse(personToEdit.getActivities());","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"e0544333"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedStatus,","lastModifiedDate":"2022-02-28"},{"lineNumber":200,"author":{"gitId":"whoisjunhong"},"content":"                updatedClassCode, updatedActivity);","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"Fenway17"},"content":"        private Status status;","lastModifiedDate":"2022-02-22"},{"lineNumber":231,"author":{"gitId":"whoisjunhong"},"content":"        private ClassCode classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":232,"author":{"gitId":"whoisjunhong"},"content":"        private Set\u003cActivity\u003e activities;","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"whoisjunhong"},"content":"         * A defensive copy of {@code activities} is used internally.","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":245,"author":{"gitId":"Fenway17"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-02-22"},{"lineNumber":246,"author":{"gitId":"whoisjunhong"},"content":"            setClassCode(toCopy.classCode);","lastModifiedDate":"2022-02-27"},{"lineNumber":247,"author":{"gitId":"whoisjunhong"},"content":"            setActivities(toCopy.activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"whoisjunhong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, activities, status, classCode);","lastModifiedDate":"2022-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"Fenway17"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-02-22"},{"lineNumber":290,"author":{"gitId":"Fenway17"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-02-22"},{"lineNumber":291,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":292,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":293,"author":{"gitId":"Fenway17"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-02-22"},{"lineNumber":294,"author":{"gitId":"Fenway17"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-02-22"},{"lineNumber":295,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":296,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":297,"author":{"gitId":"whoisjunhong"},"content":"        public void setClassCode(ClassCode classCode) {","lastModifiedDate":"2022-02-27"},{"lineNumber":298,"author":{"gitId":"whoisjunhong"},"content":"            this.classCode \u003d classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":299,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":300,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":301,"author":{"gitId":"whoisjunhong"},"content":"        public Optional\u003cClassCode\u003e getClassCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":302,"author":{"gitId":"whoisjunhong"},"content":"            return Optional.ofNullable(classCode);","lastModifiedDate":"2022-02-27"},{"lineNumber":303,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":304,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":306,"author":{"gitId":"whoisjunhong"},"content":"         * Sets {@code activities} to this object\u0027s {@code activities}.","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"whoisjunhong"},"content":"         * A defensive copy of {@code activities} is used internally.","lastModifiedDate":"2022-03-14"},{"lineNumber":308,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"whoisjunhong"},"content":"        public void setActivities(Set\u003cActivity\u003e activities) {","lastModifiedDate":"2022-03-14"},{"lineNumber":310,"author":{"gitId":"whoisjunhong"},"content":"            this.activities \u003d (activities !\u003d null) ? new HashSet\u003c\u003e(activities) : null;","lastModifiedDate":"2022-03-14"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":314,"author":{"gitId":"whoisjunhong"},"content":"         * Returns an unmodifiable activity set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":316,"author":{"gitId":"whoisjunhong"},"content":"         * Returns {@code Optional#empty()} if {@code activity} is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":317,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"whoisjunhong"},"content":"        public Optional\u003cSet\u003cActivity\u003e\u003e getActivities() {","lastModifiedDate":"2022-03-14"},{"lineNumber":319,"author":{"gitId":"whoisjunhong"},"content":"            return (activities !\u003d null) ? Optional.of(Collections.unmodifiableSet(activities)) : Optional.empty();","lastModifiedDate":"2022-03-14"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":341,"author":{"gitId":"Fenway17"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2022-02-22"},{"lineNumber":342,"author":{"gitId":"louisdavinlie"},"content":"                    \u0026\u0026 getClassCode().equals(e.getClassCode())","lastModifiedDate":"2022-03-08"},{"lineNumber":343,"author":{"gitId":"whoisjunhong"},"content":"                    \u0026\u0026 getActivities().equals(e.getActivities());","lastModifiedDate":"2022-03-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Fenway17":13,"whoisjunhong":56,"-":197,"e0544333":11,"louisdavinlie":69}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"whoisjunhong":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.activity.ActivityContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" * Finds and lists all persons in address book whose Activities contain any of the argument keywords.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"public class FindActivityCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    public static final String COMMAND_WORD \u003d \"findactivity\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Finds all persons whose activities contain \"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: KEYWORD [ACTIVITY]...\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" badminton\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"            + \"Example: \" + COMMAND_WORD + \" basketball soccer golf\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"    public static final String ERRMSG_STATUS \u003d \"Parameters: KEYWORD [ACTIVITY]\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"whoisjunhong"},"content":"            + \"The specified keywords (case-insensitive) should only contain alphabets\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: KEYWORD [ACTIVITY]...\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" badminton\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"            + \"Example: \" + COMMAND_WORD + \" basketball soccer golf\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    private final ActivityContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    public FindActivityCommand(ActivityContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"                || (other instanceof FindActivityCommand // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                \u0026\u0026 predicate.equals(((FindActivityCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"lzf834":41,"whoisjunhong":8}},{"path":"src/main/java/seedu/address/logic/commands/FindClassCodeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.person.ClassCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":" * Finds and lists all persons in address book whose class code matches the given class code.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"public class FindClassCodeCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    public static final String COMMAND_WORD \u003d \"findclasscode\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Finds all persons whose class code contains \"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3B\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3B 4A 1F\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"    private final ClassCodeContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"    public FindClassCodeCommand(ClassCodeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"                || (other instanceof FindClassCodeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"                \u0026\u0026 predicate.equals(((FindClassCodeCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Fenway17":39,"whoisjunhong":5}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Finds all persons whose names contain any of \"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"whoisjunhong":2,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/FindStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" * Finds and lists all persons in address book whose status contains any of the argument keywords.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"public class FindStatusCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    public static final String COMMAND_WORD \u003d \"findstatus\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Finds all persons whose status contain any of \"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"            + \"Parameters: KEYWORD [STATUS]...\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" positive\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" negative\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" close-contact\\n\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    public static final String ERRMSG_STATUS \u003d \"Parameters: KEYWORD [STATUS]...\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"whoisjunhong"},"content":"            + \"[STATUS] Should only be positive, negative or close-contact\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" positive\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" negative\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"            + \"Example: \" + COMMAND_WORD + \" close-contact\";","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    private final StatusContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"    public FindStatusCommand(StatusContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                || (other instanceof FindStatusCommand // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"                \u0026\u0026 predicate.equals(((FindStatusCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"lzf834":47,"whoisjunhong":3}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Command: Shows program usage instructions.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window, meanwhile here are the commands \"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"            + \"available for your use! \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"            + \"1. add: Adds a new User\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"            + \"    Format: add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS cc/CLASS s/STATUS [act/ACTIVITIES] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"            + \"[act/MORE ACTIVITIES]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"            + \"2. clear: Clears List\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"            + \"3. delete: Deletes a Student by their Index\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"            + \"    Format: delete INDEX\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"            + \"4. edit: Edit User\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"            + \"    Format: edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [cc/CLASS] [s/STATUS] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"            + \"[act/ACTIVITIES] [act/MORE ACTIVITIES]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"            + \"5. list: Lists all users\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"            + \"6. findactivity: Find Students by their Activity\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"            + \"    Format: findactivity ACTIVITY [MORE ACTIVITIES]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"            + \"7. findstatus: Find Students by their COVID-19 Status\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"            + \"    Format: findstatus STATUS\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"            + \"8. findclasscode: Find Students by their class\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"            + \"    Format: findclasscode CLASS\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"            + \"9. help: Displays User Guide and commands to use\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"            + \"10. exit: Exit Program\";","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"whoisjunhong"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":17,"whoisjunhong":5,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"e0544333"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"whoisjunhong"},"content":"                        PREFIX_STATUS, PREFIX_CLASSCODE, PREFIX_ACTIVITY);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STATUS)","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"e0544333"},"content":"        ClassCode classCode \u003d ParserUtil.parseClassCode(argMultimap.getValue(PREFIX_CLASSCODE).get());","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"        Set\u003cActivity\u003e activityList \u003d ParserUtil.parseActivities(argMultimap.getAllValues(PREFIX_ACTIVITY));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"        Person person \u003d new Person(name, phone, email, address, status, classCode, activityList);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Fenway17":3,"whoisjunhong":5,"-":54,"e0544333":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.commands.FindActivityCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"import seedu.address.logic.commands.FindClassCodeCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.commands.FindStatusCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"        case FindStatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"            return new FindStatusCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"Fenway17"},"content":"        case FindClassCodeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Fenway17"},"content":"            return new FindClassCodeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"        case FindActivityCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"            return new FindActivityCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":8,"Fenway17":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"    public static final Prefix PREFIX_CLASSCODE \u003d new Prefix(\"cc/\");","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"    public static final Prefix PREFIX_ACTIVITY \u003d new Prefix(\"act/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Fenway17":1,"whoisjunhong":1,"-":14,"e0544333":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"e0544333"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"whoisjunhong"},"content":"                        PREFIX_STATUS, PREFIX_CLASSCODE, PREFIX_ACTIVITY);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"            editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"whoisjunhong"},"content":"        if (argMultimap.getValue(PREFIX_CLASSCODE).isPresent()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"whoisjunhong"},"content":"            editPersonDescriptor.setClassCode(ParserUtil.parseClassCode(argMultimap.getValue(PREFIX_CLASSCODE).get()));","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"whoisjunhong"},"content":"        parseActivitiesForEdit(argMultimap.getAllValues(PREFIX_ACTIVITY))","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"whoisjunhong"},"content":"                .ifPresent(editPersonDescriptor::setActivities);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"whoisjunhong"},"content":"     * Parses {@code Collection\u003cString\u003e activities} into a {@code Set\u003cActivity\u003e} if {@code activities} is non-empty.","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"whoisjunhong"},"content":"     * If {@code activities} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"whoisjunhong"},"content":"     * {@code Set\u003cActivity\u003e} containing zero activities.","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"whoisjunhong"},"content":"    private Optional\u003cSet\u003cActivity\u003e\u003e parseActivitiesForEdit(Collection\u003cString\u003e activities) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"whoisjunhong"},"content":"        assert activities !\u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"whoisjunhong"},"content":"        if (activities.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"whoisjunhong"},"content":"        Collection\u003cString\u003e activitySet \u003d activities.size() \u003d\u003d 1","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"whoisjunhong"},"content":"                \u0026\u0026 activities.contains(\"\")","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"whoisjunhong"},"content":"                ? Collections.emptySet() : activities;","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"whoisjunhong"},"content":"        return Optional.of(ParserUtil.parseActivities(activitySet));","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Fenway17":4,"whoisjunhong":18,"-":70,"e0544333":2}},{"path":"src/main/java/seedu/address/logic/parser/FindActivityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.commands.FindActivityCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.activity.ActivityContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"public class FindActivityCommandParser implements Parser\u003cFindActivityCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"     * Parses the given {@code String} of arguments in the context of the FindActivityCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"     * and returns a FindActivityCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    public FindActivityCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        //Throw exception when input is empty","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindActivityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        String[] activityKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        assert activityKeywords.length \u003e 0 : \"Keywords for findactivity command cannot be empty\";","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        return new FindActivityCommand(new ActivityContainsKeywordsPredicate(Arrays.asList(activityKeywords)));","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"lzf834":32,"louisdavinlie":2}},{"path":"src/main/java/seedu/address/logic/parser/FindClassCodeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import seedu.address.logic.commands.FindClassCodeCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.person.ClassCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"public class FindClassCodeCommandParser implements Parser\u003cFindClassCodeCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"     * Parses the given {@code String} of arguments in the context of the FindClassCodeCommand","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"     * and returns a FindClassCodeCommand object for execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"    public FindClassCodeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCodeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        String[] classCodeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        assert classCodeKeywords.length \u003e 0 : \"Keywords for findclasscode command cannot be empty\";","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"        return new FindClassCodeCommand(new ClassCodeContainsKeywordsPredicate(Arrays.asList(classCodeKeywords)));","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Fenway17":33,"louisdavinlie":2}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        assert nameKeywords.length \u003e 0 : \"Keywords for find command cannot be empty\";","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":33,"louisdavinlie":2}},{"path":"src/main/java/seedu/address/logic/parser/FindStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.commands.FindStatusCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"public class FindStatusCommandParser implements Parser\u003cFindStatusCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"     * Parses the given {@code String} of arguments in the context of the FindStatusCommand","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * and returns a FindStatusCommand object for execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    public FindStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        //Throw exception when input is empty","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        String[] statusKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        //Throw exception when input contains more than 1 word","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        if (statusKeywords.length \u003e 1) {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStatusCommand.ERRMSG_STATUS));","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"        assert statusKeywords.length \u003d\u003d 1 : \"Keywords for findstatus command should be one\";","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        return new FindStatusCommand(new StatusContainsKeywordsPredicate(Arrays.asList(statusKeywords)));","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"lzf834":40,"louisdavinlie":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        int trimNameLen \u003d trimmedName.length();","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"        } else if (trimNameLen \u003e Name.NAME_SIZE_MAX_LIMIT || trimNameLen \u003c Name.NAME_SIZE_MIN_LIMIT) {","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(String.format(Name.MESSAGE_NAME_LIMIT));","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"        } else if (trimmedAddress.length() \u003e Address.ADDRESS_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(String.format(Address.MESSAGE_ADDRESS_LIMIT));","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"Fenway17"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"Fenway17"},"content":"     * @throws ParseException if the given {@code Status} is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"Fenway17"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-02-22"},{"lineNumber":112,"author":{"gitId":"Fenway17"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-22"},{"lineNumber":113,"author":{"gitId":"Fenway17"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-02-22"},{"lineNumber":114,"author":{"gitId":"Fenway17"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"Fenway17"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"Fenway17"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"e0544333"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"e0544333"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"e0544333"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"e0544333"},"content":"     * @throws ParseException if the given {@code Status} is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"e0544333"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"e0544333"},"content":"    public static ClassCode parseClassCode(String classCode) throws ParseException {","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"e0544333"},"content":"        requireNonNull(classCode);","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"e0544333"},"content":"        String trimmedClassCode \u003d classCode.trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"e0544333"},"content":"        if (!ClassCode.isValidClassCode(trimmedClassCode)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"e0544333"},"content":"            throw new ParseException(ClassCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"e0544333"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"e0544333"},"content":"        return new ClassCode(trimmedClassCode);","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"whoisjunhong"},"content":"     * Parses a {@code String activity} into a {@code Activity}.","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"whoisjunhong"},"content":"     * @throws ParseException if the given {@code activity} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"whoisjunhong"},"content":"    public static Activity parseActivity(String activity) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"whoisjunhong"},"content":"        requireNonNull(activity);","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"whoisjunhong"},"content":"        String trimmedActivity \u003d activity.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"whoisjunhong"},"content":"        if (!Activity.isValidActivityName(trimmedActivity)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"whoisjunhong"},"content":"            throw new ParseException(Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"lzf834"},"content":"        } else if (trimmedActivity.length() \u003e Activity.ACTIVITY_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-05"},{"lineNumber":147,"author":{"gitId":"lzf834"},"content":"            throw new ParseException(String.format(Activity.MESSAGE_ACTIVITY_LIMIT));","lastModifiedDate":"2022-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"whoisjunhong"},"content":"        return new Activity(trimmedActivity);","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"whoisjunhong"},"content":"     * Parses {@code Collection\u003cString\u003e activities} into a {@code Set\u003cActivity\u003e}.","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"whoisjunhong"},"content":"    public static Set\u003cActivity\u003e parseActivities(Collection\u003cString\u003e activities) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"whoisjunhong"},"content":"        requireNonNull(activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"whoisjunhong"},"content":"        final Set\u003cActivity\u003e activitySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"whoisjunhong"},"content":"        for (String activityName : activities) {","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"whoisjunhong"},"content":"            activitySet.add(parseActivity(activityName));","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"whoisjunhong"},"content":"        return activitySet;","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lzf834":7,"Fenway17":8,"whoisjunhong":16,"-":116,"e0544333":16}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"e0544333"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"e0544333"},"content":"     * A method to update a person\u0027s status","lastModifiedDate":"2022-04-05"},{"lineNumber":154,"author":{"gitId":"e0544333"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":155,"author":{"gitId":"e0544333"},"content":"    public static void editPersonStatus(Person person, Status status, Model model) {","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"e0544333"},"content":"        EditCommand.EditPersonDescriptor tempDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"e0544333"},"content":"        tempDescriptor.setStatus(status);","lastModifiedDate":"2022-04-05"},{"lineNumber":158,"author":{"gitId":"e0544333"},"content":"        Person editedPersonStatus \u003d EditCommand.createEditedPerson(person, tempDescriptor);","lastModifiedDate":"2022-04-05"},{"lineNumber":159,"author":{"gitId":"e0544333"},"content":"        model.setPerson(person, editedPersonStatus);","lastModifiedDate":"2022-04-05"},{"lineNumber":160,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":161,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":150,"e0544333":12}},{"path":"src/main/java/seedu/address/model/activity/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjunhong"},"content":"package seedu.address.model.activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"whoisjunhong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":" * Represents an Activity in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidActivityName(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"whoisjunhong"},"content":"public class Activity {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Activity names should be alphanumeric\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    public static final int ACTIVITY_SIZE_MAX_LIMIT \u003d 50;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    public static final String MESSAGE_ACTIVITY_LIMIT \u003d \"An Activity cannot be longer than \" + ACTIVITY_SIZE_MAX_LIMIT","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"            + \" characters. \";","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"    public final String activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"     * Constructs a {@code Activity}.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"     * @param activityName A valid activity name.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"whoisjunhong"},"content":"    public Activity(String activityName) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"whoisjunhong"},"content":"        requireNonNull(activityName);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"        checkArgument(isValidActivityName(activityName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"        this.activityName \u003d activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"     * Returns true if a given string is a valid activity name.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"whoisjunhong"},"content":"    public static boolean isValidActivityName(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"whoisjunhong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"whoisjunhong"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"whoisjunhong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"whoisjunhong"},"content":"                || (other instanceof Activity // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"whoisjunhong"},"content":"                \u0026\u0026 activityName.equals(((Activity) other).activityName)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"whoisjunhong"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"whoisjunhong"},"content":"        return activityName.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"whoisjunhong"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"        return \u0027[\u0027 + activityName + \u0027]\u0027;","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"whoisjunhong"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"lzf834":3,"whoisjunhong":54}},{"path":"src/main/java/seedu/address/model/activity/ActivityContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.model.activity;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" * Tests that a {@code Person}\u0027s {@code Activity} matches any of the keywords given.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"public class ActivityContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    public ActivityContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"        String activitiesString \u003d person.getActivities().toString().replace(\"[\", \"\")","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"                .replace(\"]\", \"\").replace(\", \", \" \");","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(activitiesString, keyword));","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"                || (other instanceof ActivityContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"                \u0026\u0026 keywords.equals(((ActivityContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"lzf834":33}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    public static final int ADDRESS_SIZE_MAX_LIMIT \u003d 70;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    public static final String MESSAGE_ADDRESS_LIMIT \u003d \"An address cannot be longer than \" + ADDRESS_SIZE_MAX_LIMIT","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"            + \" characters. \";","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":3,"-":57}},{"path":"src/main/java/seedu/address/model/person/ClassCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0544333"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"e0544333"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"e0544333"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"e0544333"},"content":" * Represents a Student\u0027s class code in the address book.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"e0544333"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassCode(String)}","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"e0544333"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"public class ClassCode {","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"            \"Class code should have the number 1-6 as its first character and alphabets as its second character\";","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"e0544333"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\b[1-6][a-zA-Z]\";","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public final String value;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"e0544333"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"e0544333"},"content":"     * Constructs a {@code classCode}.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"e0544333"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param value A valid class code.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"e0544333"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    public ClassCode(String value) {","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"e0544333"},"content":"        checkArgument(isValidClassCode(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"e0544333"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"e0544333"},"content":"     * Returns true if a given string is a valid class code.","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"e0544333"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"e0544333"},"content":"    public static boolean isValidClassCode(String test) {","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"e0544333"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"e0544333"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"e0544333"},"content":"        return this.value;","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"e0544333"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"e0544333"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"e0544333"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"e0544333"},"content":"                || (other instanceof ClassCode // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"e0544333"},"content":"                \u0026\u0026 value.equals(((ClassCode) other).value)); // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"e0544333"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"e0544333"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"e0544333"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"e0544333"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"e0544333":43,"louisdavinlie":8}},{"path":"src/main/java/seedu/address/model/person/ClassCodeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":" * Tests that a {@code Person}\u0027s {@code ClassCode} matches any of the keywords given.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"public class ClassCodeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"    public ClassCodeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getClassCode().toString(), keyword));","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"                || (other instanceof ClassCodeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"                \u0026\u0026 keywords.equals(((ClassCodeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Fenway17":31}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    public static final int NAME_SIZE_MIN_LIMIT \u003d 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    public static final int NAME_SIZE_MAX_LIMIT \u003d 50;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"            \"Names should only contain alphabet characters and spaces, it should not be blank, and must be between\"","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"                    + \"1 and 50 characters\";","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    public static final String MESSAGE_NAME_LIMIT \u003d \"Student\u0027s name cannot be shorter than \" + NAME_SIZE_MIN_LIMIT","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"            + \" characters and cannot be longer than \" + NAME_SIZE_MAX_LIMIT + \". \";","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":6,"-":57}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"    private final ClassCode classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"    private final Set\u003cActivity\u003e activities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"    private Status status;","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"e0544333"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Status status,","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"whoisjunhong"},"content":"                  ClassCode classCode, Set\u003cActivity\u003e activities) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"whoisjunhong"},"content":"        requireAllNonNull(name, phone, email, address, status, classCode, activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"whoisjunhong"},"content":"        this.classCode \u003d classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"        this.activities.addAll(activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"Fenway17"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"        return status;","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"whoisjunhong"},"content":"    public ClassCode getClassCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"whoisjunhong"},"content":"        return classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"whoisjunhong"},"content":"     * Returns an immutable activity set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"whoisjunhong"},"content":"    public Set\u003cActivity\u003e getActivities() {","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"whoisjunhong"},"content":"        return Collections.unmodifiableSet(activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person has the same ClassCode","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"     * as the other","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"    public boolean hasSameClassCode(Person otherStudent) {","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"        return classCode.toString().equals(otherStudent.getClassCode().toString());","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person is in the same","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"     * activity as the other.","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"    public boolean hasSameActivity(Person otherStudent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"louisdavinlie"},"content":"        Set\u003cString\u003e activitiesString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"        Iterator\u003cActivity\u003e studentIterator \u003d activities.iterator();","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"        while (studentIterator.hasNext()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"louisdavinlie"},"content":"            activitiesString.add(studentIterator.next().toString().toLowerCase());","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"louisdavinlie"},"content":"        Set\u003cActivity\u003e otherStudentActivities \u003d otherStudent.getActivities();","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"louisdavinlie"},"content":"        Iterator\u003cActivity\u003e otherStudentIterator \u003d otherStudentActivities.iterator();","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"louisdavinlie"},"content":"        while (otherStudentIterator.hasNext()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"louisdavinlie"},"content":"            if (activitiesString.contains(otherStudentIterator.next().toString().toLowerCase())) {","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"louisdavinlie"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person has a specified activity.","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"louisdavinlie"},"content":"    public boolean hasActivity(Activity activity) {","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"louisdavinlie"},"content":"        return activities.contains(activity);","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person has the status Positive.","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"louisdavinlie"},"content":"    public boolean isPositive() {","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"louisdavinlie"},"content":"        return status.toString().equals(Status.POSITIVE);","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person has the status Negative.","lastModifiedDate":"2022-04-04"},{"lineNumber":136,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":137,"author":{"gitId":"louisdavinlie"},"content":"    public boolean isNegative() {","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"louisdavinlie"},"content":"        return status.toString().equals(Status.NEGATIVE);","lastModifiedDate":"2022-04-04"},{"lineNumber":139,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":140,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":141,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":142,"author":{"gitId":"louisdavinlie"},"content":"     * Returns true if a person has the status Close-contact","lastModifiedDate":"2022-04-04"},{"lineNumber":143,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":144,"author":{"gitId":"louisdavinlie"},"content":"    public boolean isCloseContact() {","lastModifiedDate":"2022-04-04"},{"lineNumber":145,"author":{"gitId":"louisdavinlie"},"content":"        return status.toString().equals(Status.CLOSE_CONTACT);","lastModifiedDate":"2022-04-04"},{"lineNumber":146,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":147,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"whoisjunhong"},"content":"                \u0026\u0026 otherPerson.getActivities().equals(getActivities())","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"whoisjunhong"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"louisdavinlie"},"content":"                \u0026\u0026 otherPerson.getClassCode().equals(getClassCode());","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"whoisjunhong"},"content":"        return Objects.hash(name, phone, email, address, status, classCode, activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"whoisjunhong"},"content":"        builder.append(getName()).append(\"!\")","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"whoisjunhong"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"whoisjunhong"},"content":"                .append(\"Phone: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"whoisjunhong"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"whoisjunhong"},"content":"                .append(\"Email: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"whoisjunhong"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"whoisjunhong"},"content":"                .append(\"Address: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"Fenway17"},"content":"                .append(getAddress())","lastModifiedDate":"2022-02-22"},{"lineNumber":191,"author":{"gitId":"whoisjunhong"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"whoisjunhong"},"content":"                .append(\"Status: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"whoisjunhong"},"content":"                .append(getStatus())","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"whoisjunhong"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"whoisjunhong"},"content":"                .append(\"Class Code: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"whoisjunhong"},"content":"                .append(getClassCode());","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":198,"author":{"gitId":"whoisjunhong"},"content":"        Set\u003cActivity\u003e activities \u003d getActivities();","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"whoisjunhong"},"content":"        if (!activities.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"whoisjunhong"},"content":"            builder.append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"whoisjunhong"},"content":"                    .append(\"Activities: \");","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"whoisjunhong"},"content":"            activities.forEach(builder::append);","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Fenway17":8,"whoisjunhong":36,"-":103,"e0544333":1,"louisdavinlie":58}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 but not more than 15 digits long\";","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzf834":2,"Fenway17":1,"-":49}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"/**","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":" * Represents a Person\u0027s covid test status  in the address book.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":" */","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"public class Status {","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"            \"Status should only be Positive, Negative or Close-Contact\";","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    private static final String[] STATUS_INPUT \u003d {\"Positive\", \"Negative\", \"Close-Contact\"};","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"    public static final String POSITIVE \u003d STATUS_INPUT[0];","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"    public static final String NEGATIVE \u003d STATUS_INPUT[1];","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"    public static final String CLOSE_CONTACT \u003d STATUS_INPUT[2];","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"    public final String value;","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"     *","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"whoisjunhong"},"content":"     * @param status Covid status of student","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"    public Status(String status) {","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"        this.value \u003d status;","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"whoisjunhong"},"content":"     * Returns true if a given string is a valid covid status","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"        for (String validEntry : STATUS_INPUT) {","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"            if (test.equals(validEntry)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"                isValid \u003d true;","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"        return isValid;","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"    public String toString() {","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"        return this.value;","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Fenway17":54,"whoisjunhong":8}},{"path":"src/main/java/seedu/address/model/person/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStatus().value, keyword));","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"                || (other instanceof StatusContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"                \u0026\u0026 keywords.equals(((StatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"lzf834":31}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"e0544333"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Status(\"Negative\"), new ClassCode(\"4G\"),","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"basketball\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Status(\"Negative\"), new ClassCode(\"2H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"basketball\", \"badminton\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Status(\"Negative\"), new ClassCode(\"4G\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"soccer\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Status(\"Negative\"), new ClassCode(\"4G\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"tennis\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Status(\"Negative\"), new ClassCode(\"6A\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"choir\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"e0544333"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Status(\"Negative\"), new ClassCode(\"4B\"),","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"                    getActivitySet(\"netball\"))","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"     * Returns a Activity set containing the list of strings given.","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"whoisjunhong"},"content":"    public static Set\u003cActivity\u003e getActivitySet(String... strings) {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"whoisjunhong"},"content":"                .map(Activity::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"whoisjunhong":4,"-":44,"e0544333":4,"louisdavinlie":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedActivity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjunhong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"whoisjunhong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"whoisjunhong"},"content":" * Jackson-friendly version of {@link Activity}.","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"class JsonAdaptedActivity {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"    private final String activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"     * Constructs a {@code JsonAdaptedActivity} with the given {@code activityName}.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"    public JsonAdaptedActivity(String activityName) {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"        this.activityName \u003d activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"whoisjunhong"},"content":"     * Converts a given {@code Activity} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"    public JsonAdaptedActivity(Activity source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"        activityName \u003d source.activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"    @JsonValue","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"    public String getActivityName() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"whoisjunhong"},"content":"        return activityName;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"whoisjunhong"},"content":"     * Converts this Jackson-friendly adapted activity object into the model\u0027s {@code Activity} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"whoisjunhong"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"whoisjunhong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted activity.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"whoisjunhong"},"content":"    public Activity toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"whoisjunhong"},"content":"        if (!Activity.isValidActivityName(activityName)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"whoisjunhong"},"content":"            throw new IllegalValueException(Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"whoisjunhong"},"content":"        return new Activity(activityName);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"whoisjunhong":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"e0544333"},"content":"    private final String status;","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"    private final String classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"whoisjunhong"},"content":"    private final List\u003cJsonAdaptedActivity\u003e activity \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"            @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            @JsonProperty(\"classCode\") String classCode,","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"whoisjunhong"},"content":"            @JsonProperty(\"activity\") List\u003cJsonAdaptedActivity\u003e activity) {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"        this.classCode \u003d classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"        if (activity !\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"            this.activity.addAll(activity);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"        classCode \u003d source.getClassCode().value;","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"whoisjunhong"},"content":"        activity.addAll(source.getActivities().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"whoisjunhong"},"content":"                .map(JsonAdaptedActivity::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"whoisjunhong"},"content":"        final List\u003cActivity\u003e personActivities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"whoisjunhong"},"content":"        for (JsonAdaptedActivity activity : activity) {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"whoisjunhong"},"content":"            personActivities.add(activity.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Fenway17"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-02-22"},{"lineNumber":115,"author":{"gitId":"Fenway17"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-02-22"},{"lineNumber":116,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":117,"author":{"gitId":"Fenway17"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"Fenway17"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-22"},{"lineNumber":119,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-02-22"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":122,"author":{"gitId":"louisdavinlie"},"content":"        if (classCode \u003d\u003d null) {","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"e0544333"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"e0544333"},"content":"                    ClassCode.class.getSimpleName()));","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"        if (!ClassCode.isValidClassCode(classCode)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"            throw new IllegalValueException(ClassCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"        final ClassCode modelClassCode \u003d new ClassCode(classCode);","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"whoisjunhong"},"content":"        final Set\u003cActivity\u003e modelActivity \u003d new HashSet\u003c\u003e(personActivities);","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"whoisjunhong"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelStatus, modelClassCode, modelActivity);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lzf834":2,"Fenway17":10,"whoisjunhong":12,"-":96,"e0544333":5,"louisdavinlie":10}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"            \"https://ay2122s2-cs2103t-t12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"whoisjunhong"},"content":"    public static final String HELP_MESSAGE \u003d \"Ultimate Divoc Tracker: \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"            + \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lzf834":1,"whoisjunhong":3,"-":100,"louisdavinlie":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"whoisjunhong"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"whoisjunhong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"import java.net.URI;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"    private static final String USER_GUIDE_URL \u003d \"https://ay2122s2-cs2103t-t12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"    @FXML","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"    private MenuItem openBrowserItem;","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":159,"author":{"gitId":"whoisjunhong"},"content":"     * Opens browser with the user guide using url link","lastModifiedDate":"2022-04-10"},{"lineNumber":160,"author":{"gitId":"whoisjunhong"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":161,"author":{"gitId":"whoisjunhong"},"content":"    @FXML","lastModifiedDate":"2022-04-10"},{"lineNumber":162,"author":{"gitId":"whoisjunhong"},"content":"    public void openUserGuide() {","lastModifiedDate":"2022-04-10"},{"lineNumber":163,"author":{"gitId":"whoisjunhong"},"content":"        try {","lastModifiedDate":"2022-04-10"},{"lineNumber":164,"author":{"gitId":"whoisjunhong"},"content":"            Desktop.getDesktop().browse(new URI(USER_GUIDE_URL));","lastModifiedDate":"2022-04-10"},{"lineNumber":165,"author":{"gitId":"whoisjunhong"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-04-10"},{"lineNumber":166,"author":{"gitId":"whoisjunhong"},"content":"            e1.printStackTrace();","lastModifiedDate":"2022-04-10"},{"lineNumber":167,"author":{"gitId":"whoisjunhong"},"content":"        } catch (URISyntaxException e1) {","lastModifiedDate":"2022-04-10"},{"lineNumber":168,"author":{"gitId":"whoisjunhong"},"content":"            e1.printStackTrace();","lastModifiedDate":"2022-04-10"},{"lineNumber":169,"author":{"gitId":"whoisjunhong"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":170,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"whoisjunhong"},"content":"            if (commandResult.isOpenBrowser()) {","lastModifiedDate":"2022-04-10"},{"lineNumber":212,"author":{"gitId":"whoisjunhong"},"content":"                openUserGuide();","lastModifiedDate":"2022-04-10"},{"lineNumber":213,"author":{"gitId":"whoisjunhong"},"content":"            }","lastModifiedDate":"2022-04-10"},{"lineNumber":214,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whoisjunhong":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"    private Label status;","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"    @FXML","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"    private Label classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"whoisjunhong"},"content":"    private FlowPane activities;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"        status.setText(person.getStatus().value);","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"        if (person.getStatus().value.equals(Status.POSITIVE)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"whoisjunhong"},"content":"            status.setStyle(\"-fx-text-fill: #FF0000 !important; -fx-label-padding: 20; \"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"whoisjunhong"},"content":"                    + \"-fx-border-color: #FF0000 !important; -fx-border-width: 4; -fx-border-radius: 7\");","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        } else if (person.getStatus().value.equals(Status.NEGATIVE)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"whoisjunhong"},"content":"            status.setStyle(\"-fx-text-fill: #00FF00 !important; -fx-label-padding: 20; \"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"whoisjunhong"},"content":"                    + \"-fx-border-color: #00FF00 !important; -fx-border-width: 4; -fx-border-radius: 7\");","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"        } else if (person.getStatus().value.equals(Status.CLOSE_CONTACT)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"whoisjunhong"},"content":"            status.setStyle(\"-fx-text-fill: orange !important; -fx-label-padding: 20; \"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"whoisjunhong"},"content":"                    + \"-fx-border-color: orange !important; -fx-border-width: 4; -fx-border-radius: 7\");","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        classCode.setText(person.getClassCode().value);","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"whoisjunhong"},"content":"        person.getActivities().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"whoisjunhong"},"content":"                .sorted(Comparator.comparing(activity -\u003e activity.activityName))","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"whoisjunhong"},"content":"                .forEach(activity -\u003e activities.getChildren().add(new Label(activity.activityName)));","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Fenway17":3,"whoisjunhong":10,"-":73,"louisdavinlie":8}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/udtlogo-white.png\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whoisjunhong":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-background-radius: 7;\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"whoisjunhong"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":"      \u003c/font\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"   \u003c/TextField\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"whoisjunhong":7,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #323B74;","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: derive(#c653e3, 10%);","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: derive(#c653e3, 10%);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":".cell_status_label {","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"lzf834"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069 #273069 #273069 #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #1C2050 #1C2050 #1C2050 #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-insets: -3;","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-radius: 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":153,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"whoisjunhong"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"whoisjunhong"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"whoisjunhong"},"content":".imageview {","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-image: url(\u0027images/banner.png\u0027);","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-size: 100% 100%;","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069 #273069 #273069 #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #1C2050 #1C2050 #1C2050 #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-insets: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-radius: 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-radius: 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3px;","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-insets: 3px;","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\", Arial, sans-serif;","lastModifiedDate":"2022-04-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #1C2050 #1C2050 #1C2050 #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":339,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-insets: -3;","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-radius: 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":343,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"whoisjunhong"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"whoisjunhong"},"content":"#banner \u003e .label {","lastModifiedDate":"2022-04-10"},{"lineNumber":353,"author":{"gitId":"whoisjunhong"},"content":"    -fx-graphic: url(\"../images/banner.png\");","lastModifiedDate":"2022-04-10"},{"lineNumber":354,"author":{"gitId":"whoisjunhong"},"content":"}","lastModifiedDate":"2022-04-10"},{"lineNumber":355,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069 #273069 #273069 #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #1C2050 #1C2050 #1C2050 #1C2050;","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-insets: -3;","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":362,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-radius: 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"whoisjunhong"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-04-04"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #273069, #273069, #273069, #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-color: #273069 #273069 #273069 #273069;","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"whoisjunhong"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"louisdavinlie"},"content":"#activities {","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"louisdavinlie"},"content":"#activities .label {","lastModifiedDate":"2022-03-14"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background-color: #f700ff;","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"lzf834":6,"whoisjunhong":61,"-":322,"louisdavinlie":2}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"    -fx-background: #273069;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjunhong":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"\u003cfx:root minHeight\u003d\"400.0\" minWidth\u003d\"1200.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Ultimate Divoc Tracker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"    \u003cImage url\u003d\"@/images/udtlogo-white.png\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"whoisjunhong"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" prefHeight\u003d\"34.0\" prefWidth\u003d\"325.0\" style\u003d\"-fx-background-color: #1C2050; -fx-border-color: #1C2050;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"whoisjunhong"},"content":"               \u003cMenu id\u003d\"banner\" mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"                  \u003citems\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"whoisjunhong"},"content":"                     \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#openUserGuide\" text\u003d\"User Guide\"/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"                  \u003c/items\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"               \u003c/Menu\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"whoisjunhong"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"12.0\" prefWidth\u003d\"290.0\" style\u003d\"-fx-background-color: #1C2050; -fx-border-color: #1C2050;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"whoisjunhong"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"150.0\" style\u003d\"-fx-background-color: #1C2050; -fx-border-color: #1C2050;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"whoisjunhong"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #1C2050; -fx-border-color: #1C2050;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"whoisjunhong":15,"-":48}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"whoisjunhong"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"      \u003cFlowPane fx:id\u003d\"activities\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e \u003c!--Added status here--\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"e0544333"},"content":"      \u003cLabel fx:id\u003d\"classCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classCode\" /\u003e \u003c!--Added classCode here--\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"   \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_status_label\" text\u003d\"\\$status\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"            \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lzf834":16,"whoisjunhong":3,"-":30,"e0544333":1,"louisdavinlie":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"  \u003cListView fx:id\u003d\"personListView\" style\u003d\"-fx-background-color: #323B74;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjunhong":2,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" prefHeight\u003d\"200.0\" prefWidth\u003d\"523.0\" style\u003d\"-fx-border-color: #273069;\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"whoisjunhong"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":"      \u003c/font\u003e\u003c/TextArea\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"whoisjunhong":6,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"whoisjunhong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"whoisjunhong"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" style\u003d\"-fx-background-color: #1C2050;\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"whoisjunhong"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"whoisjunhong":10,"-":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"whoisjunhong"},"content":"        assertNotNull(AppUtil.getImage(\"/images/udtlogo-white.png\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"whoisjunhong":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASSCODE_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"                + \" Only \" + model.getFilteredPersonList().size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"e0544333"},"content":"                + ADDRESS_DESC_AMY + STATUS_DESC_AMY + CLASSCODE_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withActivities().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lzf834":1,"Fenway17":1,"-":159,"e0544333":2,"louisdavinlie":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_CLOSE_CONTACT;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_POSITIVE;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"e0544333"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"e0544333"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"e0544333"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"e0544333"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"e0544333"},"content":"    public void execute_positiveStatusPerson_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"e0544333"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"e0544333"},"content":"        Person validPerson \u003d new PersonBuilder().withStatus(VALID_STATUS_POSITIVE).withClassCode(\"4A\").build();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"e0544333"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"e0544333"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, validPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"e0544333"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"e0544333"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"e0544333"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"e0544333"},"content":"        List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"                .filter(student -\u003e (student.hasSameClassCode(validPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"e0544333"},"content":"                        || student.hasSameActivity(validPerson))","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"e0544333"},"content":"                        \u0026\u0026 !student.isSamePerson(validPerson)","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"                        \u0026\u0026 !student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"e0544333"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"e0544333"},"content":"        for (Person classmate : filteredByClassCodeAndActivityList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"e0544333"},"content":"            Person editedClassmate \u003d new PersonBuilder(classmate).withStatus(VALID_STATUS_CLOSE_CONTACT).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"e0544333"},"content":"            expectedModel.setPerson(classmate, editedClassmate);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"e0544333"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"e0544333"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"e0544333"},"content":"        assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":193,"e0544333":36,"louisdavinlie":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"whoisjunhong"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"whoisjunhong"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"whoisjunhong"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"whoisjunhong":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    public static final String VALID_ACTIVITY_BADMINTON \u003d \"badminton\";","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    public static final String VALID_ACTIVITY_CHOIR \u003d \"choir\";","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"    public static final String VALID_STATUS_POSITIVE \u003d \"Positive\";","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"    public static final String VALID_STATUS_NEGATIVE \u003d \"Negative\";","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"    public static final String VALID_STATUS_CLOSE_CONTACT \u003d \"Close-Contact\";","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"e0544333"},"content":"    public static final String VALID_CLASSCODE_AMY \u003d \"5A\";","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"e0544333"},"content":"    public static final String VALID_CLASSCODE_BOB \u003d \"2B\";","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"    public static final String ACTIVITY_DESC_CHOIR \u003d \" \" + PREFIX_ACTIVITY + VALID_ACTIVITY_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    public static final String ACTIVITY_DESC_BADMINTON \u003d \" \" + PREFIX_ACTIVITY + VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_POSITIVE;","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_NEGATIVE;","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"e0544333"},"content":"    public static final String CLASSCODE_DESC_AMY \u003d \" \" + PREFIX_CLASSCODE + VALID_CLASSCODE_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"e0544333"},"content":"    public static final String CLASSCODE_DESC_BOB \u003d \" \" + PREFIX_CLASSCODE + VALID_CLASSCODE_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"e0544333"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"Unsure\"; // \u0027Unsure\u0027 not recognize","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"e0544333"},"content":"    public static final String INVALID_CLASSCODE_DESC \u003d \" \" + PREFIX_CLASSCODE + \"b!0\"; // \u0027!\u0027 not allowed in classcode","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"    public static final String INVALID_ACTIVITY_DESC \u003d \" \" + PREFIX_ACTIVITY + \"badminton*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"                .withActivities(VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"                .withActivities(VALID_ACTIVITY_BADMINTON, VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lzf834":8,"whoisjunhong":1,"-":119,"e0544333":8,"louisdavinlie":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e0544333"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_NEGATIVE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"e0544333"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_POSITIVE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"e0544333"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"e0544333"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"e0544333"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"e0544333"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"                + \" Only \" + model.getFilteredPersonList().size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"e0544333"},"content":"    //    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"e0544333"},"content":"    //    public void execute_positiveStatusPerson_success() { //TODO - FIX TEST CASE","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"e0544333"},"content":"    //        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"e0544333"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"e0544333"},"content":"    //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"e0544333"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"e0544333"},"content":"    //        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"e0544333"},"content":"    //        ObservableList\u003cPerson\u003e studentList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"e0544333"},"content":"    //        List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"e0544333"},"content":"    //                .filter(student -\u003e (student.getClassCode().toString()","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"e0544333"},"content":"    //                .equals(personToDelete.getClassCode().toString())","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"e0544333"},"content":"    //                        || student.hasSameActivity(personToDelete))","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"e0544333"},"content":"    //                        \u0026\u0026 !student.isSamePerson(personToDelete))","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"e0544333"},"content":"    //                .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"e0544333"},"content":"    //        for (Person classmate : filteredByClassCodeAndActivityList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"e0544333"},"content":"    //            List\u003cPerson\u003e positiveRelatedToPerson \u003d studentList.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"e0544333"},"content":"    //                    .filter(student -\u003e (student.getClassCode().toString()","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"e0544333"},"content":"    //                            .equals(classmate.getClassCode().toString())","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"e0544333"},"content":"    //                            || student.hasSameActivity(classmate))","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"e0544333"},"content":"    //                            \u0026\u0026 !student.isSamePerson(classmate)","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"e0544333"},"content":"    //                            \u0026\u0026 student.getStatus().toString().equals(VALID_STATUS_POSITIVE))","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"e0544333"},"content":"    //                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"e0544333"},"content":"    //            if (positiveRelatedToPerson.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"e0544333"},"content":"    //                Person editedClassmate \u003d new PersonBuilder(classmate).withStatus(VALID_STATUS_NEGATIVE).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"e0544333"},"content":"    //                expectedModel.setPerson(classmate, editedClassmate);","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"e0544333"},"content":"    //            }","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"e0544333"},"content":"    //        }","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"e0544333"},"content":"    //        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"e0544333"},"content":"    //","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"e0544333"},"content":"    //        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"e0544333"},"content":"    //    }","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"                + \" Only \" + model.getFilteredPersonList().size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":107,"e0544333":49,"louisdavinlie":4}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_CLOSE_CONTACT;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_NEGATIVE;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_POSITIVE;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"                .withActivities(VALID_ACTIVITY_BADMINTON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"                .withPhone(VALID_PHONE_BOB).withActivities(VALID_ACTIVITY_BADMINTON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"e0544333"},"content":"    public void execute_positiveFieldStatusBatchUpdate_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"        Person editedPerson \u003d personInList.withStatus(VALID_STATUS_POSITIVE).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStatus(VALID_STATUS_POSITIVE).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"e0544333"},"content":"        List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"                .filter(student -\u003e (student.hasSameClassCode(editedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"e0544333"},"content":"                        || student.hasSameActivity(editedPerson))","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"e0544333"},"content":"                        \u0026\u0026 !student.isSamePerson(editedPerson)","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"                        \u0026\u0026 !student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"e0544333"},"content":"        for (Person classmate : filteredByClassCodeAndActivityList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"            Person editedClassmate \u003d new PersonBuilder(classmate).withStatus(VALID_STATUS_CLOSE_CONTACT).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"            expectedModel.setPerson(classmate, editedClassmate);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"e0544333"},"content":"    public void execute_negativeFieldStatusBatchUpdate_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"louisdavinlie"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"louisdavinlie"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(secondPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"louisdavinlie"},"content":"        Person editedPerson \u003d personInList.withStatus(VALID_STATUS_NEGATIVE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"louisdavinlie"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStatus(VALID_STATUS_NEGATIVE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"louisdavinlie"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.setPerson(secondPerson, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"louisdavinlie"},"content":"        ObservableList\u003cPerson\u003e studentList \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"e0544333"},"content":"        List\u003cPerson\u003e filteredByClassCodeAndActivityList \u003d studentList.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"louisdavinlie"},"content":"                .filter(student -\u003e (student.hasSameClassCode(editedPerson)","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"e0544333"},"content":"                        || student.hasSameActivity(editedPerson))","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"louisdavinlie"},"content":"                        \u0026\u0026 !student.isSamePerson(editedPerson))","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"louisdavinlie"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"e0544333"},"content":"        for (Person classmate : filteredByClassCodeAndActivityList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"e0544333"},"content":"            List\u003cPerson\u003e positiveRelatedToPerson \u003d studentList.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"louisdavinlie"},"content":"                    .filter(student -\u003e (student.hasSameClassCode(classmate)","lastModifiedDate":"2022-04-04"},{"lineNumber":141,"author":{"gitId":"louisdavinlie"},"content":"                            || student.hasSameActivity(classmate))","lastModifiedDate":"2022-04-04"},{"lineNumber":142,"author":{"gitId":"e0544333"},"content":"                            \u0026\u0026 !student.isSamePerson(editedPerson)","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"louisdavinlie"},"content":"                            \u0026\u0026 student.isPositive())","lastModifiedDate":"2022-04-04"},{"lineNumber":144,"author":{"gitId":"louisdavinlie"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"e0544333"},"content":"            if (positiveRelatedToPerson.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"louisdavinlie"},"content":"                Person editedClassmate \u003d new PersonBuilder(classmate).withStatus(VALID_STATUS_NEGATIVE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"louisdavinlie"},"content":"                expectedModel.setPerson(classmate, editedClassmate);","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":213,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":214,"author":{"gitId":"louisdavinlie"},"content":"                + \" Only \" + model.getFilteredPersonList().size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":231,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX","lastModifiedDate":"2022-04-02"},{"lineNumber":232,"author":{"gitId":"louisdavinlie"},"content":"                + \" Only \" + model.getFilteredPersonList().size() + \" person(s) shown in the list.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"lzf834":3,"-":168,"e0544333":12,"louisdavinlie":77}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withActivities(VALID_ACTIVITY_BADMINTON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lzf834":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"whoisjunhong":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.activity.ActivityContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"public class FindActivityCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"                new ActivityContainsKeywordsPredicate(Collections.singletonList(\"4A\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"                new ActivityContainsKeywordsPredicate(Collections.singletonList(\"4B\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"        FindActivityCommand findFirstCommand \u003d new FindActivityCommand(firstPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"        FindActivityCommand findSecondCommand \u003d new FindActivityCommand(secondPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"        FindActivityCommand findFirstCommandCopy \u003d new FindActivityCommand(firstPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"        FindActivityCommand command \u003d new FindActivityCommand(predicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_oneKeyword_noPersonFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d preparePredicate(\"soccer\");","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"        FindActivityCommand command \u003d new FindActivityCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_oneKeyword_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d preparePredicate(\"badminton\");","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"        FindActivityCommand command \u003d new FindActivityCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_multipleKeywords_noPersonFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d preparePredicate(\"golf netball\");","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"        FindActivityCommand command \u003d new FindActivityCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d preparePredicate(\"badminton dance\");","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"        FindActivityCommand command \u003d new FindActivityCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"Fenway17"},"content":"     * Parses {@code userInput} into a {@code ActivityContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Fenway17"},"content":"    private ActivityContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Fenway17"},"content":"        return new ActivityContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Fenway17":67,"louisdavinlie":44}},{"path":"src/test/java/seedu/address/logic/commands/FindClassCodeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.person.ClassCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"public class FindClassCodeCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"                new ClassCodeContainsKeywordsPredicate(Collections.singletonList(\"4A\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"                new ClassCodeContainsKeywordsPredicate(Collections.singletonList(\"4B\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"        FindClassCodeCommand findFirstCommand \u003d new FindClassCodeCommand(firstPredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"        FindClassCodeCommand findSecondCommand \u003d new FindClassCodeCommand(secondPredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"        FindClassCodeCommand findFirstCommandCopy \u003d new FindClassCodeCommand(firstPredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"        FindClassCodeCommand command \u003d new FindClassCodeCommand(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"Fenway17"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Fenway17"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Fenway17"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_oneKeyword_noPersonFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d preparePredicate(\"4C\");","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"        FindClassCodeCommand command \u003d new FindClassCodeCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_oneKeyword_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d preparePredicate(\"4A\");","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"        FindClassCodeCommand command \u003d new FindClassCodeCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_multipleKeywords_noPersonFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d preparePredicate(\"4C 4D\");","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"        FindClassCodeCommand command \u003d new FindClassCodeCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d preparePredicate(\"4A 4B\");","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"        FindClassCodeCommand command \u003d new FindClassCodeCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"Fenway17"},"content":"     * Parses {@code userInput} into a {@code ClassCodeContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"Fenway17"},"content":"    private ClassCodeContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"Fenway17"},"content":"        return new ClassCodeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Fenway17":66,"louisdavinlie":48}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_multipleKeywords_noPersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kulz Ellen Kupz\");","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":83,"louisdavinlie":10}},{"path":"src/test/java/seedu/address/logic/commands/FindStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"public class FindStatusTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"Positive\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"Negative\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        FindStatusCommand findFirstCommand \u003d new FindStatusCommand(firstPredicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        FindStatusCommand findSecondCommand \u003d new FindStatusCommand(secondPredicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"        FindStatusCommand findFirstCommandCopy \u003d new FindStatusCommand(firstPredicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"        FindStatusCommand command \u003d new FindStatusCommand(predicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_negativeStatus_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        StatusContainsKeywordsPredicate predicate \u003d preparePredicate(\"Negative\");","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"        FindStatusCommand command \u003d new FindStatusCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_positiveStatus_onePersonFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"        StatusContainsKeywordsPredicate predicate \u003d preparePredicate(\"Positive\");","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"        FindStatusCommand command \u003d new FindStatusCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"    public void execute_closeContactStatus_multiplePersonsFound() {","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        StatusContainsKeywordsPredicate predicate \u003d preparePredicate(\"Close-Contact\");","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"        FindStatusCommand command \u003d new FindStatusCommand(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(Arrays.asList(ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"     * Parses {@code userInput} into a {@code StatusContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"lzf834"},"content":"    private StatusContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"        return new StatusContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"lzf834":66,"louisdavinlie":38}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"whoisjunhong":1,"-":19}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ACTIVITY_DESC_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ACTIVITY_DESC_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASSCODE_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASSCODE_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ACTIVITY_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withActivities(VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withActivities(VALID_ACTIVITY_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"e0544333"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withActivities().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"e0544333"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"e0544333"},"content":"                + STATUS_DESC_AMY + CLASSCODE_DESC_AMY,","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"e0544333"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"e0544333"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"e0544333"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"e0544333"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"lzf834"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + INVALID_ACTIVITY_DESC + VALID_ACTIVITY_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"whoisjunhong"},"content":"                Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"e0544333"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"e0544333"},"content":"                + STATUS_DESC_BOB + CLASSCODE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"lzf834"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + CLASSCODE_DESC_BOB + ACTIVITY_DESC_BADMINTON","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"lzf834"},"content":"                        + ACTIVITY_DESC_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lzf834":22,"Fenway17":2,"whoisjunhong":2,"-":117,"e0544333":16}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"Fenway17"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"Fenway17"},"content":"            \"unknownCommand\"));","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Fenway17":2,"-":98,"louisdavinlie":1}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ACTIVITY_DESC_BADMINTON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ACTIVITY_DESC_CHOIR;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ACTIVITY_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLASSCODE_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_CHOIR;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    private static final String ACTIVITY_EMPTY \u003d \" \" + PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"e0544333"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"e0544333"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"e0544333"},"content":"    public void parse_invalidValue_failure() { // TODO: ADD ASSERT FAILURE FOR STATUS AND CLASSCODE","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"e0544333"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS); // invalid status","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"e0544333"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CLASSCODE_DESC, ClassCode.MESSAGE_CONSTRAINTS); // invalid cc","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"e0544333"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ACTIVITY_DESC, Activity.MESSAGE_CONSTRAINTS); // activity","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"        // while parsing {@code PREFIX_ACTIVITY} alone will reset the activities of the {@code Person} being edited,","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"        // parsing it together with a valid activity results in error","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \"1\" + ACTIVITY_DESC_CHOIR + ACTIVITY_DESC_BADMINTON + ACTIVITY_EMPTY,","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"lzf834"},"content":"                Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \"1\" + ACTIVITY_DESC_CHOIR + ACTIVITY_EMPTY + ACTIVITY_DESC_BADMINTON,","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"lzf834"},"content":"                Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \"1\" + ACTIVITY_EMPTY + ACTIVITY_DESC_CHOIR + ACTIVITY_DESC_BADMINTON,","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"lzf834"},"content":"                Activity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"lzf834"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ACTIVITY_DESC_BADMINTON","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + ACTIVITY_DESC_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"                .withActivities(VALID_ACTIVITY_BADMINTON, VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"lzf834"},"content":"        // activities","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"lzf834"},"content":"        userInput \u003d targetIndex.getOneBased() + ACTIVITY_DESC_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"lzf834"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withActivities(VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"lzf834"},"content":"                + ACTIVITY_DESC_CHOIR + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + ACTIVITY_DESC_CHOIR","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"lzf834"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + ACTIVITY_DESC_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"lzf834"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withActivities(VALID_ACTIVITY_CHOIR,","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"lzf834"},"content":"    public void parse_resetActivities_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"lzf834"},"content":"        String userInput \u003d targetIndex.getOneBased() + ACTIVITY_EMPTY;","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"lzf834"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withActivities().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lzf834":24,"whoisjunhong":1,"-":181,"e0544333":16}},{"path":"src/test/java/seedu/address/logic/parser/FindActivityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"import seedu.address.logic.commands.FindActivityCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.activity.ActivityContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"public class FindActivityCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    private FindActivityCommandParser parser \u003d new FindActivityCommandParser();","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"                FindActivityCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        FindActivityCommand expectedFindActivityCommand \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"                new FindActivityCommand(new ActivityContainsKeywordsPredicate(Arrays.asList(\"4A\")));","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        assertParseSuccess(parser, \"4A\", expectedFindActivityCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Fenway17":30}},{"path":"src/test/java/seedu/address/logic/parser/FindClassCodeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"import seedu.address.logic.commands.FindClassCodeCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"import seedu.address.model.person.ClassCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"public class FindClassCodeCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    private FindClassCodeCommandParser parser \u003d new FindClassCodeCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"                FindClassCodeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        FindClassCodeCommand expectedFindClassCodeCommand \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"                new FindClassCodeCommand(new ClassCodeContainsKeywordsPredicate(Arrays.asList(\"4A\")));","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        assertParseSuccess(parser, \"4A\", expectedFindClassCodeCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Fenway17":31}},{"path":"src/test/java/seedu/address/logic/parser/FindStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"import seedu.address.logic.commands.FindStatusCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"public class FindStatusCommandParserTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    private FindStatusCommandParser parser \u003d new FindStatusCommandParser();","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"                FindStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        assertParseFailure(parser, \" \\n Positive \\n \\t Negative  \\t\", String.format(","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindStatusCommand.ERRMSG_STATUS));","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"        FindStatusCommand expectedFindStatusCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"                new FindStatusCommand(new StatusContainsKeywordsPredicate(Arrays.asList(\"Positive\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        assertParseSuccess(parser, \"Positive\", expectedFindStatusCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"lzf834":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_PHONE_TOO_LONG \u003d \"6512347890123456\";","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_PHONE_TOO_SHORT \u003d \"65\";","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_ACTIVITY \u003d \"#friend\";","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_STATUS \u003d \"almost covid positive\";","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_ADDRESS_TOO_LONG \u003d \"fakjsdhfklasdjhflkadsjhflkasdjhfkalj \\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"            + \" sdhfklajsdhflkajsdhflkasdfas asdf\";","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_EMAIL_TOO_LONG \u003d \"fakjsdhfklasdjhflkadsjhflkasdjhfkalj@\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"            + \"sdhfklajsdhflkajsdhflkasdfasaasadfadfasdfdf\";","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_ACTIVITY_TOO_LONG \u003d \"fakjsdhfklasdjhflkadsjhflkasdjhfkalj@\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"            + \"sdhfklajsdhflkajsdhflkasdfasaasadfadfasdfdf\";","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_NAME_TOO_LONG \u003d \"Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_CLASSCODE \u003d \"55G\";","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_STATUS_POS \u003d \"Positive\";","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_STATUS_NEG \u003d \"Negative\";","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_STATUS_CC \u003d \"Close-Contact\";","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_ACTIVITY_1 \u003d \"badminton\";","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_ACTIVITY_2 \u003d \"choir\";","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    private static final String VALID_CLASSCODE \u003d \"3A\";","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":"    public void parsePhone_invalidValueLongShort_throwsParseException() {","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_TOO_LONG));","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_TOO_SHORT));","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"lzf834"},"content":"    public void parseStatus_validValues() throws Exception {","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"lzf834"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS_POS);","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS_POS));","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"lzf834"},"content":"        expectedStatus \u003d new Status(VALID_STATUS_NEG);","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS_NEG));","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"lzf834"},"content":"        expectedStatus \u003d new Status(VALID_STATUS_CC);","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS_CC));","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"lzf834"},"content":"    public void parseClassCode_invalidValue_throwsParseException() {","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClassCode(INVALID_CLASSCODE));","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"lzf834"},"content":"    public void parseClassCode_validValues() throws Exception {","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"lzf834"},"content":"        ClassCode expectedCc \u003d new ClassCode(VALID_CLASSCODE);","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedCc, ParserUtil.parseClassCode(VALID_CLASSCODE));","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":155,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"lzf834"},"content":"    public void parseActivity_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseActivity(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"lzf834"},"content":"    public void parseActivity_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseActivity(INVALID_ACTIVITY));","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"lzf834"},"content":"    public void parseActivity_validValueWithoutWhitespace_returnsActivity() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"lzf834"},"content":"        Activity expectedActivity \u003d new Activity(VALID_ACTIVITY_1);","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedActivity, ParserUtil.parseActivity(VALID_ACTIVITY_1));","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"lzf834"},"content":"    public void parseActivity_validValueWithWhitespace_returnsTrimmedActivity() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_ACTIVITY_1 + WHITESPACE;","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"lzf834"},"content":"        Activity expectedActivity \u003d new Activity(VALID_ACTIVITY_1);","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedActivity, ParserUtil.parseActivity(tagWithWhitespace));","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"lzf834"},"content":"    public void parseActivities_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseActivities(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"lzf834"},"content":"    public void parseActivities_collectionWithInvalidActivities_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseActivities(Arrays.asList(VALID_ACTIVITY_1,","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"lzf834"},"content":"                INVALID_ACTIVITY)));","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"lzf834"},"content":"    public void parseActivities_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"whoisjunhong"},"content":"        assertTrue(ParserUtil.parseActivities(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"lzf834"},"content":"    public void parseActivities_collectionWithValidActivities_returnsActivitySet() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"lzf834"},"content":"        Set\u003cActivity\u003e actualActivitySet \u003d ParserUtil.parseActivities(Arrays.asList(VALID_ACTIVITY_1, VALID_ACTIVITY_2));","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"lzf834"},"content":"        Set\u003cActivity\u003e expectedActivitySet \u003d new HashSet\u003cActivity\u003e(Arrays","lastModifiedDate":"2022-03-14"},{"lineNumber":245,"author":{"gitId":"lzf834"},"content":"                .asList(new Activity(VALID_ACTIVITY_1),","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"lzf834"},"content":"                        new Activity(VALID_ACTIVITY_2)));","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedActivitySet, actualActivitySet);","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":252,"author":{"gitId":"lzf834"},"content":"    public void parseActivity_invalidValueTooLong_throwsParseException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":253,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseActivity(INVALID_ACTIVITY_TOO_LONG));","lastModifiedDate":"2022-04-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":257,"author":{"gitId":"lzf834"},"content":"    public void parseEmail_invalidValueTooLong_throwsParseException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":258,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL_TOO_LONG));","lastModifiedDate":"2022-04-05"},{"lineNumber":259,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":261,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":262,"author":{"gitId":"lzf834"},"content":"    public void parseAddress_invalidValueTooLong_throwsParseException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":263,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS_TOO_LONG));","lastModifiedDate":"2022-04-05"},{"lineNumber":264,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":265,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":267,"author":{"gitId":"lzf834"},"content":"    public void parseName_invalidValueTooLong_throwsParseException() {","lastModifiedDate":"2022-04-06"},{"lineNumber":268,"author":{"gitId":"lzf834"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME_TOO_LONG));","lastModifiedDate":"2022-04-06"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"lzf834":88,"whoisjunhong":4,"-":178}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withActivities(","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withActivities(","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"lzf834":5,"-":99}},{"path":"src/test/java/seedu/address/model/activity/ActivityContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.model.activity;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"public class ActivityContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"4A\");","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"4A\", \"4B\");","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate firstPredicate \u003d new","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"                ActivityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate secondPredicate \u003d new","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"                ActivityContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate firstPredicateCopy \u003d new","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"                ActivityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"        // different class code -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"    public void test_activityContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"        // One keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"                new ActivityContainsKeywordsPredicate(Collections.singletonList(\"Choir\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"        assertTrue(predicate.test(new PersonBuilder().withActivity(\"Choir\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"    public void test_activityDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"        ActivityContainsKeywordsPredicate predicate \u003d new ActivityContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"        assertFalse(predicate.test(new PersonBuilder().withActivity(\"Choir\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"        predicate \u003d new ActivityContainsKeywordsPredicate(Arrays.asList(\"Soccer\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"        assertFalse(predicate.test(new PersonBuilder().withActivity(\"Choir\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Fenway17":62}},{"path":"src/test/java/seedu/address/model/activity/ActivityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjunhong"},"content":"package seedu.address.model.activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"public class ActivityTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Activity(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    public void constructor_invalidActivityName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"whoisjunhong"},"content":"        String invalidActivityName \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Activity(invalidActivityName));","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    public void isValidActivityName() {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        // null activity name","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Activity.isValidActivityName(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"lzf834":4,"whoisjunhong":5,"-":17}},{"path":"src/test/java/seedu/address/model/person/ClassCodeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"public class ClassCodeContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"4A\");","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"4A\", \"4B\");","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate firstPredicate \u003d new","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"                ClassCodeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate secondPredicate \u003d new","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"                ClassCodeContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate firstPredicateCopy \u003d new","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"                ClassCodeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Fenway17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Fenway17"},"content":"        // different class code -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Fenway17"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"    public void test_classCodeContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Fenway17"},"content":"        // One keyword","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Fenway17"},"content":"                new ClassCodeContainsKeywordsPredicate(Collections.singletonList(\"4A\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Fenway17"},"content":"        assertTrue(predicate.test(new PersonBuilder().withClassCode(\"4A\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Fenway17"},"content":"    public void test_classCodeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Fenway17"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Fenway17"},"content":"        ClassCodeContainsKeywordsPredicate predicate \u003d new ClassCodeContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Fenway17"},"content":"        assertFalse(predicate.test(new PersonBuilder().withClassCode(\"4A\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Fenway17"},"content":"        predicate \u003d new ClassCodeContainsKeywordsPredicate(Arrays.asList(\"4C\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Fenway17"},"content":"        assertFalse(predicate.test(new PersonBuilder().withClassCode(\"4A\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Fenway17":61}},{"path":"src/test/java/seedu/address/model/person/ClassCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fenway17"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Fenway17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Fenway17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Fenway17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Fenway17"},"content":"public class ClassCodeTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Fenway17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Fenway17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ClassCode(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Fenway17"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Fenway17"},"content":"        String invalidClassCode \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Fenway17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ClassCode(invalidClassCode));","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Fenway17"},"content":"    public void isValidClassCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Fenway17"},"content":"        // null ClassCode","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Fenway17"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassCode.isValidClassCode(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Fenway17"},"content":"        // invalid ClassCodes","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"        assertFalse(ClassCode.isValidClassCode(\"\")); // empty string","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Fenway17"},"content":"        assertFalse(ClassCode.isValidClassCode(\" \")); // spaces only","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Fenway17"},"content":"        assertFalse(ClassCode.isValidClassCode(\"abcde\")); // not valid string","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Fenway17"},"content":"        // valid ClassCodes","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"        assertTrue(ClassCode.isValidClassCode(\"4A\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Fenway17"},"content":"        assertTrue(ClassCode.isValidClassCode(\"4B\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Fenway17":35}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getActivities().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"                .withAddress(VALID_ADDRESS_BOB).withActivities(VALID_ACTIVITY_BADMINTON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withActivities(VALID_ACTIVITY_BADMINTON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lzf834":3,"whoisjunhong":1,"-":87}},{"path":"src/test/java/seedu/address/model/person/StatusContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"public class StatusContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Positive\");","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Positive\", \"Negative\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate firstPredicate \u003d new","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"                StatusContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate secondPredicate \u003d new","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"                StatusContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate firstPredicateCopy \u003d new","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"                StatusContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    public void test_statusContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        StatusContainsKeywordsPredicate predicate \u003d new","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                StatusContainsKeywordsPredicate(Collections.singletonList(\"Positive\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStatus(\"Positive\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"        // Exception thrown for \u003e1 word in status","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"            new PersonBuilder().withStatus(\"Positive Negative\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"            assertTrue(e.getMessage() \u003d\u003d Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"        // Exception thrown for non-conforming syntax in status","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"            new PersonBuilder().withStatus(\"Pos\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"            assertTrue(e.getMessage() \u003d\u003d Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"lzf834":64}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"public class StatusTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        // null Status","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        // invalid Statuses","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        assertFalse(Status.isValidStatus(\"abcde\")); // not eny of the 3 possible statuses","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        // valid Statuses","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        assertTrue(Status.isValidStatus(\"Positive\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        assertTrue(Status.isValidStatus(\"Negative\")); // one character","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        assertTrue(Status.isValidStatus(\"Close-Contact\")); // long Status","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"lzf834":36}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withActivities(","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withActivities(","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITY_BADMINTON)","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lzf834":5,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Fenway17"},"content":"    private static final String INVALID_STATUS \u003d \"Stay Positive!\";","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"whoisjunhong"},"content":"    private static final String INVALID_CLASSCODE \u003d \"!@\";","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    private static final String INVALID_ACTIVITIES \u003d \"#friend\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Fenway17"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"whoisjunhong"},"content":"    private static final String VALID_CLASSCODE \u003d BENSON.getClassCode().toString();","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"    private static final List\u003cJsonAdaptedActivity\u003e VALID_ACTIVITIES \u003d BENSON.getActivities().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"whoisjunhong"},"content":"            .map(JsonAdaptedActivity::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"whoisjunhong"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"whoisjunhong"},"content":"                        INVALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"whoisjunhong"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"whoisjunhong"},"content":"                        INVALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"whoisjunhong"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"whoisjunhong"},"content":"                        INVALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"whoisjunhong"},"content":"                new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"whoisjunhong"},"content":"                        INVALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"                        VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-02-22"},{"lineNumber":163,"author":{"gitId":"Fenway17"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-02-22"},{"lineNumber":164,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":166,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":167,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":168,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"whoisjunhong"},"content":"                INVALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"lzf834"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"Fenway17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":175,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":176,"author":{"gitId":"Fenway17"},"content":"    @Test","lastModifiedDate":"2022-02-22"},{"lineNumber":177,"author":{"gitId":"lzf834"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"whoisjunhong"},"content":"                VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"Fenway17"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2022-02-22"},{"lineNumber":187,"author":{"gitId":"Fenway17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-22"},{"lineNumber":188,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":189,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":190,"author":{"gitId":"whoisjunhong"},"content":"    @Test","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"whoisjunhong"},"content":"    public void toModelType_invalidClassCode_throwsIllegalValueException() {","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"whoisjunhong"},"content":"                INVALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"lzf834"},"content":"        String expectedMessage \u003d ClassCode.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-02-28"},{"lineNumber":201,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"whoisjunhong"},"content":"    @Test","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"whoisjunhong"},"content":"    public void toModelType_nullClassCode_throwsIllegalValueException() {","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"whoisjunhong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"whoisjunhong"},"content":"                VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"whoisjunhong"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"whoisjunhong"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"whoisjunhong"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"whoisjunhong"},"content":"                VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"whoisjunhong"},"content":"                null,","lastModifiedDate":"2022-02-27"},{"lineNumber":213,"author":{"gitId":"lzf834"},"content":"                VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"whoisjunhong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassCode.class.getSimpleName());","lastModifiedDate":"2022-02-27"},{"lineNumber":215,"author":{"gitId":"whoisjunhong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-27"},{"lineNumber":216,"author":{"gitId":"whoisjunhong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"        List\u003cJsonAdaptedActivity\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_ACTIVITIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"lzf834"},"content":"        invalidTags.add(new JsonAdaptedActivity(INVALID_ACTIVITIES));","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":223,"author":{"gitId":"whoisjunhong"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-02-27"},{"lineNumber":224,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-02-27"},{"lineNumber":225,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-02-27"},{"lineNumber":226,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-02-27"},{"lineNumber":227,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-02-27"},{"lineNumber":228,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_STATUS,","lastModifiedDate":"2022-02-27"},{"lineNumber":229,"author":{"gitId":"whoisjunhong"},"content":"                        VALID_CLASSCODE,","lastModifiedDate":"2022-02-27"},{"lineNumber":230,"author":{"gitId":"whoisjunhong"},"content":"                        invalidTags);","lastModifiedDate":"2022-02-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lzf834":19,"Fenway17":12,"whoisjunhong":106,"-":96,"e0544333":1}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"whoisjunhong"},"content":"// import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"whoisjunhong"},"content":"// import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"whoisjunhong"},"content":"// import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"whoisjunhong"},"content":"    // private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"whoisjunhong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"             JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"whoisjunhong"},"content":"    }*/","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whoisjunhong":6,"-":42}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"e0544333"},"content":"        descriptor.setStatus(person.getStatus());","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"e0544333"},"content":"        descriptor.setClassCode(person.getClassCode());","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"whoisjunhong"},"content":"        descriptor.setActivities(person.getActivities());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"     * Sets the {@code classCode} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"    public EditPersonDescriptorBuilder withClassCode(String classCode) {","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"        descriptor.setClassCode(new ClassCode(classCode));","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"     * Parses the {@code activities} into a {@code Set\u003cActivity\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"    public EditPersonDescriptorBuilder withActivities(String... activities) {","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"        Set\u003cActivity\u003e activitySet \u003d Stream.of(activities).map(Activity::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"        descriptor.setActivities(activitySet);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lzf834":4,"whoisjunhong":2,"-":82,"e0544333":2,"louisdavinlie":17}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.ClassCode;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"e0544333"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Fenway17"},"content":"    public static final String DEFAULT_STATUS \u003d \"Negative\";","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"e0544333"},"content":"    public static final String DEFAULT_CLASSCODE \u003d \"2A\";","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"Fenway17"},"content":"    private Status status;","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"e0544333"},"content":"    private ClassCode classCode;","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"whoisjunhong"},"content":"    private Set\u003cActivity\u003e activities;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"Fenway17"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"e0544333"},"content":"        classCode \u003d new ClassCode(DEFAULT_CLASSCODE);","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"whoisjunhong"},"content":"        activities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Fenway17"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"e0544333"},"content":"        classCode \u003d personToCopy.getClassCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"whoisjunhong"},"content":"        activities \u003d new HashSet\u003c\u003e(personToCopy.getActivities());","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"    public PersonBuilder withActivities(String ... activities) {","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"        this.activities \u003d SampleDataUtil.getActivitySet(activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-02-22"},{"lineNumber":103,"author":{"gitId":"Fenway17"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2022-02-22"},{"lineNumber":104,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-02-22"},{"lineNumber":105,"author":{"gitId":"Fenway17"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2022-02-22"},{"lineNumber":106,"author":{"gitId":"Fenway17"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-02-22"},{"lineNumber":107,"author":{"gitId":"Fenway17"},"content":"        return this;","lastModifiedDate":"2022-02-22"},{"lineNumber":108,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":109,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":110,"author":{"gitId":"e0544333"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"e0544333"},"content":"     * Sets the {@code classCode} of the {@code Person} that we are building.","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"e0544333"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"e0544333"},"content":"    public PersonBuilder withClassCode(String classCode) {","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"e0544333"},"content":"        this.classCode \u003d new ClassCode(classCode);","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"e0544333"},"content":"        return this;","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"e0544333"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"e0544333"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"Fenway17"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Fenway17"},"content":"     * Sets the {@code Activity} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Fenway17"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Fenway17"},"content":"    public PersonBuilder withActivity(String stringActivities) {","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Fenway17"},"content":"        Set\u003cActivity\u003e newSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Fenway17"},"content":"        String[] activityStringArray \u003d stringActivities.split(\", \");","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Fenway17"},"content":"        for (String activityString : activityStringArray) {","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Fenway17"},"content":"            newSet.add(new Activity(activityString));","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Fenway17"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Fenway17"},"content":"        this.activities \u003d newSet;","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Fenway17"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Fenway17"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"Fenway17"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"whoisjunhong"},"content":"        return new Person(name, phone, email, address, status, classCode, activities);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"lzf834":2,"Fenway17":25,"whoisjunhong":5,"-":89,"e0544333":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"whoisjunhong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVITY;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSCODE;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"e0544333"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"whoisjunhong"},"content":"import seedu.address.model.activity.Activity;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"whoisjunhong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"e0544333"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().value + \" \");","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"e0544333"},"content":"        sb.append(PREFIX_CLASSCODE + person.getClassCode().value + \" \");","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"whoisjunhong"},"content":"        person.getActivities().stream().forEach(","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"whoisjunhong"},"content":"            s -\u003e sb.append(PREFIX_ACTIVITY + s.activityName + \" \")","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"e0544333"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.value).append(\" \"));","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"e0544333"},"content":"        descriptor.getClassCode().ifPresent(classcode -\u003e sb.append(PREFIX_CLASSCODE)","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"e0544333"},"content":"                .append(classcode.value).append(\" \"));","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"whoisjunhong"},"content":"        if (descriptor.getActivities().isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"whoisjunhong"},"content":"            Set\u003cActivity\u003e tags \u003d descriptor.getActivities().get();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"whoisjunhong"},"content":"                sb.append(PREFIX_ACTIVITY);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"whoisjunhong"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_ACTIVITY).append(s.activityName).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"whoisjunhong":9,"-":54,"e0544333":7}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_BADMINTON;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ACTIVITY_CHOIR;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSCODE_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSCODE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_NEGATIVE;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_POSITIVE;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.NEGATIVE).withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"            .withActivities(\"Badminton\").build();","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.POSITIVE).withClassCode(\"4B\")","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"            .withActivities(\"Basketball\", \"Dance\").build();","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.NEGATIVE).withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"            .withActivities(\"Dance\").build();","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.NEGATIVE).withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"            .withActivities(\"Badminton\", \"Dance\").build();","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.CLOSE_CONTACT).withClassCode(\"4B\")","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"e0544333"},"content":"            .build();","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.NEGATIVE).withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"e0544333"},"content":"            .build();","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(Status.CLOSE_CONTACT).withClassCode(\"4B\")","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"e0544333"},"content":"            .build();","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(\"Positive\").withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"e0544333"},"content":"            .build();","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"            .withStatus(\"Positive\").withClassCode(\"4A\")","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"e0544333"},"content":"            .build();","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withStatus(VALID_STATUS_POSITIVE)","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"            .withClassCode(VALID_CLASSCODE_AMY).withActivities(VALID_ACTIVITY_CHOIR).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withStatus(VALID_STATUS_NEGATIVE)","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"            .withClassCode(VALID_CLASSCODE_BOB).withActivities(VALID_ACTIVITY_CHOIR).withActivities(","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"                    VALID_ACTIVITY_BADMINTON,","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"                    VALID_ACTIVITY_CHOIR)","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"lzf834":6,"-":63,"e0544333":5,"louisdavinlie":27}}]
