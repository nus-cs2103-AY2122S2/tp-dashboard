[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T12-4/tp/actions)","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"# NUS Classes","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"**NUS Classes** is an app that enables the professors to better manage contacts from large numbers of students and staff,","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"and allows the professors to document the tasks that they need to do.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"### Features","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"Features added on top of AB3.","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"Feature | Description","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"--- | ---","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"Create Task | Add and schedule (*recurring*) tasks on NUS Classes easily with a single command.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"Update Task | Edit tasks which are outdated or when mistakes were made.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"Delete Task | Delete tasks which are unnecessary or when you are done with it.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"Un/Assign Task| Assign and unassign contacts to a task. Help with organization and planning!","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"View Task | View the people assigned to a task. Help with remembering who you are suppose to meet!","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"Tag Task | Tag a task with different tags. Help with categorizing tasks!","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"Filter Task | Too many tasks? Filter them based on keywords!","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"Alert | Forgetful? No worries, NUS Classes will remind you when tasks are approaching deadline!","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"### Others","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"* **User Guide** for NUS Classes can be found here: [User Guide](https://ay2122s2-cs2103t-t12-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"* **Developer Guide** for NUS Classes can be found here: [Developer Guide](https://ay2122s2-cs2103t-t12-4.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"### Acknowledgements","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"Additionally, this project was adopted from the existing AB3 se-education.org project. Please refer","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"to the AB3 product website **[here](https://se-education.org/addressbook-level3/)** for more information.","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"-":3,"junrong98":28,"snss231":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"    archiveName \u003d \u0027NUSClasses.jar\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"junrong98":1,"snss231":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"### Brian","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"\u003cimg src\u003d\"images/brian16600.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"[[github](https://github.com/brian16600)]] [[portfolio](team/brian16600.md)]","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"* Role: Developer","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"* Responsibilites: Code Quality","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"### Sean Ng","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"\u003cimg src\u003d\"images/snss231.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"[[github](http://github.com/snss231)]] [[portfolio](team/snss231.md)]","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"### Ong Jun Jie","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"\u003cimg src\u003d\"images/junjunjieong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"[[github](http://github.com/junjunjieong)]] [[portfolio](team/junjunjieong.md)]","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"* Responsibilities: Code quality + Deliverables and deadlines","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"### Tan Jun Rong","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"\u003cimg src\u003d\"images/junrong98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"[[github](http://github.com/junrong98)]] [[portfolio](team/junrong98.md)]","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"* Responsibilities: Code Quality, In Charge of Tagging","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"### Adrian Ong","lastModifiedDate":"2022-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"\u003cimg src\u003d\"images/adrianongjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"[[github](http://github.com/AdrianOngJJ)]] [[portfolio](team/adrianongjj.md)]","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"* Responsibilities: Glossary","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"brian16600":5,"junjunjieOng":3,"-":35,"junrong98":3,"snss231":6,"AdrianOngJJ":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"snss231"},"content":"* stores the task list data i.e., all \u0027Task\u0027 objects (which are contained in a `TaskList` object).","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"snss231"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when some `Person`\u0027s data in the list changes.","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"snss231"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g. results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when some `Task`\u0027s data in the list changes.","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"snss231"},"content":"* can save address book, task list and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"snss231"},"content":"* inherits from `AddressBookStorage`, `TaskListStorage` and `UserPrefStorage`, which means it can be treated as any one of them (if only the functionality of one is needed).","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"snss231"},"content":"### Delete person feature","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"snss231"},"content":"In NUS Classes, `Task`s are entities that maintain a list of `People` that are associated with the task.","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"snss231"},"content":"When a contact is deleted from the `AddressBook`, it is essential that the `Task`s that contain that contact are updated to also remove the contact.","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"snss231"},"content":"To implement this, upon every `DeleteCommand` execution, we call the `TaskList::removePerson` which iterate through all the tasks and remove the relevant `Person` from the tasks if present.","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"snss231"},"content":"\u003cimg src\u003d\"images/DeleteModelSequenceDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"snss231"},"content":"Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"brian16600"},"content":"**Aspect:** how relevant tasks are updated when a person is removed from the address book","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"brian16600"},"content":"* **Alternative 1 (current choice):** Iterate through all tasks to remove the relevant person.","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"snss231"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"snss231"},"content":"  * Cons: _May_ have performance issues given a large list of tasks","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"brian16600"},"content":"* **Alternative 2:** Add a reference from each Person to the Tasks they are associated with. When a person is deleted, reference all the tasks through the `Person` object to update the tasks.","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"snss231"},"content":"  * Pros: _May_ see some performance benefit (not necessary to iterate through all the tasks upon each `DeleteCommand`)","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"snss231"},"content":"  * Cons: More fragile code due to circular dependency (`Person` depends on `Task`). Not often that a Professor will delete a contact (student or tutor) in the course of a module.","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"junjunjieOng"},"content":"### Delete Task feature","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"junjunjieOng"},"content":"Delete task feature implements the following operations:","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"junjunjieOng"},"content":"* `DeleteTaskCommandParser#parse()` — Parse the index number from user command to `DeleteTaskCommand` to get the task to be deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"junjunjieOng"},"content":"* `DeleteTaskCommand#execute()` — Execute `ModelManager#deleteTask()` by parsing in the task to be deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"junjunjieOng"},"content":"* `ModelManager#deleteTask()` — Execute `TaskList#deleteCurrTask()` by parsing in the task to be deleted.","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"brian16600"},"content":"* `TaskList#deleteCurrTask()` — Deletes the task from the TaskList stored here.","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"junjunjieOng"},"content":"Step 1: User will enter the command `deletet 1` to delete the first task.","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"junjunjieOng"},"content":"Once user parse in the command, it will be handled by `AddressBookParser#parseCommand()`, then calling of `DeleteTaskCommandParser#parse()`","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"junjunjieOng"},"content":"to create `DeleteTaskCommand` and execute to delete the task from the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"junjunjieOng"},"content":"The Sequence Diagram below illustrates the interactions of how the delete task feature work.","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"junjunjieOng"},"content":"![DeleteTaskSequenceDiagram](images/DeleteTaskSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"junjunjieOng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"junjunjieOng"},"content":"Step 2: Outcome after executing `DeleteTaskCommand`","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"brian16600"},"content":"Execution flow of Activity Diagram:","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"junjunjieOng"},"content":"![DeleteTaskOutcomeActivityeDiagram](images/Activity Diagram/DeleteTaskOutcome.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"junjunjieOng"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"junjunjieOng"},"content":"**Aspect: How delete task executes:**","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"junjunjieOng"},"content":"* **Alternative 1 (current choice):** Delete task based on the index shown.","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"junjunjieOng"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"junjunjieOng"},"content":"    * Cons: Have to scroll through task list to look for task index number.","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"junjunjieOng"},"content":"* **Alternative 2:** Delete task based on the task name.","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"junjunjieOng"},"content":"    * Pros: User just have to enter the task name.","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"junjunjieOng"},"content":"    * Cons: We must do check ensure that user enter the correct spelling and spacing of the task name","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"junjunjieOng"},"content":"### Edit Task feature","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"junjunjieOng"},"content":"Edit task feature implements the following operations:","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"junjunjieOng"},"content":"* `EditTaskCommandParser#parse()` — Parse the command such as index of the task to edit and which information to update.","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"junjunjieOng"},"content":"* `EditTaskCommand#execute()` — Execute `ModelManager#setTask()` by parsing in the task to be edited and the updated version of the task.","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"junjunjieOng"},"content":"* `EditTaskDescriptor#setName()` — Set the edited task name to `EditTaskDescriptor`","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"junjunjieOng"},"content":"* `EditTaskDescriptor#setDate()` — Set the edited datetime to `EditTaskDescriptor`","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"junjunjieOng"},"content":"* `EditTaskDescriptor#setTags()` — Set the edited tags to `EditTaskDescriptor`","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"junjunjieOng"},"content":"* `ParseUtil#parseIndex()` —  Parse to get the index number of the task","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"junjunjieOng"},"content":"* `ModelManager#setTask()` — Update the task information.","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"junjunjieOng"},"content":"* `ModelManager#updateFilteredTaskList()` — Updates the filter of the filtered task list to filter by the given predicate.","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"junjunjieOng"},"content":"Step 1: User parse in command. For example, `editt 1 tn/Teach CS2103T dt/12-03-2022 1330 t/Homework`","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"junjunjieOng"},"content":"Once user parse in the command, it will be handled by `AddressBookParser#parseCommand()`, then calling of `EditTaskCommandParser#parse()`","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"junjunjieOng"},"content":"![EditTaskSequenceDiagramstate0](images/EditTaskDiagram/EditTaskSequenceDiagramState0.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"junjunjieOng"},"content":"Step 2: `EditTaskCommandParser` will call `ParseUtil#parseIndex()` to get the task index.","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"junjunjieOng"},"content":"Then `EditTaskCommandParser` will create `EditTaskDescriptor editTaskDescriptor`. `EditTaskCommandParser` will check if the","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"junjunjieOng"},"content":"task name, datetime or tag prefix exist. It is optional to not have all the prefixes as user may not want to change certain field.","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"junjunjieOng"},"content":"For each prefix in the command, it will set the value to `editTaskDescriptor`.","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"junjunjieOng"},"content":"![EditTaskSequenceDiagramstate1](images/EditTaskDiagram/EditTaskSequenceDiagramState1.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"junjunjieOng"},"content":"Step 3: `EditTaskCommandParser` will create `EditTaskCommand`, parse in `index` and `editTaskDescriptor`","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"junjunjieOng"},"content":"`EditTaskCommand` will start to execute and call `ModelManager#setTask` and `ModelManager#updateFilteredTaskList` to update","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"junjunjieOng"},"content":"the task and task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"junjunjieOng"},"content":"![EditTaskSequenceDiagramstate2](images/EditTaskDiagram/EditTaskSequenceDiagramState2.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"junjunjieOng"},"content":"Step 4: Lastly return the result.","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"junjunjieOng"},"content":"Possible outcome from the result.","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"junjunjieOng"},"content":"* Outcome 1: Successfully updated task.","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"junjunjieOng"},"content":"* Outcome 2: Throw CommandException due to index out of range or task is repeated.","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"junjunjieOng"},"content":"* ![EditTaskOutcomeActivityeDiagram](images/Activity Diagram/EditTaskOutcome.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"junjunjieOng"},"content":"The Sequence Diagram below illustrates the overall interactions of how the edit task feature work.","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"junjunjieOng"},"content":"![EditTaskSequenceDiagram](images/EditTaskSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"junjunjieOng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `EditTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"junrong98"},"content":"### View Task feature","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"junrong98"},"content":"The view task mechanism is facilitated by `ViewCommand`, `ViewCommandParser`, `ModelManager` and `Task`. Additionally, it implements the following operation:","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"junrong98"},"content":"* `ViewCommandParser#parse()` — Parses the arguments provided by the users into a command to be executed.","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"junrong98"},"content":"* `ViewCommand#execute()`  — Executes the operations required to display the people associated with a specific task.","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"junrong98"},"content":"* `ModelManager#getFilteredTaskList()`  — Gets the task list currently displayed as output to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"junrong98"},"content":"* `ModelManager#updateFilteredPersonList()`  — Updates the person list displayed as output to the user by providing the argument with a list of people.","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"junrong98"},"content":"* `Task#getPeople()` — Gets a list of people associated to a task.","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"junrong98"},"content":"Given below is an example usage scenario and how the view task mechanism behaves at each step.","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"junrong98"},"content":"Step 1. The user will enter the command `view 1` to view the people associated with the first task. The command will be handled by","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"junrong98"},"content":"`AddressBookParser#parseCommand()` which will create a `ViewCommandParser` object.","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"junrong98"},"content":"Step 2. The `ViewCommandParser` will call `ViewCommandParser#parse()` which will parse the command, returning a `ViewCommand` to be executed.","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"junrong98"},"content":"Step 3. The `ViewCommand` will call `ViewCommand#execute()` which will execute the command. It will retrieve the task list","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"junrong98"},"content":"by calling `ModelManager#getFilteredTaskList()` and retrieve the first `Task` from this list.","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"junrong98"},"content":"Step 4. Afterwards, the `ViewCommand` will call `Task#getPeople()` to obtain the list of people associated with the `Task` and pass this list as an argument to","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"junrong98"},"content":"`ModelManager#updateFilteredPersonList()` which will proceed to update the UI.","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"junrong98"},"content":"The following sequence diagram shows how the view task operation works:","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"junrong98"},"content":"![ViewSequenceDiagram](images/ViewSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"brian16600"},"content":"**Aspect:** How should the results be displayed in the *Contact* column when no one is associated with the task:","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"junrong98"},"content":"* **Alternative 1 (current choice):** Continue displaying the current list of people.","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"junrong98"},"content":"  * Pros: Reduce commands required by user to populate and use the column for input.","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"junrong98"},"content":"  * Cons: May be confusing to user.","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"junrong98"},"content":"* **Alternative 2: Display an empty list** .","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"junrong98"},"content":"  * Pros: Clearly inform the users that the task has no people associate with it.","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"junrong98"},"content":"  * Cons: Requires more commands by the user in order to use the column again.","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"junjunjieOng"},"content":"* NUS professors","lastModifiedDate":"2022-02-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"junjunjieOng"},"content":"* has a need to keep track the tasks with the respective contacts","lastModifiedDate":"2022-02-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"junjunjieOng"},"content":"**Value proposition**: Easier to organised and handle large numbers of contacts and task. Able to disseminate information in a more organise manner","lastModifiedDate":"2022-02-28"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                                   | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"snss231"},"content":"|----------|---------------------------------------------|------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                    | see usage instructions                         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | add a new person                               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | add a new task                                 | manage my schedule more efficiently                                    |","lastModifiedDate":"2022-02-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | delete a person                                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | delete a task                                  | remove the task I no longer need                                       |","lastModifiedDate":"2022-02-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | find a person by name                          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"snss231"},"content":"| `* * *`  | user                                        | assign people to tasks                         | easily keep track of the people involved in a task                     |","lastModifiedDate":"2022-03-15"},{"lineNumber":330,"author":{"gitId":"snss231"},"content":"| `* * *`  | user                                        | unassign people from tasks                     | easily maintain the list of people involved in a task                  |","lastModifiedDate":"2022-03-15"},{"lineNumber":331,"author":{"gitId":"snss231"},"content":"| `* * *`  | user                                        | find a person by name                          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-03-15"},{"lineNumber":332,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user with different persons in address book | tag my contacts                                | organize the contacts to look neater                                   |","lastModifiedDate":"2022-02-28"},{"lineNumber":333,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | filter my tasks by name                        | locate details of tasks without having to go through the entire list   |","lastModifiedDate":"2022-03-13"},{"lineNumber":334,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | view contact detail                            | know the information of the contact                                    |","lastModifiedDate":"2022-02-28"},{"lineNumber":335,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | tag the task                                   | know which task is urgent                                              |","lastModifiedDate":"2022-02-28"},{"lineNumber":336,"author":{"gitId":"junjunjieOng"},"content":"| `* * *`  | user                                        | assign and remove the task to/from my contacts | allocate my tasks to the specific contact as needed                    |","lastModifiedDate":"2022-03-13"},{"lineNumber":337,"author":{"gitId":"junrong98"},"content":"| `* * *`  | user                                        | view the contact assigned to a task            | know who I am suppose to contact                                       |","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"junjunjieOng"},"content":"| `* *`    | user                                        | get Github profile link from my contact        | view their project profile                                             |","lastModifiedDate":"2022-02-28"},{"lineNumber":339,"author":{"gitId":"junjunjieOng"},"content":"| `* *`    | user                                        | customized my profile                          |                                                                        |","lastModifiedDate":"2022-02-28"},{"lineNumber":340,"author":{"gitId":"junjunjieOng"},"content":"| `* *`    | Professor                                   | group the students based on module             | know which student is under which module                               |","lastModifiedDate":"2022-02-28"},{"lineNumber":341,"author":{"gitId":"junjunjieOng"},"content":"| `*`      | user                                        | hide contacts                                  | to keep my contact relevant without the need to delete                 |","lastModifiedDate":"2022-02-28"},{"lineNumber":342,"author":{"gitId":"junjunjieOng"},"content":"| `*`      | Professor                                   | add graded component of the module             | track students\u0027 performance of the module                              |","lastModifiedDate":"2022-02-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book  | sort persons by name                           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"snss231"},"content":"**Use case: Schedule a task with a group**","lastModifiedDate":"2022-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":376,"author":{"gitId":"snss231"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":377,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"snss231"},"content":"1. User requests to create a task","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"snss231"},"content":"2. AddressBook creates the task","lastModifiedDate":"2022-03-02"},{"lineNumber":380,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":381,"author":{"gitId":"snss231"},"content":"    Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":382,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":383,"author":{"gitId":"snss231"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":385,"author":{"gitId":"snss231"},"content":"* 1a. 0 optional arguments are provided","lastModifiedDate":"2022-03-02"},{"lineNumber":386,"author":{"gitId":"snss231"},"content":"    * 1a1. NUS Classes shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":387,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":388,"author":{"gitId":"snss231"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":389,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":390,"author":{"gitId":"snss231"},"content":"* 2a. Invalid group type/index is provided","lastModifiedDate":"2022-03-02"},{"lineNumber":391,"author":{"gitId":"snss231"},"content":"  * 2a1. NUS Classes shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":392,"author":{"gitId":"snss231"},"content":"  * Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":393,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":394,"author":{"gitId":"snss231"},"content":"**Use case: See all scheduled tasks**","lastModifiedDate":"2022-03-02"},{"lineNumber":395,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":396,"author":{"gitId":"snss231"},"content":"1. User requests to see all tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":397,"author":{"gitId":"snss231"},"content":"2. NUS Classes shows a list of scheduled tasks","lastModifiedDate":"2022-03-02"},{"lineNumber":398,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":399,"author":{"gitId":"snss231"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":400,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":401,"author":{"gitId":"snss231"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-02"},{"lineNumber":402,"author":{"gitId":"snss231"},"content":"  * Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":403,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":404,"author":{"gitId":"brian16600"},"content":"###Use case: Update task for group","lastModifiedDate":"2022-03-02"},{"lineNumber":405,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":406,"author":{"gitId":"brian16600"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":407,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"brian16600"},"content":"1. User requests to update task","lastModifiedDate":"2022-03-02"},{"lineNumber":409,"author":{"gitId":"brian16600"},"content":"2. NUS Classes shows information for the new updated task including time in dd-mm-yyyy hhmm format.","lastModifiedDate":"2022-03-02"},{"lineNumber":410,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":411,"author":{"gitId":"brian16600"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":412,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":413,"author":{"gitId":"brian16600"},"content":"* 1a. The index is out of bounds/invalid","lastModifiedDate":"2022-03-02"},{"lineNumber":414,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"brian16600"},"content":"    NUS Classes shows an error message and ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":416,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"brian16600"},"content":"###Use case: Delete contact","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"brian16600"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":420,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":421,"author":{"gitId":"brian16600"},"content":"1. User deletes contact","lastModifiedDate":"2022-03-02"},{"lineNumber":422,"author":{"gitId":"brian16600"},"content":"2. NUS Classes shows message that contact has been deleted","lastModifiedDate":"2022-03-02"},{"lineNumber":423,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":424,"author":{"gitId":"brian16600"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":425,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":426,"author":{"gitId":"brian16600"},"content":"* 1a. The index is out of bounds/invalid","lastModifiedDate":"2022-03-02"},{"lineNumber":427,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":428,"author":{"gitId":"brian16600"},"content":"    NUS Classes shows an error message and ends","lastModifiedDate":"2022-03-02"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":430,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":434,"author":{"gitId":"snss231"},"content":"**","lastModifiedDate":"2022-03-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"junjunjieOng"},"content":"4. App should not exit or shut down without user explicit command.","lastModifiedDate":"2022-02-28"},{"lineNumber":443,"author":{"gitId":"junjunjieOng"},"content":"5. App should display relevant information within 2 seconds after user enter command.","lastModifiedDate":"2022-02-28"},{"lineNumber":444,"author":{"gitId":"junjunjieOng"},"content":"6. The information stored should not change without user explicit command.","lastModifiedDate":"2022-02-28"},{"lineNumber":445,"author":{"gitId":"junjunjieOng"},"content":"7. Should be able to download and use without installer.","lastModifiedDate":"2022-02-28"},{"lineNumber":446,"author":{"gitId":"junjunjieOng"},"content":"8. Should be able to work and store information without any third party database system.","lastModifiedDate":"2022-02-28"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"AdrianOngJJ"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-03-02"},{"lineNumber":498,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":499,"author":{"gitId":"AdrianOngJJ"},"content":"## **Glossary**","lastModifiedDate":"2022-03-02"},{"lineNumber":500,"author":{"gitId":"AdrianOngJJ"},"content":"\u003cdl\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":501,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdt\u003eAPI\u003c/dt\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":502,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdd\u003eApplication Programming Interface. Enables different systems to interact with each other programmatically.\u003c/dd\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":503,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdt\u003eMainstream OS\u003c/dt\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":504,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdd\u003eWindows, Linux, Unix, OS-X\u003c/dd\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":505,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdt\u003ePrivate contact detail\u003c/dt\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":506,"author":{"gitId":"AdrianOngJJ"},"content":"  \u003cdd\u003eA contact detail that is not meant to be shared with others.\u003c/dd\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":507,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c/dl\u003e","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"brian16600":31,"junjunjieOng":82,"-":309,"junrong98":24,"snss231":50,"AdrianOngJJ":11}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"# User Guide","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"NUS Classes is a desktop app for NUS Computing professors to manage their tasks and contacts. It includes task management features such as ","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"creating tasks, tagging tasks, assigning contacts to tasks, and marking tasks as complete or incomplete. It also includes contact management features such as finding contacts, assigning contacts to specific tasks and tagging contacts. ","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"NUS Classes also provides a simple alert feature for tasks by displaying tasks in different color based on the urgency of the task. Tasks that are overdue are marked as red, whereas, tasks that are nearing deadline are marked as yellow.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"NUS Classes is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"Using NUS Classes can get your contact management tasks done faster than traditional GUI apps, saving time on otherwise tedious administrative tasks.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"    * [Help](#viewing-help--help)","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"    * [Contact Features](#contact-features)","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"        * [Adding a person](#adding-a-person-addc)","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"        * [Listing all persons](#listing-all-persons--listc)","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"        * [Editing a person](#editing-a-person--editc)","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"        * [Locating persons by name](#locating-persons-by-name-findc)","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"        * [Deleting a person](#deleting-a-person--deletec)","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"    * [Task Features](#task-features)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"        * [Adding a task](#adding-a-task-addt)","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"        * [Listing tasks](#listing-tasks-listt)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"        * [Editing a task](#editing-a-task-editt)","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"        * [Finding tasks by name](#finding-tasks-by-name-findt)","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"        * [Assigning a contact to a task](#assigning-a-contact-to-a-task-assign)","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"        * [Unassigning a contact from a task](#unassigning-a-contact-from-a-task-unassign)","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"        * [Viewing contacts assigned to a task](#viewing-contacts-assigned-to-a-task-view)","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"        * [Mark a task as done](#mark-a-task-as-done-mark)","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"        * [Unmark a task as not done](#unmark-a-task-as-not-done-unmark)","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"        * [Deleting tasks](#deleting-tasks-deletet)","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"        * [Generating emails of all contacts assigned to a task](#generating-emails-of-all-contacts-assigned-to-a-task-gen)","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"    * [Other Features](#other-features)","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"        * [Clearing all contacts](#clearing-all-contacts--clear)","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"        * [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"        * [Saving the data](#saving-the-data)","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"        * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"1. Download the latest `nusclasses.jar` from [here](https://github.com/AY2122S2-CS2103T-T12-4/tp/releases).","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"1. Copy the file to the folder you want to use as the _main folder_ for your NUS Classes manager.","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"brian16600"},"content":"1. Type the command in the command box and press `Enter` to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"brian16600"},"content":"    * **`listc`** : Lists all contacts.","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"    * **`addc`**`n/John Doe p/98765432 e/johnd@u.nus.edu u/john123 t/Schoolmate` : Adds a contact named `John Doe` to NUS Classes,","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"   with email `johnd@u.nus.edu`, Github Username `john123` and tag `Schoolmate`","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"brian16600"},"content":"    * **`deletec`**`3` : Deletes the 3rd contact shown in the current contact list.","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"brian16600"},"content":"   * `assign 1 p/ 2` : Assigns the contact at index 2 to the task at index 1.","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"brian16600"},"content":"   * **`clear`** : Clears all contacts from NUS Classes","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"### Features","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"  e.g. in `addc n/CONTACTNAME`, `CONTACTNAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"  e.g `addc n/CONTACTNAME p/PHONENUMBER e/EMAIL u/GIT_USERNAME [t/TAGS]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"# Contact Features","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"### Adding a person: `addc`","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"brian16600"},"content":"Adds a contact.","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"brian16600"},"content":"Format: `addc n/CONTACTNAME p/PHONENUMBER e/EMAIL u/GIT_USERNAME [t/TAGS]`","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"brian16600"},"content":"* `addc n/john p/12345678 e/john@nus.edu.sg u/john123 t/Schoolmate`","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"brian16600"},"content":"* `addc n/mary p/87654321 e/mary@nus.edu.sg u/maryCS t/Teammate t/Classmate`","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"brian16600"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip**","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"brian16600"},"content":"You can add multiple tags to a contact. Just put t/ before every tag!","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"### Listing all persons : `listc`","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"brian16600"},"content":"Shows a list of all persons in NUS Classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"Format: `listc`","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"### Editing a person : `editc`","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"brian16600"},"content":"Edits an existing person in NUS Classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"Format: `editc INDEX [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG] [u/GITUSERNAME]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":"* `editc 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"brian16600"},"content":"* `editc 1 p/82223333 e/Joseph@comp.nus.edu.sg` Edits the phone number and email address of the 1st person to be `82223333` and `Joseph@comp.nus.edu.sg` respectively.","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"brian16600"},"content":"    ![Result for \u0027editc\u0027](images/editcCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"brian16600"},"content":"    ","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"brian16600"},"content":"    ","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"### Locating persons by name: `findc`","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":"Format: `findc KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"* `findc John` returns `john` and `John Doe`","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"brian16600"},"content":"* `findc brian sean` returns `Brian Chow`, `Sean Ng`\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"brian16600"},"content":"    ![result for \u0027find brian sean\u0027](images/findcCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"junrong98"},"content":"### Deleting a person : `deletec`","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"brian16600"},"content":"Deletes the specified person from NUS Classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"Format: `deletec INDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"brian16600"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"brian16600"},"content":"* `listc` followed by `deletec 2` deletes the 2nd person in NUS Classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"brian16600"},"content":"* `findc Joseph` followed by `deletec 1` deletes the 1st person in the results of the `findc` command.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"brian16600"},"content":"    ![result for `deletec 1` part 1](images/deletecCommandShowcase1.png) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"brian16600"},"content":"    ![result for `deletec 1` part 2](images/deletecCommandShowcase2.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"brian16600"},"content":"# Task Features","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"brian16600"},"content":"### Adding a task: `addt`","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":196,"author":{"gitId":"brian16600"},"content":"Adds a task for a datetime with a tag.","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"brian16600"},"content":"Format: `addt tn/TASKNAME dt/DATETIME [ENDDATETIME] [t/TAG]…​ [z/LINK] [r/INTERVAL RECURRENCE]`","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"brian16600"},"content":"Note: `INTERVAL` refers to the number of days for another recurrence of the task to occur: \u003c/br\u003ee.g. `INTERVAL` of 5 for a task on 01-01-2022 would next occur on 05-01-2022.","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"brian16600"},"content":"Note: `RECURRENCE` refers to how many times the task is repeated: \u003c/br\u003e e.g. `RECURRENCE` of 5 with an `INTERVAL` of 7 means that the task repeats weekly for 5 weeks.","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"brian16600"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip** For `INTERVAL`, the values `daily`,`weekly`,`monthly`, `quarterly` and `annually` are accepted.","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":207,"author":{"gitId":"brian16600"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip** The format for TIME is in dd-mm-yyyy hhmm.","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"junjunjieOng"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":211,"author":{"gitId":"snss231"},"content":"* `addt tn/Meeting dt/17-03-2022 1800 t/School` Adds a task called Meeting for 17th March 2022, 6pm at School","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"snss231"},"content":"* `addt tn/Consultation dt/19-03-2022 1500, 19-03-2022 1600` Adds a task called Consultation taking place from `19th March 2022 3-4pm`","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"junrong98"},"content":"* `addt tn/CS2103 Lecture dt/19-03-2022 1500, 19-03-2022 1600 z/https://nus-sg.zoom.us…​ r/weekly 12`","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"junrong98"},"content":"Adds a task called CS2103 Lecture taking place from `19th March 2022 3-4pm` that occurs `weekly` for the next `12 weeks` with the `meeting link`.","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":216,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"brian16600"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"brian16600"},"content":"There cannot be an already existing tag with the same name; tags must be unique.","lastModifiedDate":"2022-03-17"},{"lineNumber":219,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"brian16600"},"content":"### Listing tasks : `listt`","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"brian16600"},"content":"Shows a list of all the tasks in the task list as per the specified filtering options. `listt` has the three folowing formats:","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"junjunjieOng"},"content":"Format: ","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"junjunjieOng"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"junjunjieOng"},"content":"`listt all/`","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"brian16600"},"content":"Shows a list of tasks that is marked as completed in the task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"junjunjieOng"},"content":"`listt c/`","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"brian16600"},"content":"Shows a list of tasks that is not mark as completed in the task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"junjunjieOng"},"content":"`listt nc/`","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"brian16600"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip**","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"brian16600"},"content":"Good usage of `listt` will help in keeping track of tasks by status!","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"junjunjieOng"},"content":"### Editing a task: `editt`","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"junjunjieOng"},"content":"Edits an existing task in the task list.","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":248,"author":{"gitId":"junjunjieOng"},"content":"Format: `editt INDEX [tn/TASKNAME] [dt/DATETIME, ENDDATETIME*] [t/TAG]`","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"snss231"},"content":"* Updates the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":251,"author":{"gitId":"snss231"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":252,"author":{"gitId":"snss231"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-02"},{"lineNumber":253,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":254,"author":{"gitId":"snss231"},"content":"Examples:","lastModifiedDate":"2022-03-02"},{"lineNumber":255,"author":{"gitId":"brian16600"},"content":"* `editt 1 tn/Meeting with TAs` Updates the name of the 1st displayed task to be `Meeting with TAs`","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"brian16600"},"content":"* `editt 2 tn/Meeting with Prof Tan dt/01-12-2022 1200, 01-12-2022 1300` Updates the name of the 2nd displayed task to be `Meeting with Profs Tan` and the date to be 1st Dec 2022, 12pm-1pm. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"brian16600"},"content":"    ![`editt 2 tn/Meeting with Prof Tan dt/01-12-2022 1200, 01-12-2022 1300`](images/edittCommandShowcase1.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"brian16600"},"content":"* `editt 1 dt/12-12-2022 1200, 12-12-2022 1400` Updates the datetime of the 1st displayed task to be on `12th Dec 2022, 12-2pm.` \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"brian16600"},"content":"    ![`editt 1 dt/12-12-2022 1200, 12-12-2022 1400`](images/edittCommandShowcase2.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"brian16600"},"content":"    ","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":266,"author":{"gitId":"snss231"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip**","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"snss231"},"content":"If there\u0027s no need to change a certain field you can leave it out!\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"brian16600"},"content":":bulb: **Tip** The `ENDDATETIME` field is optional","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"brian16600"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":271,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"brian16600"},"content":"### Finding tasks by name: `findt`","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"brian16600"},"content":"Finds tasks whose task names contain any of the given keywords.","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"brian16600"},"content":"Format: `findt KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"brian16600"},"content":"* The search is case-insensitive. e.g `eat` will match `Eat`","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"brian16600"},"content":"* The order of the keywords does not matter. e.g. `Eat Apple` will match `Apple Eat`","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"brian16600"},"content":"* Only the name is searched.","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"brian16600"},"content":"* Only full words will be matched e.g. `Apples` will not match `Apple`","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"brian16600"},"content":"* Tasks matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"brian16600"},"content":"  e.g. `Apple Pear` will return `Eat apple`, `Buy pear`","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"brian16600"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"brian16600"},"content":"* `findt with` returns `Consultation with students` and `Meeting with invigilators`","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"brian16600"},"content":"* `findt TAs lecture` returns `Meeting with TAs` and all recurrences of `CS2103T lecture` \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"brian16600"},"content":"    ![`findt TAs lecture`](images/findtCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"snss231"},"content":"### Assigning a contact to a task: `assign`","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"snss231"},"content":"Assigns a person in the contact list to a task.","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"brian16600"},"content":"Format: `assign INDEX p/PERSONINDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"snss231"},"content":"* Assigns the person at the specified `PERSONINDEX` to the task at `INDEX`. The indices refer to the index numbers shown in the corresponding displayed task/person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"snss231"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"brian16600"},"content":"* `assign 1 p/2` Assigns the 2nd person in the person list to the 1st task in the task list. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"brian16600"},"content":"    ![`assign 1 p/2](images/assignCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":302,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"brian16600"},"content":"### Unassigning a contact from a task: `unassign`","lastModifiedDate":"2022-03-17"},{"lineNumber":304,"author":{"gitId":"snss231"},"content":"Unassigns a person in the contact list from a task.","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"brian16600"},"content":"Format: `unassign INDEX p/PERSONINDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"snss231"},"content":"* Assigns the person at the specified `PERSONINDEX` to the task at `INDEX`. The indices refer to the index numbers shown in the corresponding displayed task/person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"snss231"},"content":"* If the person is not already assigned to the task, the operation will fail.","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"snss231"},"content":"* The `view` command can help you quickly identify which contacts are already assigned to a task.","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"snss231"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"snss231"},"content":"* `unassign 1 p/2` Unassigns the 2nd person in the person list from the 1st task in the task list.","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"brian16600"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"brian16600"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"brian16600"},"content":"    ![`unassign 1 p/2](images/unassignCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":318,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"brian16600"},"content":"### Viewing contacts assigned to a task: `view`","lastModifiedDate":"2022-03-17"},{"lineNumber":320,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":321,"author":{"gitId":"brian16600"},"content":"Display all contacts assigned to a given task.","lastModifiedDate":"2022-03-17"},{"lineNumber":322,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":323,"author":{"gitId":"brian16600"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-03-17"},{"lineNumber":324,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":325,"author":{"gitId":"brian16600"},"content":"* View all the contact assigned to the task located the specified `INDEX`","lastModifiedDate":"2022-03-17"},{"lineNumber":326,"author":{"gitId":"brian16600"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-17"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-17"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-17"},{"lineNumber":330,"author":{"gitId":"brian16600"},"content":"* `view 2` will display all contacts assigned to the 1st task in the task list. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"brian16600"},"content":"    ![`view 2`](images/viewtCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"junjunjieOng"},"content":"### Mark a task as done: `mark`","lastModifiedDate":"2022-03-26"},{"lineNumber":337,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":338,"author":{"gitId":"junjunjieOng"},"content":"Marks the specified task from the task list as done.","lastModifiedDate":"2022-03-26"},{"lineNumber":339,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":340,"author":{"gitId":"junjunjieOng"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":341,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":342,"author":{"gitId":"junjunjieOng"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2022-03-26"},{"lineNumber":343,"author":{"gitId":"junjunjieOng"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-26"},{"lineNumber":344,"author":{"gitId":"junjunjieOng"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":345,"author":{"gitId":"junjunjieOng"},"content":"* Icon will display a green tick to show the task is marked.","lastModifiedDate":"2022-03-26"},{"lineNumber":346,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":347,"author":{"gitId":"junjunjieOng"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"brian16600"},"content":"* `mark 2` marks the task at index 2 as done \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"brian16600"},"content":"    ![`mark 2`](images/marktCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":352,"author":{"gitId":"junjunjieOng"},"content":"### Unmark a task as not done: `unmark`","lastModifiedDate":"2022-03-26"},{"lineNumber":353,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":354,"author":{"gitId":"junjunjieOng"},"content":"Unmarks the specified task from the task list as not done.","lastModifiedDate":"2022-03-26"},{"lineNumber":355,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":356,"author":{"gitId":"junjunjieOng"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":357,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":358,"author":{"gitId":"junjunjieOng"},"content":"* Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2022-03-26"},{"lineNumber":359,"author":{"gitId":"junjunjieOng"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-26"},{"lineNumber":360,"author":{"gitId":"junjunjieOng"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"junjunjieOng"},"content":"* Icon will display a empty white box to show the task is unmarked.","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":363,"author":{"gitId":"junjunjieOng"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":364,"author":{"gitId":"brian16600"},"content":"* `unmark 2` unmarks the task at index 2 as not done. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"brian16600"},"content":"    ![`unmark 2`](images/unmarkCommandShowcase.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"brian16600"},"content":"### Deleting a task: `deletet`","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"brian16600"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":371,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"snss231"},"content":"Format: `deletet INDEX`","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"brian16600"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"brian16600"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"brian16600"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"brian16600"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"brian16600"},"content":"* `listt` followed by `deletet 1` lists out all the tasks in NUS Classes, then deletes the task at index 1.","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"brian16600"},"content":"* `findt lecture` followed by `deletet 2` lists out all tasks with the keyword `lecture`, then deletes the task at index 2. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e Finding the tasks by keyword `lecture`:","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"brian16600"},"content":"    ![`findt lecture` followed by `deletet 2`](images/deletettCommandShowcase1.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"brian16600"},"content":"    \u003cbr\u003e Deleting the lecture at index 2 `deletet 2`:","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"brian16600"},"content":"    ![`deletet 2`](images/deletetCommandShowcase2.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"snss231"},"content":"\u003ca name\u003d\"gen\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":388,"author":{"gitId":"snss231"},"content":"### Generating the emails of all the contacts assigned to a task: `gen`","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":390,"author":{"gitId":"snss231"},"content":"Displays all the emails of all the contacts assigned to the specified task and displays a button to copy the emails into your clipboard.","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":392,"author":{"gitId":"snss231"},"content":"Format: `gen INDEX`","lastModifiedDate":"2022-03-28"},{"lineNumber":393,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"snss231"},"content":"* Displays all the emails of the contacts assigned to the task at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"snss231"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"snss231"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":398,"author":{"gitId":"snss231"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"snss231"},"content":"* `gen 1` displays all the emails of the contacts assigned to the task at index 1. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":400,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":402,"author":{"gitId":"brian16600"},"content":"# Other Features","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":404,"author":{"gitId":"brian16600"},"content":"### Clearing all contacts : `clear`","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"brian16600"},"content":"Clears all contacts from NUS Classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"brian16600"},"content":"NUS Classes data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-27"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":422,"author":{"gitId":"brian16600"},"content":"NUS Classes data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":424,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":425,"author":{"gitId":"brian16600"},"content":"If your changes to the data file makes its format invalid, NUS Classes will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"brian16600"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NUS Classes home folder.","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"brian16600"},"content":"| Action                                | Format, Examples                                                                                                                                           |","lastModifiedDate":"2022-03-15"},{"lineNumber":444,"author":{"gitId":"brian16600"},"content":"|---------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-25"},{"lineNumber":445,"author":{"gitId":"brian16600"},"content":"| **Add Contact**                       | `addc n/NAME p/PHONE_NUMBER e/EMAIL u/GIT_USERNAME [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/91234567 e/jamesho@example.com u/James123 t/friend t/colleague` |","lastModifiedDate":"2022-03-25"},{"lineNumber":446,"author":{"gitId":"brian16600"},"content":"| **List Contacts**                     | `listc`                                                                                                                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":447,"author":{"gitId":"junrong98"},"content":"| **Edit Contact**                      | `editc INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [u/GITHUBUSERID] [t/TAG]…​`\u003cbr\u003e                                                                           |","lastModifiedDate":"2022-03-26"},{"lineNumber":448,"author":{"gitId":"junrong98"},"content":" | **Find Contact**                      | `findc KEYWORD [MORE_KEYWORDS]...`                                                                                                                         |","lastModifiedDate":"2022-03-26"},{"lineNumber":449,"author":{"gitId":"junrong98"},"content":"| **Delete**                            | `deletec INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                       |","lastModifiedDate":"2022-03-26"},{"lineNumber":450,"author":{"gitId":"brian16600"},"content":"| **Add Task**                          | `addt tn/TASKNAME dt/DATETIME[, ENDDATETIME] [t/TAG]…​ [z/LINK] [r/INTERVAL RECURRENCE]`                                                                   |","lastModifiedDate":"2022-03-25"},{"lineNumber":451,"author":{"gitId":"brian16600"},"content":"| **List Tasks**                        | `listt`                                                                                                                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":452,"author":{"gitId":"junrong98"},"content":"| **Edit Task**                         | `editt INDEX [tn/TASKNAME] [dt/DATETIME, ENDDATETIME*] [t/TAG]`                                                                                            |","lastModifiedDate":"2022-03-26"},{"lineNumber":453,"author":{"gitId":"brian16600"},"content":"| **Find Task**                         | `findt KEYWORD [MORE_KEYWORDS]`                                                                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":454,"author":{"gitId":"brian16600"},"content":"| **Assign contact \u003cbr\u003e To Task**       | `assign INDEX p/PERSONINDEX`                                                                                                                               |","lastModifiedDate":"2022-03-25"},{"lineNumber":455,"author":{"gitId":"brian16600"},"content":"| **Unassign contact \u003cbr\u003e From Task**   | `unassign INDEX p/PERSONINDEX`                                                                                                                             |","lastModifiedDate":"2022-03-25"},{"lineNumber":456,"author":{"gitId":"brian16600"},"content":"| **View contacts\u003cbr\u003eAssigned to Task** | `view INDEX`                                                                                                                                               |","lastModifiedDate":"2022-03-25"},{"lineNumber":457,"author":{"gitId":"brian16600"},"content":"| **Mark Task**                         | `mark INDEX`                                                                                                                                               |","lastModifiedDate":"2022-03-27"},{"lineNumber":458,"author":{"gitId":"brian16600"},"content":"| **Unmark Task**                       | `unmark INDEX`                                                                                                                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":459,"author":{"gitId":"brian16600"},"content":"| **Delete Task**                       | `deletet INDEX`                                                                                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":460,"author":{"gitId":"brian16600"},"content":"| **Clear all contacts**                | `clear`                                                                                                                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":461,"author":{"gitId":"brian16600"},"content":"| **Exit**                              | `exit`                                                                                                                                                     |","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"brian16600":215,"junjunjieOng":42,"-":139,"junrong98":21,"snss231":43,"AdrianOngJJ":1}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"brian16600"},"content":"    .gitUsername {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"snss231"},"content":"    content: \"NUS Classes\";","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brian16600":1,"-":293,"snss231":1}},{"path":"docs/diagrams/Activity Diagram/DeleteTaskOutcome.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"(*) --\u003e \"DeleteTask command executed\"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"if \"Delete task successful\" then","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"  -left-\u003e[true] \"Message display: Deleted Task: Index\"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"  -\u003e (*)","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"else","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"  -right-\u003e[false] \"throw CommandException\"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"  --\u003e(*)","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"junjunjieOng":9}},{"path":"docs/diagrams/Activity Diagram/EditTaskOutcome.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"(*) --\u003e \"EditTask command executed\"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"if \"Edit task successful\" then","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"  -left-\u003e[true] \"Message display: Update Task: \u0027Index\u0027\"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"  -\u003e (*)","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"else","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"  -right-\u003e[false] \"throw CommandException\"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"  --\u003e(*)","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"junjunjieOng":9}},{"path":"docs/diagrams/DeleteModelSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"participant \":TaskList\" as TaskList MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"[-\u003e DeleteCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"DeleteCommand -\u003e Model : deletePerson(target)","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"Model -\u003e AddressBook : removePerson(target)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"activate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"Model -\u003e TaskList : removePerson(target)","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"activate TaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"TaskList --\u003e Model","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"deactivate TaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"snss231":32}},{"path":"docs/diagrams/DeleteTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"participant \":DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"[-\u003e LogicManager : execute(\"deletet 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletet 1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"create DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser -\u003e DeleteTaskCommandParser : DeleteTaskCommandParser()","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser -\u003e DeleteTaskCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"create DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand : DeleteTaskCommand(1)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommand --\u003e DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"destroy DeleteTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"LogicManager -\u003e DeleteTaskCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"Model --\u003e DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommand -\u003e CommandResult : CommandResult(...)","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"CommandResult --\u003e DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"DeleteTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"junjunjieOng":69}},{"path":"docs/diagrams/EditTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"participant \":EditTaskCommandParser\" as EditTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"participant \"ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"participant \"editTaskDescriptor:EditTaskDescriptor\" as EditTaskDescriptor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"participant \":EditTaskCommand\" as EditTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":" -\u003e LogicManager : parseCommand(\"editt ...\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"editt ...\")","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"create EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser -\u003e EditTaskCommandParser : EditTaskCommandParser()","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser -\u003e EditTaskCommandParser : parse(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -\u003e ParserUtil : parseIndex(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"ParserUtil -\u003e EditTaskCommandParser : index","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"create EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -\u003e EditTaskDescriptor : EditTaskDescriptor()","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"EditTaskDescriptor --\u003e EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"opt Task name present","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    EditTaskCommandParser -\u003e EditTaskDescriptor : setName(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    activate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    EditTaskDescriptor --\u003e EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"    deactivate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"opt DateTime present","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"    EditTaskCommandParser -\u003e EditTaskDescriptor : setDate(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    activate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"    EditTaskDescriptor --\u003e EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    deactivate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"opt Tags present","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -\u003e ParserUtil : parseTags(...)","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"ParserUtil --\u003e EditTaskCommandParser : Tags","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -\u003e EditTaskDescriptor : setTags(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"EditTaskDescriptor --\u003e EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"create EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -\u003e EditTaskCommand : EditTaskCommand(index, editTaskDescriptor)","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommand --\u003e EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"destroy EditTaskCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"LogicManager -\u003e EditTaskCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"activate EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommand -\u003e Model : setTask(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommand -\u003e Model : updateFilteredTaskList(...)","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommand -\u003e CommandResult : CommandResult(...)","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"CommandResult --\u003e EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"EditTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"junjunjieOng":111}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskList\" as ReadOnlyTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"Class TaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"Class Task","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"Class Username","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"Class Link","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"AddressBook .up..|\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"TaskList .up..|\u003e ReadOnlyTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"Model .down.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"Model .down.\u003e ReadOnlyTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"ModelManager -up-\u003e \"1\" UserPrefs","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"ModelManager -right-\u003e \"1\" TaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"TaskList --\u003e \"~* \" Task","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"UniquePersonList --\u003e \"~* \" Person","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"Person *--\u003e Username","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"Task -\u003e \"*\" Tag","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"Task -down-\u003e \"0 .. 1\" Link","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"Task -[hidden]left-----\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"ModelManager --\u003e\"~*\" Person","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"ModelManager --\u003e\"~*\" Task","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":41,"junrong98":1,"snss231":21}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"ArgumentMultimap ..\u003e Prefix","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":38,"snss231":1}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"package \"TaskList Storage\" #F4F6F6{","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nTaskListStorage\" as TaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"Class JsonTaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"Class JsonSerializableTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"StorageManager -down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"StorageManager -right-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"StorageManager -left-\u003e \"1\" TaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"Storage -down-|\u003e UserPrefsStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"Storage -down-|\u003e AddressBookStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"Storage -down-|\u003eTaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"JsonTaskListStorage .up.|\u003e TaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"JsonTaskListStorage ..\u003e JsonSerializableTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"JsonSerializableTaskList --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"snss231":20}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"Class TaskListPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"Class TaskCard","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"PersonCard ...\u003e Model","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"snss231":8}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"participant \":ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"participant \":Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"create ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"AddressBookParser -\u003e ViewCommandParser : ViewCommandParser()","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"activate ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"activate ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"create ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"ViewCommandParser -\u003e ViewCommand : ViewCommand(1)","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"activate ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"ViewCommand --\u003e ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"deactivate ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"destroy ViewCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"activate ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"ViewCommand -\u003e Model : getFilteredTaskList()","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"ViewCommand -\u003e Task : getPeople()","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"activate Task","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"Task --\u003e ViewCommand : x","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"deactivate Task","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"ViewCommand -\u003e Model : updateFilteredPersonList(x)","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"ViewCommand -\u003e CommandResult : CommandResult(...)","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"deactivate ViewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"junrong98":80}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"title: NUS Classes","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"[![CI Status](https://github.com/ay2122s2-cs2103t-t12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/ay2122s2-cs2103t-t12-4/tp/actions)","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"[![codecov](https://codecov.io/gh/ay2122s2-cs2103t-t12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/ay2122s2-cs2103t-t12-4/tp)","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"**NUS Classes is a desktop application for managing your contacts and tasks, with features such as marking tasks, assigning tasks to contacts and searching for tasks or contacts.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"* If you are interested in using NUS Classes, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"* If you are interested about developing NUS Classes, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"a","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brian16600":3,"junjunjieOng":1,"-":13,"snss231":2}},{"path":"docs/team/adrianongjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"---","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"title: Ong John Jun, Adrian Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"### Project: NUSClasses","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"NUS Classes is an app that enables the professors to better manage contacts from large numbers of students and staff, and allow the professor to document the task that he/she needs to do.","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"** Will update in future**","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"  * What it does: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"  * Justification: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAdrianOngJJ\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"  * Will be updated","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"  * Will be updated","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    * Will be updated soon","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    * Updated Glossary [\\#22](../DeveloperGuide.md)","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"AdrianOngJJ":40}},{"path":"docs/team/brian16600.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"title: Brian\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":"### Project: NUS Classes","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"NUS Classes is a desktop address book application used for professors to better manage contacts as well as schedule tasks.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"    * Added documentation for the features `add contact` and `add task` [\\#72]()","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo.","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"brian16600":47}},{"path":"docs/team/junjunjieong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"title: Ong Jun Jie Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"### Project: NUSClasses","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"NUS Classes is an app that enables the professors to better manage contacts from large numbers of students and staff, and allow the professor to document the task that he/she needs to do.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" ** Will update in future**","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"  * What it does: to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"  * Justification: to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djunjunjieOng\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"* **Project management**:","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"  * Will be updated","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"  * User Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    * Added documentation for the features `remove` [\\#6](../UserGuide.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    * Updated `user profile` and `value proposition` [\\#7](../DeveloperGuide.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    * Updated `User Stories` [\\#7](../DeveloperGuide.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    * Updated `Non-functional requirement` [\\#7](../DeveloperGuide.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"* **Community**:","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"junjunjieOng":44}},{"path":"docs/team/junrong98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"title: Jun Rong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"### Project: Nus Classes","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"NUS Classes is an app that enables the professors to better manage contacts from large numbers of students and staff, and allow the professor to document the task that he/she needs to do.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"** Will update in future**","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    * What it does: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    * Justification: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    * Highlights: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djunrong98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    * Will be updated","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        * Added documentation for the features `Tagging a task`","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        * Update documentation for the features `Adding a person`","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    * ReadMe:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"      * Update ReadMe.","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"junrong98":41}},{"path":"docs/team/snss231.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"title: Sean\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"snss231":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"        JsonTaskListStorage tasksStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, tasksStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        ReadOnlyTaskList initialTaskListData;","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"                logger.info(\"AddressBook data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"                logger.info(\"TaskList data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"snss231"},"content":"            initialTaskListData \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"            initialTaskListData \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"            initialTaskListData \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialTaskListData);","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"snss231"},"content":"        logger.info(\"Starting NUS Classes \" + MainApp.VERSION);","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"snss231"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping NUS Classes ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":176,"junrong98":25,"snss231":4}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_INVALID_DATE_RANGE \u003d \"The end date must be after the start date!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_TAG_TOO_LONG \u003d \"Error: Tags can be at most 50 characters in length.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"            + \"The following tag(s) are too long:\\n%s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":12,"snss231":4,"AdrianOngJJ":1}},{"path":"src/main/java/seedu/address/commons/util/TagUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TAG_TOO_LONG;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":" * Static library of methods related to Tags","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"public class TagUtil {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"     * Checks if any of the tags is too long (more than 50 characters).","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"     * @return null if none of the tags are too long, error message otherwise.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    public static String checkTagLength(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"        if (tags.stream().anyMatch(tag -\u003e tag.tagName.length() \u003e 50)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"            return String.format(MESSAGE_TAG_TOO_LONG,","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"                    tags.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"                            .filter(tag -\u003e tag.tagName.length() \u003e 50)","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"                            .reduce(\"\", (str, tag) -\u003e tag + \"\\n\" + str, (s1, s2) -\u003e s1 + s2));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"        };","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"        return null;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"snss231":28}},{"path":"src/main/java/seedu/address/commons/util/TranslatorUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public class TranslatorUtil {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    //Reused from https://www.baeldung.com/java-initialize-hashmap","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, Integer\u003e periodMap \u003d Map.ofEntries(","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        new AbstractMap.SimpleEntry\u003cString, Integer\u003e(\"annually\", 365),","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        new AbstractMap.SimpleEntry\u003cString, Integer\u003e(\"quarterly\", 120),","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        new AbstractMap.SimpleEntry\u003cString, Integer\u003e(\"monthly\", 30),","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        new AbstractMap.SimpleEntry\u003cString, Integer\u003e(\"weekly\", 7),","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        new AbstractMap.SimpleEntry\u003cString, Integer\u003e(\"daily\", 1)","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * Get the mapping of period to no. of days.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     * @return Return the mapping of period to no. of days.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public static Map\u003cString, Integer\u003e getPeriodMapping() {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        return periodMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"junrong98":17,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the Task List.","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"     * @see seedu.address.model.Model#getTaskList()","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"junjunjieOng":8,"-":50,"junrong98":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"        return model.getTaskList();","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"junjunjieOng":7,"-":81,"junrong98":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GIT_USERNAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.util.TagUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to NUS Classes. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"            + PREFIX_GIT_USERNAME + \"GIT_USERNAME \"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"            + PREFIX_GIT_USERNAME + \"john123\"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in NUS Classes!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"    public static final String MESSAGE_DUPLICATE_GIT_USERNAME \u003d \"This Github username already exists in NUS Classes!\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"            + \"Check again?\";","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"This email already exists in NUS Classes!\\nCheck again?\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"This phone number already exists in NUS Classes!\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"            + \"Check again?\";","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"brian16600"},"content":"        if (model.hasUsername(toAdd.getUsername())) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"brian16600"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GIT_USERNAME);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"brian16600"},"content":"        if (model.hasEmail(toAdd.getEmail())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"brian16600"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"        if (model.hasPhone(toAdd.getPhone())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"snss231"},"content":"        String checkTagLength \u003d TagUtil.checkTagLength(toAdd.getTags());","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"snss231"},"content":"        //null value represents no tags are too long.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"snss231"},"content":"        if (checkTagLength !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"snss231"},"content":"            throw new CommandException(checkTagLength);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brian16600":21,"-":61,"snss231":10}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_RANGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKNAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.util.TagUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":" * Represents an AddTaskCommand.","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    /* Message printed if wrong usage */","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d \"addt\" + \": Adds a task to NUS Classes. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"            + PREFIX_TASKNAME + \"TASKNAME \"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"            + PREFIX_DATETIME + \"DATETIME [, ENDDATETIME]\"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"            + \" [\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"            + \" [\" + PREFIX_LINK + \"LINK] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"            + \" [\" + PREFIX_RECURRING + \"PERIOD RECURRENCE]\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            + \"Example: \" + \"addt\" + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"            + PREFIX_TASKNAME + \"Lecture \"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"            + PREFIX_DATETIME + \"25-12-2022 1800 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            + PREFIX_TAG + \"CS2103T \"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"            + PREFIX_LINK + \"https://... \"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"            + PREFIX_RECURRING + \"5 5\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            + \"Hint: for \" + PREFIX_RECURRING + \" you can use predefined values [annually, quarterly, monthly,\"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"            + \" weekly, daily] for the period field.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    public static final String COMMAND_WORD \u003d \"addt\";","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    public static final String ADD_TASK_SUCCESS \u003d \"Task added!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    private final String taskName;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    private final Link link;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    private final int recurrence;","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    private final int period;","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"    private final boolean isTaskMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     * Constructor for AddTaskCommand. Takes in 6 parameters, taskName, dateTime, tags,","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     * link, recurrence, and period. There can be multiple tags.","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"     * @param taskName Name of Task.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"     * @param dateTime LocalDateTime object to represent date time of Task.","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"     * @param tags A set of tags link to the Task.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"     * @param link Link of a task.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"     * @param recurrence The number of times the task should recur.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"     * @param period The number of days apart each task should be.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"snss231"},"content":"    public AddTaskCommand(String taskName, LocalDateTime dateTime, LocalDateTime endDateTime, Set\u003cTag\u003e tags, Link link,","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"                          int recurrence, int period) {","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        requireAllNonNull(taskName, dateTime, tags, link);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"snss231"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"        this.recurrence \u003d recurrence;","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"        this.isTaskMarkDone \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"snss231"},"content":"     * Constructor for AddTaskCommand without period or recurrence.","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"snss231"},"content":"    public AddTaskCommand(String taskName, LocalDateTime dateTime, LocalDateTime endDateTime, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"snss231"},"content":"                          Link link) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"        this(taskName, dateTime, endDateTime, tags, link, 0, 0);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"snss231"},"content":"        String checkTagLength \u003d TagUtil.checkTagLength(tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"snss231"},"content":"        //null value represents no tags are too long.","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"snss231"},"content":"        if (checkTagLength !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"snss231"},"content":"            throw new CommandException(checkTagLength);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"snss231"},"content":"        Task taskToBeAdded \u003d new Task(taskName, dateTime, endDateTime, tags, link, isTaskMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"snss231"},"content":"        if (taskToBeAdded.hasInvalidDateRange()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_RANGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"        model.getTaskList().addTask(taskToBeAdded);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"        for (int i \u003d 1; i \u003c period; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"            LocalDateTime temp \u003d dateTime.plusDays(i * recurrence);","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"snss231"},"content":"            LocalDateTime tempEnd \u003d endDateTime.plusDays(i * recurrence);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"snss231"},"content":"            taskToBeAdded \u003d new Task(taskName, temp, tempEnd, tags, link, isTaskMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"            model.getTaskList().addTask(taskToBeAdded);","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"        return new CommandResult(ADD_TASK_SUCCESS);","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":3,"junrong98":76,"snss231":36}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add the person identified by the index number \"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"            + \"used in the displayed person list \"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"            + \"to the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"            + \"Parameters: TASK_INDEX \" + PREFIX_PERSON + \"PERSON_INDEX\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_PERSON + \"2\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_ADD_PERSON_TO_TASK_SUCCESS_MULTIPLE \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"            \"Added %1$s, Number: %2$s to the task: `%3$s`\\nThere are currently %4$s people assigned to this task.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_ADD_PERSON_TO_TASK_SUCCESS_SINGLE \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            \"Added %1$s, Number: %2$s to the task: `%3$s`\\nThere is currently %4$s person assigned to this task.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            \"Failed: The person %1$s is already assigned to the task: `%2$s`\";","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"    private final Index personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"     * @param taskIndex of the task in the filtered task list to be added to","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"     * @param personIndex of the person in the filtered person list to add","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"    public AssignCommand(Index taskIndex, Index personIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"        List\u003cPerson\u003e shownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"        List\u003cTask\u003e shownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"        if (personIndex.getZeroBased() \u003e\u003d shownPersonList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d shownTaskList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"snss231"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d shownTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"snss231"},"content":"        Person personToAdd \u003d shownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"snss231"},"content":"        if (taskToEdit.getPeople().contains(personToAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            throw new CommandException(","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"                    String.format(MESSAGE_DUPLICATE_PERSON, personToAdd.getName(), taskToEdit));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"snss231"},"content":"        Task updatedTask \u003d getUpdatedTask(personToAdd, taskToEdit);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"snss231"},"content":"        model.setTask(taskToEdit, updatedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"        int numberOfPeople \u003d updatedTask.getNoOfPeople();","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"        if (numberOfPeople \u003c\u003d 1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"                    String.format(MESSAGE_ADD_PERSON_TO_TASK_SUCCESS_SINGLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"                            personToAdd.getName(), personToAdd.getPhone(), updatedTask, numberOfPeople));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                String.format(MESSAGE_ADD_PERSON_TO_TASK_SUCCESS_MULTIPLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"                        personToAdd.getName(), personToAdd.getPhone(), updatedTask, numberOfPeople));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"     * Obtains the updated task.","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"     * @param personToAdd Person object to be added.","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     * @param taskToUpdate Task to be changed.","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     * @return New edited Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"     * @throws CommandException If command format is wrong.","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"snss231"},"content":"    private Task getUpdatedTask(Person personToAdd, Task taskToUpdate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"snss231"},"content":"        List\u003cPerson\u003e updatedList \u003d new ArrayList\u003c\u003e(taskToUpdate.getPeople());","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"snss231"},"content":"        updatedList.add(personToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"snss231"},"content":"        Task editedTask \u003d new Task(taskToUpdate.getName(), taskToUpdate.getDateTime(), taskToUpdate.getEndDateTime(),","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"                updatedList, taskToUpdate.getTags(), taskToUpdate.getLink(), taskToUpdate.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"        return editedTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"snss231"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"snss231"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"snss231"},"content":"                || (other instanceof AssignCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 personIndex.equals(((AssignCommand) other).personIndex)","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 taskIndex.equals(((AssignCommand) other).taskIndex));","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":1,"junrong98":32,"snss231":81}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"    private final String emails;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"        this.emails \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"     * @return","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"    public CommandResult(String feedbackToUser, String emails) {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"        this.exit \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"        this.emails \u003d requireNonNull(emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"    public String getEmails() {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"        return emails;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"snss231"},"content":"    public boolean isGenerateEmails() {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"snss231"},"content":"        return this.emails !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 emails \u003d\u003d otherCommandResult.emails;","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"snss231"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"    public String toString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"        return getFeedbackToUser();","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brian16600":2,"-":71,"snss231":25}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"junrong98":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * Deletes a task identified using it\u0027s displayed index.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    public static final String COMMAND_WORD \u003d \"deletet\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GIT_USERNAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.util.TagUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"            + \"[\" + PREFIX_GIT_USERNAME + \"GITUSERNAME]...\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"            + PREFIX_GIT_USERNAME + \"john123\";","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"snss231"},"content":"        String checkTagLength \u003d TagUtil.checkTagLength(editedPerson.getTags());","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"snss231"},"content":"        //null value represents no tags are too long.","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"snss231"},"content":"        if (checkTagLength !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"snss231"},"content":"            throw new CommandException(checkTagLength);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"brian16600"},"content":"        GitUsername updatedGitUsername \u003d editPersonDescriptor.getUsername().orElse(personToEdit.getUsername());","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"brian16600"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedGitUsername, updatedTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"brian16600"},"content":"        private GitUsername gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"brian16600"},"content":"            setUsername(toCopy.gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"brian16600"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, gitUsername, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"brian16600"},"content":"        public void setUsername(GitUsername gitUsername) {","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"brian16600"},"content":"            this.gitUsername \u003d gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"brian16600"},"content":"        public Optional\u003cGitUsername\u003e getUsername() {","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"brian16600"},"content":"            return Optional.ofNullable(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"brian16600"},"content":"                    \u0026\u0026 getUsername().equals(e.getUsername())","lastModifiedDate":"2022-03-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"brian16600":12,"junjunjieOng":5,"-":210,"junrong98":1,"snss231":9}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_RANGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKNAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.util.TagUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":" * Edits the details of an existing task in the task list.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"editt\";","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edit and update the details of the task identified\"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"            + \"by the index number used in the displayed task list. \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"            + \"[\" + PREFIX_TASKNAME + \"TASK NAME] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"            + \"[\" + PREFIX_DATETIME + \"TIME(dd-mm-yyyy hhmm)] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"            + PREFIX_TASKNAME + \"CS2103T Lecture \"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"            + PREFIX_DATETIME + \"12-03-2022 1330 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"            + PREFIX_TAG + \"Lecture\";","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Updated Task: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in your task list.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"snss231"},"content":"        String checkTagLength \u003d TagUtil.checkTagLength(editedTask.getTags());","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"snss231"},"content":"        //null value represents no tags are too long.","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"snss231"},"content":"        if (checkTagLength !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"snss231"},"content":"            throw new CommandException(checkTagLength);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"snss231"},"content":"        if (editedTask.hasInvalidDateRange()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_RANGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"        String editName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"        LocalDateTime editDate \u003d editTaskDescriptor.getDate().orElse(taskToEdit.getDateTime());","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"snss231"},"content":"        LocalDateTime editEndDate \u003d editTaskDescriptor.getEndDate();","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"        Set\u003cTag\u003e editTag \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"        Link link \u003d editTaskDescriptor.getLink().orElse(taskToEdit.getLink());","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"        boolean isTaskMarkDone \u003d taskToEdit.isTaskMark();","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"snss231"},"content":"        return new Task(editName, editDate, editEndDate, editTag, link, isTaskMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"junjunjieOng"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"junjunjieOng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"junjunjieOng"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"junjunjieOng"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"junjunjieOng"},"content":"        // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"junjunjieOng"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"junjunjieOng"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"junjunjieOng"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"junjunjieOng"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"junjunjieOng"},"content":"        private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"junjunjieOng"},"content":"        private LocalDateTime dateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"snss231"},"content":"        private LocalDateTime endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"        private Link link;","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"junjunjieOng"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"junjunjieOng"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"junjunjieOng"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"junjunjieOng"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"junjunjieOng"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"junjunjieOng"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"junjunjieOng"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"junjunjieOng"},"content":"            setDate(toCopy.dateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"snss231"},"content":"            setEndDate(toCopy.endDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"            setLink(toCopy.link);","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"junjunjieOng"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"junjunjieOng"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"junjunjieOng"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"junjunjieOng"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"            return CollectionUtil.isAnyNonNull(name, dateTime, tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"junjunjieOng"},"content":"        public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"junjunjieOng"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"junjunjieOng"},"content":"        public Optional\u003cString\u003e getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"junjunjieOng"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"junjunjieOng"},"content":"        public void setDate(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"junjunjieOng"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"snss231"},"content":"        public void setEndDate(LocalDateTime endDateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"snss231"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"        public void setLink(Link link) {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"            this.link \u003d link;","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"junjunjieOng"},"content":"        public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"junjunjieOng"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"snss231"},"content":"        public LocalDateTime getEndDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"snss231"},"content":"            return endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"junrong98"},"content":"        public Optional\u003cLink\u003e getLink() {","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"junrong98"},"content":"            return Optional.ofNullable(link);","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"junjunjieOng"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"junjunjieOng"},"content":"         * Sets {@code tag} to this object\u0027s {@code tag}.","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"junjunjieOng"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"junjunjieOng"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"junrong98"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"junrong98"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"junjunjieOng"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"junjunjieOng"},"content":"         * Returns an unmodifiable tag, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"junjunjieOng"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"junjunjieOng"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"junjunjieOng"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"junrong98"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"            return Optional.ofNullable(tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"junjunjieOng"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"junjunjieOng"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"junjunjieOng"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"junjunjieOng"},"content":"                return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"junjunjieOng"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"junjunjieOng"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"junjunjieOng"},"content":"                return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"junjunjieOng"},"content":"            // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"junjunjieOng"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"junjunjieOng"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"junjunjieOng"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"junjunjieOng"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junjunjieOng":178,"junrong98":24,"snss231":30}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NUS CLasses as requested ...\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"snss231":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":41,"junrong98":1}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":" * Finds and lists all tasks in task storage whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"findt\";","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" apple orange pear\";","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":5,"AdrianOngJJ":38}},{"path":"src/main/java/seedu/address/logic/commands/GenerateEmailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"public class GenerateEmailsCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"    public static final String COMMAND_WORD \u003d \"gen\";","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"            + \": Generates all the emails of the people related to the task \"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"            + \"identified by the index number in the task list.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_NO_CONTACTS_ASSIGNED \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"            \"Failed: There are no contacts assigned to the task %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"    private static final String MESSAGE_GENERATED_EMAILS \u003d \"Here are the emails related to the task %1$s:\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"            + \"%2$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"    public GenerateEmailsCommand(Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"        List\u003cTask\u003e shownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d shownTaskList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"        Task task \u003d shownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"        if (task.getNoOfPeople() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"            return new CommandResult(String.format(MESSAGE_NO_CONTACTS_ASSIGNED, task));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"        String emails \u003d task.getEmails();","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"        return new CommandResult(String.format(MESSAGE_GENERATED_EMAILS, task, emails), emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"snss231":55}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"junrong98":1}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_ALL_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_COMPLETE_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_INCOMPLETE_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MARK_TASKS;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_UNMARK_TASKS;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" * Lists all tasks in the address book to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"listt\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List tasks\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"            + \"Parameters: [\" + PREFIX_LIST_ALL_TASK + \"] for all (complete + incomplete) tasks,\\n \"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"            + \"[\" + PREFIX_LIST_INCOMPLETE_TASK + \"] for incomplete tasks and\\n \"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"            + \"[\" + PREFIX_LIST_COMPLETE_TASK + \"] for complete tasks\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_LIST_ALL_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    private String prefix;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for ListTaskCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"     * @param prefix prefix based on user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    public ListTaskCommand(String prefix) {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        if (prefix.equals(\"all\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"        } else if (prefix.equals(\"c\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_MARK_TASKS);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_UNMARK_TASKS);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                || (other instanceof ListTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 prefix.equals(((ListTaskCommand) other).prefix)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"junjunjieOng":31,"junrong98":24,"snss231":4}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * Marks a task identified using it\u0027s displayed index as completed.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"            + \": Marks the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for MarkTaskCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * @param targetIndex the index of the task.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        model.markTask(taskToMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"                || (other instanceof MarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":59}},{"path":"src/main/java/seedu/address/logic/commands/UnassignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"public class UnassignCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"    public static final String COMMAND_WORD \u003d \"unassign\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Remove the person identified by the index number\"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"            + \"used in the displayed person list \"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"            + \"to the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"            + \"Parameters: TASK_INDEX + \" + PREFIX_PERSON + \"PERSON_INDEX\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_PERSON + \"2\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_PREFIX \u003d \"Removed %1$s, Number: %2$s from the task `%3$s`\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    public static final String NO_PERSON_ASSIGN \u003d MESSAGE_PREFIX","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"            + \"There are currently no people assigned to this task.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_REMOVE_PERSON_FROM_TASK_SUCCESS_MULTIPLE \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            MESSAGE_PREFIX + \"There are currently %4$s people assigned to this task.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_REMOVE_PERSON_FROM_TASK_SUCCESS_SINGLE \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"            MESSAGE_PREFIX + \"There is currently %4$s person assigned to this task.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_PERSON_NOT_IN_TASK \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"            \"Failed: The person selected is not associated with the task\";","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"    private final Index personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"     * @param taskIndex of the task in the filtered task list to be added to","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"     * @param personIndex of the person in the filtered person list to add","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"    public UnassignCommand(Index taskIndex, Index personIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"        List\u003cPerson\u003e shownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"        List\u003cTask\u003e shownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"        if (personIndex.getZeroBased() \u003e\u003d shownPersonList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"snss231"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d shownTaskList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"snss231"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d shownTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"snss231"},"content":"        Person personToRemove \u003d shownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"snss231"},"content":"        Task updatedTask \u003d getUpdatedTask(personToRemove, taskToEdit);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"snss231"},"content":"        model.setTask(taskToEdit, updatedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"        int numberOfPeople \u003d updatedTask.getNoOfPeople();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"        if (numberOfPeople \u003d\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"                    String.format(NO_PERSON_ASSIGN,","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"                            personToRemove.getName(), personToRemove.getPhone(), updatedTask));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        if (numberOfPeople \u003d\u003d 1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"                    String.format(MESSAGE_REMOVE_PERSON_FROM_TASK_SUCCESS_SINGLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                            personToRemove.getName(), personToRemove.getPhone(), updatedTask, numberOfPeople));","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"                String.format(MESSAGE_REMOVE_PERSON_FROM_TASK_SUCCESS_MULTIPLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"                        personToRemove.getName(), personToRemove.getPhone(), updatedTask, numberOfPeople));","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"     * Obtains the updated task.","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     * @param personToRemove Person object to be removed.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"     * @param taskToUpdate Task to be changed.","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"     * @return New edited Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"     * @throws CommandException If command format is wrong.","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"snss231"},"content":"    private Task getUpdatedTask(Person personToRemove, Task taskToUpdate) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"snss231"},"content":"        List\u003cPerson\u003e updatedList \u003d new ArrayList\u003c\u003e(taskToUpdate.getPeople());","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"snss231"},"content":"        if (!updatedList.remove(personToRemove)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_IN_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"snss231"},"content":"        Task editedTask \u003d new Task(taskToUpdate.getName(), taskToUpdate.getDateTime(), taskToUpdate.getEndDateTime(),","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"                updatedList, taskToUpdate.getTags(), taskToUpdate.getLink(), taskToUpdate.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"snss231"},"content":"        return editedTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"snss231"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"snss231"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"snss231"},"content":"                || (other instanceof UnassignCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 personIndex.equals(((UnassignCommand) other).personIndex)","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 taskIndex.equals(((UnassignCommand) other).taskIndex));","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":1,"junrong98":36,"snss231":81}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * Unmarks a task identified using it\u0027s displayed index as not complete.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"            + \": Unmarks the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for UnmarkTaskCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     * @param targetIndex the index of the task.","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        model.unmarkTask(taskToMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                || (other instanceof UnmarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":59}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.PersonContainInTask;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":" * Finds and lists all persons in address book who were assigned to a given task.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display all contacts assigned to the task identified \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"            + \"by the index number used in the displayed task list. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"    public static final String NO_CONTACT_ASSIGN \u003d \"Failed: There are no contacts assigned to task %d.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"    public static final String DISPLAY_TASK_CONTACT_SUCCESS \u003d \"Found %1$d contact(s) assigned to this task\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * The constructor for ViewTaskCommand class","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @param targetIndex The index of the task to be targeted.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        Task taskToDisplay \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"        List\u003cPerson\u003e listOfPeople \u003d taskToDisplay.getPeople();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"        int listSize \u003d listOfPeople.size();","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"        if (listSize \u003c 1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"            return new CommandResult(String.format(NO_CONTACT_ASSIGN, targetIndex.getOneBased()));","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        PersonContainInTask predicate \u003d new PersonContainInTask(listOfPeople);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        listSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"snss231"},"content":"                String.format(DISPLAY_TASK_CONTACT_SUCCESS, listSize));","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"junrong98":68,"snss231":5}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GIT_USERNAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * @param args String object of user input to be parsed.","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @return AddCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"                 ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"                         PREFIX_GIT_USERNAME, PREFIX_TAG);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GIT_USERNAME)","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        GitUsername gitUsername \u003d ParserUtil.parseGitUsername(argMultimap.getValue(PREFIX_GIT_USERNAME).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        Person person \u003d new Person(name, phone, email, gitUsername, tagList);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"brian16600":6,"junjunjieOng":1,"-":43,"junrong98":4,"snss231":1}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKNAME;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.util.TranslatorUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    private final String dateTimePattern \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private final SimpleDateFormat dateTimeFormatter \u003d new SimpleDateFormat(dateTimePattern);","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand for TASKNAME, DATETIME, TAG","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param args String object of user input to be parsed.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @return AddTaskCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASKNAME, PREFIX_DATETIME,","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"                        PREFIX_TAG, PREFIX_LINK, PREFIX_RECURRING);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASKNAME, PREFIX_DATETIME)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        String taskName \u003d argMultimap.getValue(PREFIX_TASKNAME).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        String dateTimeString \u003d argMultimap.getValue(PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        LocalDateTime endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        Link link \u003d ParserUtil.parseLink(argMultimap.getValue(PREFIX_LINK));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"            if (dateTimeString.contains(\",\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"                String[] splits \u003d dateTimeString.split(\",\");","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"                dateTime \u003d convertToLocalDateTime(dateTimeFormatter.parse(splits[0]));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"                endDateTime \u003d convertToLocalDateTime(dateTimeFormatter.parse(splits[1]));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"                dateTime \u003d convertToLocalDateTime(dateTimeFormatter.parse(dateTimeString));","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"                endDateTime \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        // If recurring tag is present in argument","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_RECURRING)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"            int periodInt \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            int recurrenceInt \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"            String[] periodMultipleArr \u003d ParserUtil.parseRecurring(argMultimap.getValue(PREFIX_RECURRING));","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"            String periodStr \u003d periodMultipleArr[0].toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"            String recurrenceStr \u003d periodMultipleArr[1];","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"            Map\u003cString, Integer\u003e periodMapping \u003d TranslatorUtil.getPeriodMapping();","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"            if (periodMapping.containsKey(periodStr)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"                periodInt \u003d periodMapping.get(periodStr);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"                try {","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"                    periodInt \u003d Integer.parseInt(periodStr);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                             AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"                recurrenceInt \u003d Integer.parseInt(recurrenceStr);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"                        AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"            if (periodInt \u003d\u003d 0 || recurrenceInt \u003d\u003d 0) {","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"                        AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"snss231"},"content":"            return new AddTaskCommand(taskName, dateTime, endDateTime, tags, link, periodInt, recurrenceInt);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"        return new AddTaskCommand(taskName, dateTime, endDateTime, tags, link);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"    LocalDateTime convertToLocalDateTime(Date dateToConvert) {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"        return new java.sql.Timestamp(","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"                dateToConvert.getTime()).toLocalDateTime();","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":101,"snss231":11}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.GenerateEmailsCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.UnassignCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"            return new ListTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"snss231"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"snss231"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"snss231"},"content":"        case UnassignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"snss231"},"content":"            return new UnassignCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"snss231"},"content":"        case GenerateEmailsCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"snss231"},"content":"            return new GenerateEmailsCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"junjunjieOng":17,"-":76,"junrong98":13,"snss231":12,"AdrianOngJJ":2}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PERSON);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"        Index taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"        Index personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSON)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"        taskIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"        personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PERSON).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"        return new AssignCommand(taskIndex, personIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"snss231":35}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /* Added prefix definitions */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    public static final Prefix PREFIX_TASKNAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"    public static final Prefix PREFIX_GIT_USERNAME \u003d new Prefix(\"u/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix(\"z/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public static final Prefix PREFIX_RECURRING \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    public static final Prefix PREFIX_LIST_ALL_TASK \u003d new Prefix(\"all/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    public static final Prefix PREFIX_LIST_INCOMPLETE_TASK \u003d new Prefix(\"nc/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public static final Prefix PREFIX_LIST_COMPLETE_TASK \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"brian16600":1,"junjunjieOng":3,"-":15,"junrong98":5,"snss231":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GIT_USERNAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"                        PREFIX_GIT_USERNAME);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        if (argMultimap.getValue(PREFIX_GIT_USERNAME).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"            editPersonDescriptor.setUsername(ParserUtil","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"                    .parseGitUsername(argMultimap.getValue(PREFIX_GIT_USERNAME).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"brian16600":1,"junjunjieOng":7,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKNAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        String dateTimePattern \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        SimpleDateFormat dateTimeFormatter \u003d new SimpleDateFormat(dateTimePattern);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASKNAME, PREFIX_DATETIME, PREFIX_TAG);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        if (argMultimap.getValue(PREFIX_TASKNAME).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"            editTaskDescriptor.setName(argMultimap.getValue(PREFIX_TASKNAME).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"                String dateTimeString \u003d argMultimap.getValue(PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"                if (dateTimeString.contains(\",\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"                    String[] splits \u003d dateTimeString.split(\",\");","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"                    editTaskDescriptor.setDate(convertToLocalDateTime(dateTimeFormatter.parse(splits[0])));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"                    editTaskDescriptor.setEndDate(convertToLocalDateTime(dateTimeFormatter.parse(splits[1])));","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"                } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"                    editTaskDescriptor.setDate(convertToLocalDateTime(dateTimeFormatter.parse(dateTimeString)));","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"                    editTaskDescriptor.setEndDate(null);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"snss231"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"            } catch (java.text.ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"    private LocalDateTime convertToLocalDateTime(Date dateToConvert) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"        return new java.sql.Timestamp(","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"                dateToConvert.getTime()).toLocalDateTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junjunjieOng":70,"junrong98":21,"snss231":7}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"public class FilterCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junrong98":5,"AdrianOngJJ":28}},{"path":"src/main/java/seedu/address/logic/parser/GenerateEmailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.GenerateEmailsCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"public class GenerateEmailsCommandParser implements Parser\u003cGenerateEmailsCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"    public GenerateEmailsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"            return new GenerateEmailsCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GenerateEmailsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"snss231":21}},{"path":"src/main/java/seedu/address/logic/parser/ListTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_ALL_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_COMPLETE_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST_INCOMPLETE_TASK;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * Lists the task from the task list based on prefix.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"public class ListTaskCommandParser implements Parser\u003cListTaskCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTaskCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * and returns an ListTaskCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    public ListTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LIST_ALL_TASK,","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"                        PREFIX_LIST_INCOMPLETE_TASK, PREFIX_LIST_COMPLETE_TASK);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        if (argMultimap.getValue(PREFIX_LIST_ALL_TASK).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"            return new ListTaskCommand(\"all\");","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        } else if (argMultimap.getValue(PREFIX_LIST_INCOMPLETE_TASK).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"            return new ListTaskCommand(\"nc\");","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        } else if (argMultimap.getValue(PREFIX_LIST_COMPLETE_TASK).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"            return new ListTaskCommand(\"c\");","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"                    ListTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"junjunjieOng":39}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * and returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"brian16600"},"content":"     * Parses Git username","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"brian16600"},"content":"     * @param gitUsername String input for Git username","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"     * @return GitUsername object created using user input","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"brian16600"},"content":"     * @throws ParseException If gitUsername is not in alphanumeric format","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"    public static GitUsername parseGitUsername(String gitUsername) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"brian16600"},"content":"        requireNonNull(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"brian16600"},"content":"        String trimmedUsername \u003d gitUsername.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"brian16600"},"content":"        if (!GitUsername.isValidId(trimmedUsername)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"brian16600"},"content":"            throw new ParseException(GitUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"brian16600"},"content":"        return new GitUsername(trimmedUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"junrong98"},"content":"     * Parses {@Code Optional\u003cString\u003e option} into a {@code Link}.","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"junrong98"},"content":"    public static Link parseLink(Optional\u003cString\u003e option) {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"junrong98"},"content":"        requireNonNull(option);","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":"        if (option.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"            return new Link(\"\");","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"junrong98"},"content":"            return new Link(option.get());","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"     * Parses {@Code Optional\u003cString\u003e option} into a {@code String[]}.","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"junrong98"},"content":"    public static String[] parseRecurring(Optional\u003cString\u003e option) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"junrong98"},"content":"        requireNonNull(option);","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"junrong98"},"content":"        if (option.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"junrong98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"        String arg \u003d option.get();","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"        String[] commands \u003d arg.split(\" \");","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"junrong98"},"content":"        if (commands.length !\u003d 2) {","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"junrong98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"junrong98"},"content":"        return commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"snss231"},"content":"     * Checks if the given prefixes are provided in the argMultimap","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"snss231"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"snss231"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"brian16600":16,"junjunjieOng":1,"-":124,"junrong98":35,"snss231":8}},{"path":"src/main/java/seedu/address/logic/parser/UnassignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.UnassignCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"public class UnassignCommandParser implements Parser\u003cUnassignCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"     * Parses the given {@code String} of arguments in the context of the UnassignCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"     * and returns an UnassignCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"    public UnassignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PERSON);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"        Index taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"        Index personIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSON)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"        taskIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"        personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PERSON).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"        return new UnassignCommand(taskIndex, personIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"snss231":35}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * and returns a UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":28}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":" * Parses input arguments and creates a new ViewTaskCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewTaskCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * and returns a ViewTaskCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"junrong98":28}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"     * Returns true if gitUsername already exists in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"brian16600"},"content":"     * @param gitUsername Github gitUsername to be checked","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"     * @return true/false whether gitUsername already exists.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"brian16600"},"content":"    public boolean hasUsername(GitUsername gitUsername) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"brian16600"},"content":"        requireNonNull(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"brian16600"},"content":"        return persons.containsUsername(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"     * Checks if AddressBook has Email already existing.","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"brian16600"},"content":"     * @param email Email to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"brian16600"},"content":"     * @return Whether email exists.","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"brian16600"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"brian16600"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"brian16600"},"content":"        return persons.containsEmail(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"     * Checks if AddressBook has Phone number already existing.","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"     * @param phone Phone number to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"     * @return Whether phone number exists.","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"brian16600"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"brian16600"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"brian16600"},"content":"        return persons.containsPhone(phone);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brian16600":36,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    /** {@code Predicate} that evaluate to false if task is unmark */","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_UNMARK_TASKS \u003d task -\u003e !task.isTaskMark();","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    /** {@code Predicate} that evaluate to true if task is mark */","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_MARK_TASKS \u003d task -\u003e task.isTaskMark();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"     * Returns true if a person with the same gitUsername as {@code gitUsername} exists in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"     * @param gitUsername","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"     * @return Whether username exists","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"brian16600"},"content":"    boolean hasUsername(GitUsername gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"brian16600"},"content":"     * Checks if Model has Email already existing.","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"     * @param email Email to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"     * @return Whether email exists","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"brian16600"},"content":"    boolean hasEmail(Email email);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"brian16600"},"content":"     * Checks if Model has Phone already existing.","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"brian16600"},"content":"     * @param phone Phone to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"brian16600"},"content":"     * @return Whether phone exists.","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"    boolean hasPhone(Phone phone);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"     * Deletes person.","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"brian16600"},"content":"     * @param target Person to be deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"junjunjieOng"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"junjunjieOng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"junjunjieOng"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"junjunjieOng"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"junjunjieOng"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"junjunjieOng"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"snss231"},"content":"    void setTask(Task taskToEdit, Task editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"junjunjieOng"},"content":"     * Returns true if a task with the same description as {@code task} exists in the task list.","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"junjunjieOng"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the given task as completed.","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be marked.","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"junjunjieOng"},"content":"    void markTask(Task task);","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"junjunjieOng"},"content":"     * Unmarks the given task as not complete.","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be unmarked.","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"junjunjieOng"},"content":"    void unmarkTask(Task task);","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"brian16600":28,"junjunjieOng":42,"-":86,"junrong98":7,"snss231":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        requireAllNonNull(addressBook, userPrefs, taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"brian16600"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"brian16600"},"content":"    public boolean hasUsername(GitUsername gitUsername) {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"brian16600"},"content":"        requireNonNull(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"brian16600"},"content":"        return addressBook.hasUsername(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"brian16600"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"brian16600"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"brian16600"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"brian16600"},"content":"        return addressBook.hasEmail(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"brian16600"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"brian16600"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"brian16600"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"brian16600"},"content":"        return addressBook.hasPhone(phone);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"snss231"},"content":"        taskList.removePerson(target);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"        return taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"junrong98"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"junrong98"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"junrong98"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"junrong98"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"junjunjieOng"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"junjunjieOng"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"junjunjieOng"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"junjunjieOng"},"content":"        taskList.deleteCurrTask(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":209,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"snss231"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":214,"author":{"gitId":"snss231"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":215,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"snss231"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":217,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":218,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"junjunjieOng"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"junjunjieOng"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"junjunjieOng"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"junjunjieOng"},"content":"        taskList.markTask(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"junjunjieOng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"junjunjieOng"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"junjunjieOng"},"content":"        taskList.unmarkTask(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brian16600":21,"junjunjieOng":47,"-":147,"junrong98":22,"snss231":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * Returns ObservableList object containing Tasks.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @return ObservableList of Task objects representing a TaskList.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"     * Add Task to the TaskList","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":21}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":" * Contains a list of Tasks","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"public class TaskList implements Iterable\u003cTask\u003e, ReadOnlyTaskList {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public TaskList() {}","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     * Creates a TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        this();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * {@code tasks} must not contain duplicate tasks. //todo: really cannot contain duplicates?","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"     * @param taskToAdd Task to be added.","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"    public void addTask(Task taskToAdd) {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"        requireNonNull(taskToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        this.internalList.add(taskToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"        for (int i \u003d 0; i \u003c this.internalList.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"            output +\u003d this.internalList.get(i) + \"\\n\";","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        return output;","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"     * Deletes a Task to the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskToDelete Task to be deleted.","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"    public void deleteCurrTask(Task taskToDelete) {","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"        this.internalList.remove(taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"     * Replaces Task at index target in TaskList with editedTask.","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"brian16600"},"content":"     * @param target index of task to be changed.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"     * @param editedTask New task to replace the previous one.","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"snss231"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"snss231"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"snss231"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"snss231"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"snss231"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"snss231"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"     * Returns true if a task with the same description as {@code task} exists in the task list.","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"        return internalList.contains(task);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"snss231"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"snss231"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"snss231"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"snss231"},"content":"     * Removes the person from each task if the task contains the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"snss231"},"content":"     * @param target the person to be removed.","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"snss231"},"content":"    public void removePerson(Person target) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"snss231"},"content":"        internalList.forEach(task -\u003e task.removePerson(target));","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the task as completed and update the task list.","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be marked.","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"junjunjieOng"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"junjunjieOng"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"junjunjieOng"},"content":"        int index \u003d internalList.indexOf(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"junjunjieOng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"junjunjieOng"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"junjunjieOng"},"content":"        Task newTask \u003d internalList.get(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"junjunjieOng"},"content":"        newTask.markTask();","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"junjunjieOng"},"content":"        setTask(task, newTask);","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"junjunjieOng"},"content":"     * Unmarks the task as not complete and update the task list.","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be unmarked.","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"junjunjieOng"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"junjunjieOng"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"junjunjieOng"},"content":"        int index \u003d internalList.indexOf(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"junjunjieOng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"junjunjieOng"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"junjunjieOng"},"content":"        Task newTask \u003d internalList.get(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"junjunjieOng"},"content":"        newTask.unmarkTask();","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"junjunjieOng"},"content":"        setTask(task, newTask);","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"brian16600":6,"junjunjieOng":58,"junrong98":80,"snss231":26}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\", \"tasklist.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"junrong98":4}},{"path":"src/main/java/seedu/address/model/person/GitUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brian16600"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":" * GitUsername represents the Github userID of a Person.","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":"public class GitUsername {","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"brian16600"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"GitUsername should adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"            + \"1. AlphaNumeric\";","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}]*\";","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"    private String userid;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"brian16600"},"content":"     * Constructs a Github GitUsername for Person.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"brian16600"},"content":"     * @param userid String username","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"    public GitUsername(String userid) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"        this.userid \u003d userid;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"brian16600"},"content":"     * Returns username","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"brian16600"},"content":"     * @return Github username of Person","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"    public String getUsername() {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"        return this.userid;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"     * Checks if Id is a valid Id. Id must be alphanumeric without a space in front.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"     * @param test Id being checked","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"     * @return True for valid id, false for invalid id.","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"        return this.userid;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"        if (!(other instanceof GitUsername)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"        GitUsername otherGitUsername \u003d (GitUsername) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"brian16600"},"content":"        return this.userid.equals(otherGitUsername.userid);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"brian16600":56}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"    private final GitUsername gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"     * Constructs a Person object using 5 fields: name, Phone, Email, Address, and any number of tags.","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"     * @param name Name of Person.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"     * @param phone Phone Number of Person.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"     * @param email Email address of Person.","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"     * @param gitUsername Github GitUsername of Person.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"     * @param tags Tags for Person.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"    public Person(Name name, Phone phone, Email email, GitUsername gitUsername, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"        requireAllNonNull(name, phone, email, gitUsername, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"        this.gitUsername \u003d gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"    public GitUsername getUsername() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"        return this.gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"brian16600"},"content":"                \u0026\u0026 otherPerson.getUsername().equals(getUsername())","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"brian16600"},"content":"        return Objects.hash(name, phone, email, gitUsername, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"brian16600"},"content":"                .append(\"; GitUsername: \")","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"brian16600"},"content":"                .append(getUsername());","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brian16600":19,"-":112}},{"path":"src/main/java/seedu/address/model/person/PersonContainInTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":" * Tests that a {@code Person} matches any of the person object provided.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"public class PersonContainInTask implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    private final List\u003cPerson\u003e targetPersonList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public PersonContainInTask(List\u003cPerson\u003e targetPersonList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"        this.targetPersonList \u003d targetPersonList;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"        return targetPersonList.stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"                .anyMatch(targetPerson -\u003e targetPerson.isSamePerson(person));","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"junrong98":33}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"     * Returns true if the list contains a Person with an identical GitUsername as the given argument.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"     * @param toCheck Github username to be checked.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"     * @return true/false whether username already exists.","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"    public boolean containsUsername(GitUsername toCheck) {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"            if (internalList.get(i).getUsername().equals(toCheck)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"                return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"        return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"     * Returns true if the list contains a person with an identical Email.","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"brian16600"},"content":"     * @param toCheck Email to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"     * @return Whether email already exists.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"brian16600"},"content":"    public boolean containsEmail(Email toCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"brian16600"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"brian16600"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"brian16600"},"content":"            if (internalList.get(i).getEmail().equals(toCheck)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"brian16600"},"content":"                return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"brian16600"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"brian16600"},"content":"        return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"     * Returns true if the list contains a person with an identical phone.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"     * @param toCheck Phone to be checked.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"brian16600"},"content":"     * @return Whether Phone already exists.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"brian16600"},"content":"    public boolean containsPhone(Phone toCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"brian16600"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"brian16600"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"brian16600"},"content":"            if (internalList.get(i).getPhone().equals(toCheck)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"                return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"brian16600"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"        return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brian16600":48,"-":137}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric and should not be empty\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    //Format for valid tag name","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{ASCII}+\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * Returns true if a String is a valid tag name. Tag must be alphanumeric.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @param test String to be tested.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @return boolean true/false on whether tag name is valid.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"        return tagName;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"junrong98":9}},{"path":"src/main/java/seedu/address/model/task/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"public class Link {","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"    private String link \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * Constructs a {@code Link}.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"     * @param link A link","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    public Link(String link) {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"        requireNonNull(link);","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        return link;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"junrong98":27}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" * Represents a Task in NUSClasses.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":" * Task consists of a String object representing a name and a LocalDateTime object representing the date and time.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"public class Task {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    private static final DateTimeFormatter FORMAT_TIME \u003d DateTimeFormatter.ofPattern(\"h.mm a\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"    private static final DateTimeFormatter FORMAT_DAY_OF_WEEK \u003d DateTimeFormatter.ofPattern(\"EEE, h.mm a\");","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"    private static final DateTimeFormatter FORMAT_MONTH \u003d DateTimeFormatter.ofPattern(\"dd MMM, h.mm a\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    private static final DateTimeFormatter FORMAT_YEAR \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, h.mm a\");","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    private String name;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"    private List\u003cPerson\u003e people;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    private Link link;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    private boolean isMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * @param name Name of task","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"     * @param people People to be added to the list","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * @param dateTime LocalDateTime object representing Date and Time for Task","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @param tags Tags for the tasks","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * @param link Link to be added to the task","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"     * @param isMarkDone true if task is done, else false","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"    public Task(String name, LocalDateTime dateTime, LocalDateTime endDateTime, List\u003cPerson\u003e people, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"                Link link, boolean isMarkDone) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"        this.people \u003d new ArrayList\u003c\u003e(people);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        this.isMarkDone \u003d isMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"     * Constructor for Task with people but no endDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"    public Task(String name, LocalDateTime dateTime, List\u003cPerson\u003e people, Set\u003cTag\u003e tags, Link link,","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                boolean isMarkDone) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"        this(name, dateTime, null, people, tags, link, isMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"     * Constructor for Task with endDateTime but no people.","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"snss231"},"content":"    public Task(String name, LocalDateTime dateTime, LocalDateTime endDateTime, Set\u003cTag\u003e tags, Link link,","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"snss231"},"content":"                boolean isMarkDone) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"snss231"},"content":"        this(name, dateTime, endDateTime, new ArrayList\u003c\u003e(), tags, link, isMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"snss231"},"content":"     * Constructor for Task without people or endDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"snss231"},"content":"    public Task(String name, LocalDateTime dateTime, Set\u003cTag\u003e tags, Link link, boolean isMarkDone) {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"snss231"},"content":"        this(name, dateTime, null, new ArrayList\u003c\u003e(), tags, link, isMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"     * Changes name of Task.","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"     * @param name new Name to be changed.","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    public void changeName(String name) {","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"snss231"},"content":"     * Add a person to the list of people associated with the task.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"     * @param person Person to add","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"snss231"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"snss231"},"content":"        people.add(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"snss231"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"snss231"},"content":"        people.remove(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"     * Changes DateTime of Task","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"     * @param newDateTime LocalDateTime of new DateTime","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"    public void changeDateTime(LocalDateTime newDateTime) {","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"        this.dateTime \u003d newDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"snss231"},"content":"        return this.name + \" \" + dateTime.format(FORMAT_YEAR);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"snss231"},"content":"     * Checks if this task has an end date time or not.","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"snss231"},"content":"     * @return true if this task has an end date time, false otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"snss231"},"content":"    public boolean hasEndDateTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"snss231"},"content":"        return this.endDateTime !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"snss231"},"content":"     * Returns a user-friendly representation of the dateTime and endDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"snss231"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"snss231"},"content":"            return getDeadline();","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"snss231"},"content":"        return getDateTimeRange();","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"snss231"},"content":"    private String getDeadline() {","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"snss231"},"content":"        return String.format(\"Due: %s\", getUserFriendlyDateTime(dateTime));","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"snss231"},"content":"    private String getUserFriendlyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"snss231"},"content":"        LocalDateTime today \u003d LocalDate.now().atStartOfDay();","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"snss231"},"content":"        LocalDateTime date \u003d dateTime.toLocalDate().atStartOfDay();","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"snss231"},"content":"        long daysFrom \u003d Duration.between(today, date).toDays();","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"snss231"},"content":"        String result;","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"snss231"},"content":"        if (daysFrom \u003d\u003d 0) { // today","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"snss231"},"content":"            result \u003d String.format(\"Today, %s\", dateTime.format(FORMAT_TIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"snss231"},"content":"        } else if (daysFrom \u003d\u003d 1) { // tomorrow","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"snss231"},"content":"            result \u003d String.format(\"Tomorrow, %s\", dateTime.format(FORMAT_TIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"snss231"},"content":"        } else if (daysFrom \u003e\u003d 2 \u0026\u0026 daysFrom \u003c\u003d 7) { // this week","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"snss231"},"content":"            result \u003d dateTime.format(FORMAT_DAY_OF_WEEK);","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"snss231"},"content":"        } else if (date.getYear() \u003d\u003d today.getYear()) { // this year","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"snss231"},"content":"            result \u003d dateTime.format(FORMAT_MONTH);","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"snss231"},"content":"        } else { // next year onwards","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"snss231"},"content":"            result \u003d dateTime.format(FORMAT_YEAR);","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"snss231"},"content":"        return result;","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"snss231"},"content":"    private String getDateTimeRange() {","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"snss231"},"content":"        assert endDateTime !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"snss231"},"content":"        LocalDateTime date \u003d dateTime.toLocalDate().atStartOfDay();","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"snss231"},"content":"        LocalDateTime endDate \u003d endDateTime.toLocalDate().atStartOfDay();","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"snss231"},"content":"        String result;","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"snss231"},"content":"        if (Duration.between(date, endDate).toDays() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"snss231"},"content":"            result \u003d String.format(\"%s - %s\", getUserFriendlyDateTime(dateTime), endDateTime.format(FORMAT_TIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"snss231"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"snss231"},"content":"            result \u003d String.format(\"%s - %s\", getUserFriendlyDateTime(dateTime), getUserFriendlyDateTime(endDateTime));","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"snss231"},"content":"        return String.format(\"From: %s\", result);","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"snss231"},"content":"     * Returns a user-friendly representation of the endDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"snss231"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"snss231"},"content":"        return this.endDateTime.format(FORMAT_YEAR);","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"brian16600"},"content":"     * Returns DateTime of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"brian16600"},"content":"     * @return DateTime object of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"        return this.dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"snss231"},"content":"     * Returns endDateTime of Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"snss231"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"snss231"},"content":"     * @return endDateTime object of Task.","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"snss231"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"snss231"},"content":"        return this.endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"brian16600"},"content":"     * Returns name of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"brian16600"},"content":"     * @return Name of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"junrong98"},"content":"    public String getName() {","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"junrong98"},"content":"        return this.name;","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":204,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"brian16600"},"content":"     * Returns Tag of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"brian16600"},"content":"     * @return Tag of Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"junrong98"},"content":"        return this.tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"brian16600"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"brian16600"},"content":"     * Returns list of People assigned to Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"brian16600"},"content":"     * @return List of People.","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"snss231"},"content":"    public List\u003cPerson\u003e getPeople() {","lastModifiedDate":"2022-03-13"},{"lineNumber":219,"author":{"gitId":"snss231"},"content":"        return this.people;","lastModifiedDate":"2022-03-13"},{"lineNumber":220,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":222,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"junjunjieOng"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"junjunjieOng"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"junjunjieOng"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"junjunjieOng"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"junrong98"},"content":"     * Returns the number of people assigned to Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"junrong98"},"content":"     * @return Number of people.","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"junrong98"},"content":"    public int getNoOfPeople() {","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"junrong98"},"content":"        return this.people.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"snss231"},"content":"     * Returns a copy-paste friendly string containing all the emails related to this task.","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"snss231"},"content":"     * The emails will be joined with a comma separator (e.g. \"e1234578@u.nus.edu.sg, e12121212@u.nus.edu.sg\").","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"snss231"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"snss231"},"content":"     * @return The generated email string","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"snss231"},"content":"    public String getEmails() {","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"snss231"},"content":"        String[] emails \u003d this.people.stream().map(p -\u003e p.getEmail().toString()).toArray(String[]::new);","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"snss231"},"content":"        return String.join(\", \", emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"snss231"},"content":"     * Checks if this task contains the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"snss231"},"content":"     * @param p the person to check for","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"snss231"},"content":"     * @return true if this task contains the person, false otherwise.","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"snss231"},"content":"    public boolean containsPerson(Person p) {","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"snss231"},"content":"        return this.people.contains(p);","lastModifiedDate":"2022-03-22"},{"lineNumber":260,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"junrong98"},"content":"     * Returns the zoom link assigned to Task.","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"junrong98"},"content":"     * @return A link.","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"junrong98"},"content":"    public Link getLink() {","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"junrong98"},"content":"        return link;","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the isMarkDone as true to show that the task is done.","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"junjunjieOng"},"content":"    public void markTask() {","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"junjunjieOng"},"content":"        this.isMarkDone \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":277,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the isMarkDone as false to show that the task is not done.","lastModifiedDate":"2022-03-26"},{"lineNumber":280,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":281,"author":{"gitId":"junjunjieOng"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"junjunjieOng"},"content":"        this.isMarkDone \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":285,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the status if the task is mark done.","lastModifiedDate":"2022-03-26"},{"lineNumber":287,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isTaskMark() {","lastModifiedDate":"2022-03-26"},{"lineNumber":289,"author":{"gitId":"junjunjieOng"},"content":"        return isMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":290,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":291,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"snss231"},"content":"    public boolean hasInvalidDateRange() {","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"snss231"},"content":"        return endDateTime !\u003d null \u0026\u0026 dateTime.compareTo(endDateTime) \u003e\u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"snss231"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":297,"author":{"gitId":"snss231"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":298,"author":{"gitId":"snss231"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":299,"author":{"gitId":"snss231"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":300,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":301,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":302,"author":{"gitId":"snss231"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":303,"author":{"gitId":"snss231"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":304,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":305,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":306,"author":{"gitId":"snss231"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":307,"author":{"gitId":"snss231"},"content":"        return otherTask.getName().equals(this.getName())","lastModifiedDate":"2022-03-13"},{"lineNumber":308,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 otherTask.getDateTime().equals(this.getDateTime())","lastModifiedDate":"2022-03-13"},{"lineNumber":309,"author":{"gitId":"snss231"},"content":"                \u0026\u0026 otherTask.getPeople().equals(this.getPeople());","lastModifiedDate":"2022-03-13"},{"lineNumber":310,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":311,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"brian16600":23,"junjunjieOng":37,"junrong98":82,"snss231":169}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        boolean isEqual \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        for (String str: keywords) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"            if (StringUtil.containsWordIgnoreCase(task.getName(), str.trim())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"                isEqual \u003d true;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"                break;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        return isEqual;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":35,"AdrianOngJJ":2}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"snss231":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Joseph\"), new Phone(\"89993233\"), new Email(\"Joseph@nus.edu.sg\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"ProfJosephNUS\"), getTagSet(\"Colleague\", \"Lecturer\")),","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Example TA\"), new Phone(\"92624417\"), new Email(\"e111111@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"                    new GitUsername(\"TACS2103T\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"TA\", \"T-12\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Brian Chow\"), new Phone(\"87438807\"), new Email(\"e123456@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"brian16600\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"                getTagSet(\"CS2101 Group 4\", \"CS2103T Lab 12\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Sean Ng\"), new Phone(\"99272758\"), new Email(\"e234567@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"snss231\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"                getTagSet(\"Teammate\", \"CS2101 Group 4\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Adrian Ong\"), new Phone(\"93210283\"), new Email(\"e345678@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"adrianongjj\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"                getTagSet(\"CS2103T Lab 12\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Ong Jun Jie\"), new Phone(\"91031282\"), new Email(\"e456789@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"junjunjieong\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"                getTagSet(\"CS2107\", \"CS2040\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"            new Person(new Name(\"Jun Rong\"), new Phone(\"92492021\"), new Email(\"e567890@u.nus.edu\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"                new GitUsername(\"junrong98\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"                getTagSet(\"CS2030\", \"CS2107\"))","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"            new Task(\"Meeting with TAs\", LocalDateTime.now().minusDays(2),","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"Discuss tutorials\"), new Link(\"\"), true),","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"            new Task(\"Consultation with students\", LocalDateTime.now().plusDays(1),","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"Consultation\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"                    new Link(\"https://nus-sg.zoom.us/j/92307270969?pwd\u003dVVMvNWFPWFpyVHRIcXR0VkJlNkg0dz09\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"brian16600"},"content":"                    false),","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"            new Task(\"CS2103T Lecture\",","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"brian16600"},"content":"                    LocalDateTime.of(2022, 4, 8, 14, 0),","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"Week 12 Lecture\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"                    new Link(\"https://nus-sg.zoom.us/j/92307270969?pwd\u003dVVMvNWFPWFpyVHRIcXR0VkJlNkg0dz09\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"                    false),","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"            new Task(\"CS2103T Lecture\",","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"brian16600"},"content":"                    LocalDateTime.of(2022, 4, 15, 14, 0),","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"Week 13 Lecture\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"                    new Link(\"https://nus-sg.zoom.us/j/92307270969?pwd\u003dVVMvNWFPWFpyVHRIcXR0VkJlNkg0dz09\"), false),","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"            new Task(\"Meeting with exam invigilators\", LocalDateTime.now().plusWeeks(2) ,","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"                    getTagSet(\"Meeting\"), new Link(\"\"), false),","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"brian16600"},"content":"            new Task(\"CS2103T Lecture\",","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"                    LocalDateTime.of(2022, 4, 22, 14, 0),","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"brian16600"},"content":"                    getTagSet(\"Week 14 Lecture\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"                    new Link(\"https://nus-sg.zoom.us/j/92307270969?pwd\u003dVVMvNWFPWFpyVHRIcXR0VkJlNkg0dz09\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"                    false)","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"        };","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"        TaskList sampleTl \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"        return sampleTl;","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"brian16600":37,"junjunjieOng":6,"-":41,"junrong98":19}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"    private final String gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"gitUsername\") String gitUsername,","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"        this.gitUsername \u003d gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"brian16600"},"content":"        gitUsername \u003d source.getUsername().getUsername();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"        if (gitUsername \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"brian16600"},"content":"                    GitUsername.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"brian16600"},"content":"        if (!GitUsername.isValidId(gitUsername)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"brian16600"},"content":"            throw new IllegalValueException(GitUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"brian16600"},"content":"        final GitUsername modelGitUsername \u003d new GitUsername(gitUsername);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"brian16600"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGitUsername, modelTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brian16600":12,"-":98}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    private final String name;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private final String dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"    private final String endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    private final String link;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    private final String isTaskMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"                           @JsonProperty(\"endDateTime\") String endDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"link\") String link,","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                           @JsonProperty(\"isTaskMarkDone\") String isTaskMarkDone) {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        this.isTaskMarkDone \u003d isTaskMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        name \u003d source.getName();","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"        dateTime \u003d String.valueOf(source.getDateTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"        endDateTime \u003d String.valueOf(source.getEndDateTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"        link \u003d source.getLink().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"        isTaskMarkDone \u003d String.valueOf(source.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Name\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"snss231"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"dateTime\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"        LocalDateTime modelDateTime \u003d LocalDateTime.parse(dateTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"snss231"},"content":"        LocalDateTime modelEndDateTime \u003d Objects.equals(endDateTime, \"null\") ? null : LocalDateTime.parse(endDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        Set\u003cTag\u003e modelTag \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        Link modelLink \u003d new Link(link);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"        boolean modelIsTaskMarkDone \u003d Boolean.parseBoolean(isTaskMarkDone);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"        return new Task(name, modelDateTime, modelEndDateTime, modelTag, modelLink, modelIsTaskMarkDone);","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":7,"junrong98":74,"snss231":10}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brian16600":1,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"@JsonRootName(value \u003d \"tasks\")","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"public class JsonSerializableTaskList {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     * Constructs a {@code JsonSerializableTasks} with the given tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * Converts a given {@code ReadOnlyTasks} into this class for Jackson use.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTasks}.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     * Converts this address book into the model\u0027s {@code Tasks} object.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"            //if (tasks.hasTask(task)) { //todo: avoid duplicate tasks","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"            //    throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"            //}","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        return taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":54}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":" * JSON Storage for Tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    /* FilePath */","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"     * Constructor for JsonTasksStorage.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param filePath FilePath destination.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     * Returns FilePath.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"     * @return FilePath of Tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        return filePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"     * Reads Tasks","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"     * @return Optional Object containing Tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"     * @throws DataConversionException if data is in incorrect format in filepath.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"     * Reads Tasks from JSON.","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"     * @param tasksFilePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path tasksFilePath) throws DataConversionException {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTasks \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        if (!jsonTasks.isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"            return Optional.of(jsonTasks.get().toModelType());","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"     * Saves Tasks into JSON.","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"     * @param taskList Tasks object containing tasklist to be saved","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"     * @throws IOException","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"        JsonUtil.saveJsonFile(taskList, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":103}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TaskListStorage {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":31,"junrong98":10,"snss231":1}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"                          TaskListStorage taskListStorage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"junrong98"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"junrong98"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"junrong98"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"junrong98":33}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":42}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"junrong98":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    private HBox lists;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"snss231"},"content":"    private void handleEmails(String emails) {","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"snss231"},"content":"        resultDisplay.setEmails(emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"snss231"},"content":"        resultDisplay.showCopy();","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"snss231"},"content":"            if (commandResult.isGenerateEmails()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"snss231"},"content":"                handleEmails(commandResult.getEmails());","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"snss231"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"snss231"},"content":"                resultDisplay.hideCopy();","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"snss231"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"snss231"},"content":"            resultDisplay.hideCopy();","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"junjunjieOng":1,"-":196,"junrong98":11,"snss231":12}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"    private Label gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        gitUsername.setWrapText(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        email.setWrapText(true);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"        phone.setText(\"Num: \" + person.getPhone().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"brian16600"},"content":"        gitUsername.setText(\"Github: \" + person.getUsername().getUsername());","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brian16600":3,"-":73,"junrong98":5}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    private static String emails;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"    private Button copyButton;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"     * Creates the region where feedback will be displayed.","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"        this.copyButton.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"    private void copyEmails() {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"        final ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"        content.putString(emails);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"        clipboard.setContent(content);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"    public void setEmails(String emails) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        this.emails \u003d emails;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"    public void showCopy() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"        this.copyButton.setVisible(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"    public void hideCopy() {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"        this.copyButton.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":28,"snss231":31}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.net.URI;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    // Credit: Image icon taken from https://icons8.com.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    private static final String TICK_ICON \u003d \"/images/tick.png\";","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    private static final String UNTICK_ICON \u003d \"/images/untick.png\";","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    public final Task task;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    private Label id;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"    private Label name;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    private Label date;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"    private Hyperlink link;","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    private ImageView markImage;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    private Label linkLabel;","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"        super(FXML);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        name.setText(task.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"        setTaskColor(task.getDateTime());","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"snss231"},"content":"        date.setText(task.getDateTimeString());","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"junrong98"},"content":"        task.getTags().stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"junrong98"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"junrong98"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"junrong98"},"content":"        setLink();","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"        setMarkedImage(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"junrong98"},"content":"    public void setTaskColor(LocalDateTime taskDateTime) {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"        LocalDateTime todayDate \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"        if (taskDateTime.isBefore(todayDate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"            id.getStyleClass().add(\"cell_big_label_late\");","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"            name.getStyleClass().add(\"cell_big_label_late\");","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"            date.getStyleClass().add(\"cell_small_label_late\");","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"            linkLabel.getStyleClass().add(\"cell_small_label_late\");","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"        } else if (taskDateTime.isBefore(todayDate.plusDays(3))) {","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"            id.getStyleClass().add(\"cell_big_label_soon\");","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"            name.getStyleClass().add(\"cell_big_label_soon\");","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"            date.getStyleClass().add(\"cell_small_label_soon\");","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"            linkLabel.getStyleClass().add(\"cell_small_label_soon\");","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"            id.getStyleClass().add(\"cell_big_label\");","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"            name.getStyleClass().add(\"cell_big_label\");","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"            date.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"            linkLabel.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"    public void setMarkedImage(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"        if (task.isTaskMark()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"            markImage.setImage(new Image(TICK_ICON));","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"            markImage.setImage(new Image(UNTICK_ICON));","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"junrong98"},"content":"    public void setLink() {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"junrong98"},"content":"        if (task.getLink().toString() !\u003d \"\") {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"            linkLabel.setText(\"Link:\");","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"junrong98"},"content":"            link.setText(task.getLink().toString());","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"junrong98"},"content":"            link.setOnAction(new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"junrong98"},"content":"                @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"junrong98"},"content":"                public void handle(ActionEvent event) {","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"                    try {","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"junrong98"},"content":"                        Desktop.getDesktop().browse(new URI(link.getText()));","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"junrong98"},"content":"                    } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"junrong98"},"content":"                        link.getStyleClass().add(\"cell_small_hyperlink_invalid\");","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"junrong98"},"content":"                    }","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"            });","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"junrong98"},"content":"        // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":25,"junrong98":118,"snss231":2}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        super(FXML);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"                setText(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/nuslogo.jpg\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"junjunjieOng":1,"-":87,"junrong98":1}},{"path":"src/main/java/seedu/address/ui/exceptions/UiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.ui.exceptions;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"public class UiException extends Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"    public UiException(String message) {","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"        super(message);","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"     * Constructs a new {@code UiException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"    public UiException(String message, Throwable cause) {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"        super(message, cause);","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"junrong98":14}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"  \u003cTextField styleClass\u003d\"custom-text-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"junrong98":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":".cell_big_label {","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"junrong98"},"content":".cell_big_label_late {","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: #BC544B;","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"junrong98"},"content":".cell_big_label_soon {","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: #ccad10;","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"junrong98"},"content":".cell_small_label_late {","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: #BC544B;","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"junrong98"},"content":".cell_small_label_soon {","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: #ccad10;","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"junrong98"},"content":".cell_small_hyperlink {","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"brian16600"},"content":"    -fx-text-fill: #83CDE6;","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"junrong98"},"content":".cell_small_hyperlink_invalid {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"    -fx-text-fill: #FFCCCC;","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"junrong98"},"content":".pane-with-only-top-border {","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"junrong98"},"content":"     -fx-border-style: solid none none none;","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"junrong98"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":".pane-with-no-border {","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"     -fx-border-style: none;","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 5pt;","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":197,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"junrong98"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-14"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":356,"author":{"gitId":"junrong98"},"content":".list-view {","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"junrong98"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-03-14"},{"lineNumber":358,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":359,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":360,"author":{"gitId":"junrong98"},"content":".list-cell, .list-cell::focused {","lastModifiedDate":"2022-03-14"},{"lineNumber":361,"author":{"gitId":"junrong98"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-03-14"},{"lineNumber":362,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":363,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"junrong98"},"content":"    -fx-border-color: #383838 #383838 #D3D3D3 #383838;","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"junrong98"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-03-14"},{"lineNumber":381,"author":{"gitId":"junrong98"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-14"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"junrong98"},"content":".custom-text-field:hover {","lastModifiedDate":"2022-03-14"},{"lineNumber":386,"author":{"gitId":"junrong98"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-03-14"},{"lineNumber":387,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"junrong98"},"content":".custom-text-field:focus {","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"junrong98"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-03-14"},{"lineNumber":391,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":392,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":393,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":395,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"brian16600":1,"junrong98":83,"-":330}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"\u003cfx:root maxHeight\u003d\"715\" minHeight\u003d\"710\" minWidth\u003d\"850\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUS Classes\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    \u003cImage url\u003d\"@/images/nuslogo.jpg\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"      \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-only-top-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-no-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        \u003cHBox fx:id\u003d\"lists\" alignment\u003d\"CENTER\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-no-border\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"          \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"1080\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"            \u003cLabel\u003eTasks\u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"1080\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"            \u003cLabel\u003eContacts\u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"junrong98"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junrong98"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"junrong98"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"junjunjieOng":14,"-":47,"junrong98":11}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"      \u003cLabel fx:id\u003d\"gitUsername\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gitUsername\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brian16600":1,"-":34,"junrong98":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"\u003cAnchorPane maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"    \u003cTextArea AnchorPane.leftAnchor\u003d\"10\" AnchorPane.topAnchor\u003d\"10\" AnchorPane.bottomAnchor\u003d\"10\" AnchorPane.rightAnchor\u003d\"10\" fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"    \u003cButton AnchorPane.RightAnchor\u003d\"10\" AnchorPane.topAnchor\u003d\"10\" fx:id\u003d\"copyButton\" onAction\u003d\"#copyEmails\" text\u003d\"Copy\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"-":5,"snss231":6}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$taskname\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"               \u003cLabel fx:id\u003d\"linkLabel\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                   \u003cminWidth\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"                       \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"                       \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"                   \u003c/minWidth\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"            \u003cHyperlink fx:id\u003d\"link\" styleClass\u003d\"cell_small_hyperlink\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"   \u003cImageView fx:id\u003d\"markImage\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":21,"junrong98":31}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":8}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"        assertNotNull(AppUtil.getImage(\"/images/nuslogo.jpg\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"junrong98":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"brian16600"},"content":"*/","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"brian16600"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"junrong98"},"content":"        String deleteCommand \u003d \"deletec 9\";","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"brian16600"},"content":"    */","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brian16600":9,"-":154,"junrong98":9}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":43,"junrong98":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"brian16600"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"brian16600"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"brian16600"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"brian16600"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"brian16600"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"brian16600"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"junrong98"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"junrong98"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"snss231"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"snss231"},"content":"        public void setTask(Task taskToEdit, Task editedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"snss231"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"junrong98"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"junrong98"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"junrong98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"junjunjieOng"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"junjunjieOng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"junjunjieOng"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"junjunjieOng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"junjunjieOng"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"junjunjieOng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"brian16600"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"brian16600"},"content":"        public boolean hasUsername (GitUsername gitUsername) {","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"brian16600"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"brian16600"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"junjunjieOng"},"content":"        public void markTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"junjunjieOng"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"junjunjieOng"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"junjunjieOng"},"content":"        public void unmarkTask(Task task) {","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"junjunjieOng"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"brian16600":21,"junjunjieOng":25,"-":192,"junrong98":13,"snss231":5}},{"path":"src/test/java/seedu/address/logic/commands/AssignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"class AssignCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"    void execute_addFirstPersonToFirstTask_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"        Person personToAdd \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        Task updatedTask \u003d new Task(taskToEdit.getName(), taskToEdit.getDateTime(),","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"                taskToEdit.getPeople(), taskToEdit.getTags(), taskToEdit.getLink(), taskToEdit.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"        updatedTask.addPerson(personToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList(model.getTaskList()));","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"        expectedModel.setTask(taskToEdit, updatedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"        AssignCommand assignCommand \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"                new AssignCommand(Index.fromZeroBased(0), Index.fromZeroBased(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"        assertFalse(taskToEdit.getPeople().contains(personToAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"                AssignCommand.MESSAGE_ADD_PERSON_TO_TASK_SUCCESS_SINGLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"                personToAdd.getName(), personToAdd.getPhone(), updatedTask, updatedTask.getNoOfPeople());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"        assertCommandSuccess(assignCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"    void execute_addDuplicatePersonToTask_failure() {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        Person personToAdd \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        Task updatedTask \u003d new Task(taskToEdit.getName(), taskToEdit.getDateTime(),","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"                taskToEdit.getPeople(), taskToEdit.getTags(), taskToEdit.getLink(), taskToEdit.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"        updatedTask.addPerson(personToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"        AssignCommand assignCommand \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"                new AssignCommand(Index.fromZeroBased(0), Index.fromZeroBased(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList(model.getTaskList()));","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"        expectedModel.setTask(taskToEdit, updatedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"                AssignCommand.MESSAGE_DUPLICATE_PERSON, personToAdd.getName(), updatedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"snss231"},"content":"        assertCommandFailure(assignCommand, expectedModel, expectedMessage);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":2,"junrong98":6,"snss231":58}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"junrong98":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKNAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"    //------------------------ For task--------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"    public static final String VALID_NAME_TASKA \u003d \"Homework\";","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"    public static final String VALID_NAME_TASKB \u003d \"Brush my teeth\";","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"    public static final LocalDateTime VALID_DATETIME_TASKA \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"            LocalDateTime.of(2022, 12, 15, 21, 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"    public static final LocalDateTime VALID_DATETIME_TASKB \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"            LocalDateTime.of(2022, 02, 05, 13, 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"    public static final String VALID_TAG_TASKA \u003d \"Schoolwork\";","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"    public static final String VALID_TAG_TASKB \u003d \"Toilet\";","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"    public static final EditTaskCommand.EditTaskDescriptor TASK_A;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"    public static final EditTaskCommand.EditTaskDescriptor TASK_B;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"    public static final String NAME_DESC_TASKA \u003d \" \" + PREFIX_TASKNAME + VALID_NAME_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"    public static final String NAME_DESC_TASKB \u003d \" \" + PREFIX_TASKNAME + VALID_NAME_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"    public static final String DATETIME_DESC_TASKA \u003d \" \" + PREFIX_DATETIME + \"15-12-2022 2100\";","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"    public static final String DATETIME_DESC_TASKB \u003d \" \" + PREFIX_DATETIME + \"05-02-2022 1300\";","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"    public static final String TAG_DESC_TASKA \u003d \" \" + PREFIX_TAG + VALID_TAG_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"    public static final String TAG_DESC_TASKB \u003d \" \" + PREFIX_TAG + VALID_TAG_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"    public static final String INVALID_DATETIME_DESC \u003d PREFIX_DATETIME + \"22/11/2022 1220\"; // Wrong format","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"        TASK_A \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKA)","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"                .withDateTime(VALID_DATETIME_TASKA).withTags(VALID_TAG_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"        TASK_B \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKB)","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"                .withDateTime(VALID_DATETIME_TASKB).withTags(VALID_TAG_TASKB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"junjunjieOng"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"junjunjieOng"},"content":"     * {@code model}\u0027s Task List.","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"junjunjieOng"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"junjunjieOng"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"junjunjieOng"},"content":"        final String taskName \u003d task.getName();","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"junrong98"},"content":"        String[] arrTaskName \u003d taskName.split(\" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"junrong98"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(arrTaskName)));","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"junjunjieOng":43,"-":128,"junrong98":2,"snss231":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalAssignedTasks.getTypicalAssignedTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"snss231"},"content":"    public void execute_personInTask_isRemovedFromTask() {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"snss231"},"content":"        Model mod \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAssignedTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"snss231"},"content":"        Model expectedMod \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAssignedTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"snss231"},"content":"        Person personToDelete \u003d mod.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"snss231"},"content":"        DeleteCommand deleteCommand \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"snss231"},"content":"                new DeleteCommand(Index.fromZeroBased((0)));","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"snss231"},"content":"        assertTrue(mod.getFilteredTaskList().stream().anyMatch(task -\u003e task.containsPerson(personToDelete)));","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"snss231"},"content":"        expectedMod.deletePerson(personToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"snss231"},"content":"        assertCommandSuccess(deleteCommand, mod, expectedMessage, expectedMod);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"snss231"},"content":"        assertTrue(expectedMod.getFilteredTaskList().stream().allMatch(task -\u003e !task.containsPerson(personToDelete)));","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":106,"junrong98":4,"snss231":21}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"        DeleteTaskCommand deleteFirstTaskCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommandCopy));","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"brian16600":6,"junjunjieOng":110}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"junrong98"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"brian16600":3,"junjunjieOng":1,"-":167,"junrong98":10}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_A;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_B;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"brian16600"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTaskCommand.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withTaskName(VALID_NAME_TASKB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"                new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKB).build());","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"        Task taskInList \u003d model.getTaskList().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"junjunjieOng"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"junjunjieOng"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"junjunjieOng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"junjunjieOng"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"junjunjieOng"},"content":"                new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKB).build());","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"junjunjieOng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"junjunjieOng"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, TASK_A);","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"junjunjieOng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(TASK_A);","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"junjunjieOng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"junjunjieOng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"junjunjieOng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"junjunjieOng"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TASK, TASK_A)));","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"junjunjieOng"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_TASK, TASK_B)));","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"brian16600":12,"junjunjieOng":153}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"junrong98":3}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"junrong98":3}},{"path":"src/test/java/seedu/address/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"    private Model model;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(new ListTaskCommand(\"\"), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(new ListTaskCommand(\"all\"), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand listAllTaskCommand \u003d new ListTaskCommand(\"all\");","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand listCompleteTaskCommand \u003d new ListTaskCommand(\"c\");","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand listIncompleteTaskCommand \u003d new ListTaskCommand(\"nc\");","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(listAllTaskCommand.equals(listAllTaskCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand listAllTaskCommandCopy \u003d new ListTaskCommand(\"all\");","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(listAllTaskCommand.equals(listAllTaskCommandCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        // different prefix -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(listCompleteTaskCommand.equals(listIncompleteTaskCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"junjunjieOng":21,"junrong98":38}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, taskToMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.deleteTask(taskToMark);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        MarkTaskCommand markFirstCommand \u003d new MarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        MarkTaskCommand markSecondCommand \u003d new MarkTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        MarkTaskCommand markFirstCommandCopy \u003d new MarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":67}},{"path":"src/test/java/seedu/address/logic/commands/UnassignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"class UnassignCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    void execute_unassignExistingContact_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        Task updatedTask \u003d new Task(taskToEdit.getName(), taskToEdit.getDateTime(),","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"                taskToEdit.getPeople(), taskToEdit.getTags(), taskToEdit.getLink(), taskToEdit.isTaskMark());","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"        updatedTask.addPerson(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"        TaskList updatedTasks \u003d new TaskList(model.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"        updatedTasks.setTask(taskToEdit, updatedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"        UnassignCommand unassignCommand \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"                new UnassignCommand(Index.fromZeroBased(0), Index.fromZeroBased(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"        Model m \u003d new ModelManager(","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), updatedTasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        String expectedMessage \u003d String.format(UnassignCommand.NO_PERSON_ASSIGN,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"                person.getName(), person.getPhone(), updatedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"        assertCommandSuccess(unassignCommand, m, expectedMessage, model);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"    void execute_unassignNonexistingContact_failure() {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        Person personToRemove \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"        taskToEdit.removePerson(personToRemove);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"        assertFalse(taskToEdit.getPeople().contains(personToRemove));","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"snss231"},"content":"        UnassignCommand unassignCommand \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"snss231"},"content":"                new UnassignCommand(Index.fromZeroBased(0), Index.fromZeroBased(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"snss231"},"content":"        assertCommandFailure(unassignCommand, model, UnassignCommand.MESSAGE_PERSON_NOT_IN_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junjunjieOng":1,"junrong98":5,"snss231":54}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        Task taskToUnmark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        expectedModel.deleteTask(taskToUnmark);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        assertCommandFailure(unmarkTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        UnmarkTaskCommand unmarkFirstCommand \u003d new UnmarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        UnmarkTaskCommand unmarkSecondCommand \u003d new UnmarkTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        UnmarkTaskCommand unmarkFirstCommandCopy \u003d new UnmarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":67}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import static seedu.address.testutil.TypicalAssignedTasks.getTypicalAssignedTaskList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.PersonContainInTask;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"    private Model assignedModel \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"            new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAssignedTaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    void execute_zeroAssigneesInTask_noPersonFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"                new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskList(model.getTaskList()));","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"        Index taskIndex \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(ViewCommand.NO_CONTACT_ASSIGN, taskIndex.getOneBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(taskIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    void execute_assigneesInTask_personFound() throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"                assignedModel.getAddressBook(), new UserPrefs(), new TaskList(assignedModel.getTaskList()));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(ViewCommand.DISPLAY_TASK_CONTACT_SUCCESS, 2);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"        List\u003cPerson\u003e assignedList \u003d expectedModel.getFilteredTaskList().get(0).getPeople();","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        PersonContainInTask pred \u003d new PersonContainInTask(assignedList);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        viewCommand.execute(assignedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"        assertEquals(assignedModel.getFilteredPersonList(), expectedModel.getFilteredPersonList().filtered(pred));","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"junrong98"},"content":"    private PersonContainInTask preparePredicate(List\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"junrong98"},"content":"        return new PersonContainInTask(personList);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"junrong98":59,"snss231":5}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"brian16600"},"content":"*/","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"brian16600":5,"-":136}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"brian16600"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"brian16600"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":"*/","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"brian16600":12,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/AssignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"class AssignCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    private AssignCommandParser parser \u003d new AssignCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"        Index firstTask \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"        Index secondPerson \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"        String userInput \u003d firstTask.getOneBased() + \" \" + PREFIX_PERSON + secondPerson.getOneBased();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"        Logger.getLogger(\"a\").log(Level.INFO, userInput);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"                new AssignCommand(firstTask, secondPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"        assertParseFailure(parser, String.valueOf(INDEX_FIRST_TASK.getOneBased()), expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"    void parse_noInput_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"snss231":46}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" * same path through the DeleteTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"                DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"*/","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"*/","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"brian16600"},"content":"    /*","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"brian16600":11,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_DESC_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        // no index specified","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, VALID_NAME_TASKA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        // no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        // negative index","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_TASKA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        // zero index","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_TASKA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"        // Invalid time format","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATETIME_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKA + DATETIME_DESC_TASKB + TAG_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKA)","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"                .withDateTime(VALID_DATETIME_TASKB).withTags(VALID_TAG_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKA + DATETIME_DESC_TASKB;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKA)","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"                .withDateTime(VALID_DATETIME_TASKB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"        // name","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"        // date time","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"        userInput \u003d targetIndex.getOneBased() + DATETIME_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDateTime(VALID_DATETIME_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"        // tags","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATETIME_DESC_TASKA + DATETIME_DESC_TASKA","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"                + TAG_DESC_TASKA + DATETIME_DESC_TASKA + TAG_DESC_TASKA + NAME_DESC_TASKA;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTaskName(VALID_NAME_TASKA)","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"junjunjieOng"},"content":"                .withDateTime(VALID_DATETIME_TASKA).withTags(VALID_TAG_TASKA).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"junjunjieOng"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junjunjieOng":124}},{"path":"src/test/java/seedu/address/logic/parser/ListTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class ListTaskCommandParserTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    private ListTaskCommandParser parser \u003d new ListTaskCommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        // Wrong input","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        // Wrong prefix","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"all\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        // no field specified","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_correctPrefix_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        String userInputAll \u003d \" all/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand expectedCommandAll \u003d new ListTaskCommand(\"all\");","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInputAll, expectedCommandAll);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"        String userInputNC \u003d \" nc/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand expectedCommandNC \u003d new ListTaskCommand(\"nc\");","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInputNC, expectedCommandNC);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        String userInputC \u003d \" c/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        ListTaskCommand expectedCommandC \u003d new ListTaskCommand(\"c\");","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, userInputC, expectedCommandC);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"junjunjieOng":46}},{"path":"src/test/java/seedu/address/logic/parser/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * outside of the MarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" * same path through the MarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    private MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, \"1\", new MarkTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":32}},{"path":"src/test/java/seedu/address/logic/parser/UnassignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"snss231"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"snss231"},"content":"import seedu.address.logic.commands.UnassignCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"snss231"},"content":"class UnassignCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"snss231"},"content":"    private UnassignCommandParser parser \u003d new UnassignCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"snss231"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"snss231"},"content":"        Index firstTask \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"snss231"},"content":"        Index secondPerson \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"snss231"},"content":"        String userInput \u003d firstTask.getOneBased() + \" \" + PREFIX_PERSON + secondPerson.getOneBased();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"snss231"},"content":"        Logger.getLogger(\"a\").log(Level.INFO, userInput);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"snss231"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"snss231"},"content":"                new UnassignCommand(firstTask, secondPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"snss231"},"content":"    void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"snss231"},"content":"        assertParseFailure(parser, String.valueOf(INDEX_FIRST_TASK.getOneBased()), expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"    void parse_noInput_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"snss231":46}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" * outside of the UnmarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":" * same path through the UnmarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    private UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"junjunjieOng":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"brian16600"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"brian16600":2,"-":100}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"junrong98"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"junrong98"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, new TaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"junrong98"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, new TaskList())));","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"junrong98"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, new TaskList())));","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"junrong98"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, new TaskList())));","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":127,"junrong98":5}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"brian16600"},"content":"/*","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"brian16600"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"brian16600"},"content":" */","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"brian16600":3,"-":30}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"alice123\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"brian16600"},"content":"                .withEmail(\"alice@email.com\").withUsername(\"alice123\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brian16600":2,"-":73}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"                .withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withUsername(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"brian16600":2,"-":89}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"brian16600"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"brian16600":2,"-":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"brian16600"},"content":"    private static final String INVALID_USERNAME \u003d \" \";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    private static final String INVALID_TAG \u003d \"£\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"brian16600"},"content":"    private static final String VALID_USERNAME \u003d BENSON.getUsername().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"brian16600"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"brian16600"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"brian16600"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"brian16600"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"brian16600"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"brian16600"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_USERNAME, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"brian16600"},"content":"        String expectedMessage \u003d GitUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"brian16600"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GitUsername.class.getSimpleName());","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"brian16600"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_USERNAME, invalidTags);","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brian16600":13,"-":96,"junrong98":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tasks\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"junrong98":2}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"brian16600"},"content":"        descriptor.setUsername(person.getUsername());","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"brian16600"},"content":"    public EditPersonDescriptorBuilder withAddress(String username) {","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"brian16600"},"content":"        descriptor.setUsername(new GitUsername(username));","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"brian16600"},"content":"     * Builds an EditPersonDescriptor","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"brian16600"},"content":"     * @return descriptor object","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"brian16600":9,"-":83}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        descriptor.setDate(task.getDateTime());","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptorBuilder withTaskName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        descriptor.setName(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the {@code DateTime} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptorBuilder withDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        descriptor.setDate(dateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the {@code tag} into a {@code Tag} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"     * that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"junrong98"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"junrong98"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"        return descriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junjunjieOng":59,"junrong98":7}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"brian16600"},"content":"import seedu.address.model.person.GitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"brian16600"},"content":"    public static final String DEFAULT_USERNAME \u003d \"AmyEnjoysCoding\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"    private GitUsername gitUsername;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"        gitUsername \u003d new GitUsername(DEFAULT_USERNAME);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"brian16600"},"content":"        gitUsername \u003d personToCopy.getUsername();","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"brian16600"},"content":"    public PersonBuilder withUsername(String username) {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"brian16600"},"content":"        this.gitUsername \u003d new GitUsername(username);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"brian16600"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"brian16600"},"content":"     * Builds a Person.","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"brian16600"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"brian16600"},"content":"     * @return Person with name, phone, email, gitUsername, tags.","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"brian16600"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":98,"author":{"gitId":"brian16600"},"content":"        return new Person(name, phone, email, gitUsername, tags);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"brian16600":13,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"brian16600"},"content":"        sb.append(PREFIX_ADDRESS + person.getUsername().getUsername() + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"brian16600"},"content":"        descriptor.getUsername()","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"brian16600"},"content":"                .ifPresent(username -\u003e sb.append(PREFIX_ADDRESS).append(username.getUsername()).append(\" \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"brian16600":3,"-":60}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Link;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public static final String DEFAULT_NAME \u003d \"SchoolWork\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    public static final LocalDateTime DEFAULT_DATETIME \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"            LocalDateTime.of(2022, 12, 15, 21, 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    public static final String DEFAULT_TAG \u003d \"School\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"    public static final String DEFAULT_ZOOMLINK \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    public static final boolean DEFAULT_ISTASKMARKDONE \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    private Link link;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"    private List\u003cPerson\u003e people;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    private boolean isTaskMarkDone;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        dateTime \u003d DEFAULT_DATETIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"        link \u003d new Link(DEFAULT_ZOOMLINK);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"        people \u003d new ArrayList\u003cPerson\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        isTaskMarkDone \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        dateTime \u003d taskToCopy.getDateTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"        link \u003d taskToCopy.getLink();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        people \u003d taskToCopy.getPeople();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        isTaskMarkDone \u003d taskToCopy.isTaskMark();","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"    public TaskBuilder withTaskName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"     * Parses the {@code tag} into a {@code Tag} and set it to the {@code Task} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"junrong98"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"junrong98"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the {@code DateTime} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"    public TaskBuilder withDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"junrong98"},"content":"     * Sets the {@code link} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"junrong98"},"content":"    public TaskBuilder withLink(String link) {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"junrong98"},"content":"        this.link \u003d new Link(link);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"junrong98"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"junrong98"},"content":"     * Sets the {@code people} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"junrong98"},"content":"    public TaskBuilder withPeople(List\u003cPerson\u003e people) {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"junrong98"},"content":"        this.people \u003d people;","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"junrong98"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"    public Task build() {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"        return new Task(name, dateTime, people, tags, link, isTaskMarkDone);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"junjunjieOng":67,"junrong98":36}},{"path":"src/test/java/seedu/address/testutil/TypicalAssignedTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junrong98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"junrong98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"junrong98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"junrong98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"junrong98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"junrong98"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"junrong98"},"content":"public class TypicalAssignedTasks {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"junrong98"},"content":"    // Ensure people in group are on the actual filtered list","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public static final List\u003cPerson\u003e GROUP_ONE \u003d Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"    public static final List\u003cPerson\u003e GROUP_TWO \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"            Arrays.asList(TypicalPersons.CARL, TypicalPersons.DANIEL, TypicalPersons.ELLE);","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"    public static final List\u003cPerson\u003e GROUP_THREE \u003d Arrays.asList(TypicalPersons.GEORGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"    public static final Task BRUSH_TEETH \u003d new TaskBuilder().withTaskName(\"Brush my teeth\")","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 12, 15, 21, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"            .withPeople(GROUP_ONE)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"            .withPeople(GROUP_ONE)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Chores\").withLink(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"    public static final Task LAUNDRY \u003d new TaskBuilder().withTaskName(\"Do the laundry\")","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 6, 2, 15, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"            .withPeople(GROUP_TWO)","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Chores\").withLink(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"    public static final Task CONSULTATION \u003d new TaskBuilder().withTaskName(\"Consultation with students\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 8, 3, 14, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Consult\")","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"junrong98"},"content":"            .withPeople(GROUP_THREE)","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"            .withLink(\"www.google.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"    public static final Task INVIGILATOR_MEETING \u003d new TaskBuilder().withTaskName(\"Meeting with exam invigilators\")","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 2, 5, 14, 30))","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Meeting\")","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"junrong98"},"content":"            .withLink(\"www.google.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"junrong98"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"junrong98"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"junrong98"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BRUSH_TEETH, LAUNDRY, CONSULTATION, INVIGILATOR_MEETING));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"junrong98"},"content":"     * Returns a {@code TaskList} with all the typical tasks with people assigned.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"junrong98"},"content":"    public static TaskList getTypicalAssignedTaskList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"junrong98"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"junrong98"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"junrong98"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"junrong98"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"junrong98"},"content":"        return tl;","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"junrong98"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"junrong98"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"junrong98":57}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"junjunjieOng":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"brian16600"},"content":"            .withUsername(\"Alice123\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"brian16600"},"content":"            .withUsername(\"benson234\")","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"heinz@example.com\").withUsername(\"carlusername\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"cornelia@example.com\").withUsername(\"danielusername\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"werner@example.com\").withUsername(\"elleusername\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"lydia@example.com\").withUsername(\"littletokyo\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"anna@example.com\").withUsername(\"georgegithub\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"stefan@example.com\").withUsername(\"hooname\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"brian16600"},"content":"            .withEmail(\"hans@example.com\").withUsername(\"idausername\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"brian16600"},"content":"            .withEmail(VALID_EMAIL_AMY).withUsername(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"brian16600"},"content":"            .withEmail(VALID_EMAIL_BOB).withUsername(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"brian16600":11,"-":65}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"snss231"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"snss231"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"snss231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"snss231"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"snss231"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"snss231"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"snss231"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"snss231"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"junrong98"},"content":"    public static final Task BRUSH_TEETH \u003d new TaskBuilder().withTaskName(\"Brush my teeth\")","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"junrong98"},"content":"                    .withDateTime(LocalDateTime.of(2022, 12, 15, 21, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"junrong98"},"content":"                    .withTags(\"Chores\").withLink(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"junrong98"},"content":"    public static final Task LAUNDRY \u003d new TaskBuilder().withTaskName(\"Do the laundry\")","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 6, 2, 15, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Chores\").withLink(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"junrong98"},"content":"    public static final Task CONSULTATION \u003d new TaskBuilder().withTaskName(\"Consultation with students\")","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 8, 3, 14, 0))","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Consult\")","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"junrong98"},"content":"            .withLink(\"www.google.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"junrong98"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"junrong98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"junrong98"},"content":"    public static final Task INVIGILATOR_MEETING \u003d new TaskBuilder().withTaskName(\"Meeting with exam invigilators\")","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"junrong98"},"content":"            .withDateTime(LocalDateTime.of(2022, 2, 5, 14, 30))","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"junrong98"},"content":"            .withTags(\"Meeting\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"junrong98"},"content":"            .withLink(\"www.google.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"junrong98"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"junrong98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"junrong98"},"content":"     * Returns array of 4 test tasks.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"junrong98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"junrong98"},"content":"     * @return Array of 4 test tasks.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"junrong98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"snss231"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"snss231"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BRUSH_TEETH, LAUNDRY, CONSULTATION, INVIGILATOR_MEETING));","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"snss231"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"snss231"},"content":"     * Returns a {@code TaskList} with all the typical tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"snss231"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"snss231"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"snss231"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"snss231"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"snss231"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"snss231"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"snss231"},"content":"        return tl;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"snss231"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"snss231"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"snss231"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"junrong98":24,"snss231":30}}]
