[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-3/tp/actions)","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"* This is application that is designed for busy beauty salons with diverse customer bases that want to personalise service.\u003cbr\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"  * Track customer profiles like their skin type or hair type so that appropriate products can be recommended for return customers","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"  * Track booking time slots to organise manpower and facilities","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"  * Obtain overall statistics on new customers gained to adjust sales plans","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"* Acknowledgements: This project is based off another [codebase](https://github.com/AY2122S2-CS2103-F11-3/tp).","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"-":4,"isabelteo":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"mainClassName \u003d \u0027seedu.trackbeau.Main\u0027","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"    archiveName \u003d \u0027trackbeau.jar\u0027","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"hanhuiice":2,"flairekq":4,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"### Yong Kai Qi","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"\u003cimg src\u003d\"images/flairekq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"[[github](https://github.com/flairekq)]","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"[[portfolio](team/flairekq.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"* Role: Team Lead, Developer","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"* Responsibilities: Deliverables \u0026 deadlines, scheduling \u0026 tracking","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"### Wu HanHui","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"\u003cimg src\u003d\"images/hanhuiice.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"[[github](https://github.com/hanhuiice)]","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"[[portfolio](team/hanhuiice.md)]","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"* Responsibilities: Data + Features","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"### Tan Ka Shing","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"\u003cimg src\u003d\"images/kashing555.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"[[github](http://github.com/kashing555)]","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"[[portfolio](team/kashing555.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"* Responsibilities: Data + Features","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"### Isabel Teo","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"\u003cimg src\u003d\"images/isabelteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"[[github](https://github.com/isabelteo)]","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"[[portfolio](team/isabelteo.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"### Kong Jun Yin","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"\u003cimg src\u003d\"images/oheyesee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"[[github](https://github.com/OhEyeSee)]","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"[[portfolio](team/oheyesee.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"* Role: NIL","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"* Responsibilities: NIL","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"hanhuiice":13,"kashing555":4,"flairekq":5,"-":33,"isabelteo":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/ui/Ui.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/logic/Logic.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a customer).","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"flairekq"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/model/Model.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/trackbeau/storage/Storage.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"### Customer Attributes","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"#### Add new data fields relevant to customers at beauty salons","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"##### Overview","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"- Data fields such as birthday, sign-up date, skin type, hair type, allergies, preferred staff and services are to be added.","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"##### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"- Allergies, Staff and Services were added as tags as one customer can have multiple of these data fields","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"- The rest were added as attributes","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"##### Design Considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"* **Alternative 1 (current choice):** Implement only allergies,staffs and services as tags","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"  * Pros: Harder to implement","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"  * Cons: Less direct to access allergies, staffs and services as compared to if a list was used","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"* **Alternative 2:** Implement all additional fields as tags","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"  itself.","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"  * Pros: Easy to implement","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"  * Cons: Could be harder to access the necessary data for other functions like creating summary statistics","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"  * Cons: Does not make sense to have multiple of certain data fields, e.g. multiple skin types, multiple birthdays","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"hanhuiice"},"content":"#### Delete multiple customers in a single command","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"hanhuiice"},"content":"#### Overview","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"hanhuiice"},"content":"- Delete command can allow multiple indexes, this allows for faster deletion of customer profiles.","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"hanhuiice"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"hanhuiice"},"content":"- Current implementation allows user to enter multiple indexes seperated by comma. All the indexes will be checked if","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"hanhuiice"},"content":"they are integers and is a valid index.","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"hanhuiice"},"content":"- If any indexes fail the check, the command with be aborted. Only if all indexes pass the check, then command with be","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"hanhuiice"},"content":"executed.","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"hanhuiice"},"content":"##### Design Considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"hanhuiice"},"content":"* **Option 1:** Does not abort command when an index fail the check and delete customer from valid indexes.","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"hanhuiice"},"content":"  * Pros: Lenient on user error.","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"hanhuiice"},"content":"  * Cons: User might be confused of the intended behavior of the command where different input can produce same effect.","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"hanhuiice"},"content":"  * Cons: Difficult to decide what error should be allowed and not allowed.","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"hanhuiice"},"content":"* **Option 2 (Current choice):** Only if all indexes pass the check, then command with be executed.","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"hanhuiice"},"content":"  * Pros: Straightforward to implement.","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"hanhuiice"},"content":"  * Pros: It is clear about how the command is intended to be used.","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"hanhuiice"},"content":"  * Cons: Minor error will cause command to be aborted.","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"flairekq"},"content":"### Services","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"flairekq"},"content":"#### Add service feature","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"flairekq"},"content":"##### Overview","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"flairekq"},"content":"The add service feature allows users to add services into TrackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"flairekq"},"content":"Each new service must have the data fields `ServiceName`, `Price` and `Duration`.","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"flairekq"},"content":"##### Implementation of feature","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"flairekq"},"content":"##### Design considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"flairekq"},"content":"#### Edit service feature","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"flairekq"},"content":"##### Overview","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"flairekq"},"content":"The edit service feature allows users to edit existing services in TrackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"flairekq"},"content":"For each edit, at least one of the data fields `ServiceName`, `Price` and `Duration` must be modified.","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"flairekq"},"content":"##### Implementation of feature","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"flairekq"},"content":"##### Design considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"flairekq"},"content":"#### Delete service feature","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"flairekq"},"content":"##### Overview","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"flairekq"},"content":"The delete services feature allows users to remove existing services in TrackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"flairekq"},"content":"##### Implementation of feature","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"flairekq"},"content":"##### Design considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"hanhuiice"},"content":"* works in beauty salon","lastModifiedDate":"2022-02-21"},{"lineNumber":252,"author":{"gitId":"hanhuiice"},"content":"* has a need to manage a significant number of customer profiles","lastModifiedDate":"2022-02-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"hanhuiice"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-21"},{"lineNumber":259,"author":{"gitId":"hanhuiice"},"content":"With many customers, it is hard for beauty salons to provide personalized customer service.","lastModifiedDate":"2022-02-21"},{"lineNumber":260,"author":{"gitId":"hanhuiice"},"content":"Our product allows the user to keep track of customer information and group their customers to provide targeted services every time they return.","lastModifiedDate":"2022-02-21"},{"lineNumber":261,"author":{"gitId":"hanhuiice"},"content":"It can also keep track of performance metrics, like total new memberships.","lastModifiedDate":"2022-02-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"| Priority | As a …​        | I want to …​                                                                          | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"hanhuiice"},"content":"|----------|-------------------|------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-21"},{"lineNumber":270,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | view the user guide easily                                                               | know what kind of commands that I can use                                        |","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | see where to key in information easily                                                   | be clear of how to use the interface                                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | see the format to follow for commands when I type incorrect command                      | rectify the command                                                              |","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | add name of customer                                                                     | identify the customer correctly                                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"hanhuiice"},"content":"| `* * *`  | new user          | add contact details of customer                                                          | contact them for their appointment or for follow up                              |","lastModifiedDate":"2022-02-21"},{"lineNumber":275,"author":{"gitId":"flairekq"},"content":"| `* *`    | new user          | add customer preference for staff                                                        | appoint the staff they prefer during their appointment                           |","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | add allergy information of customer                                                      | avoid using or promoting products that the customer is allergic to               |","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | add hair type of customer                                                                | choose the correct products when treating their hair                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | add skin type of customer                                                                | choose the appropriate products when treating their skin                         |","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"flairekq"},"content":"| `* *`    | new user          | add services that customer prefers                                                       | better pitch new products and personalise their experience at the salon          |","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"flairekq"},"content":"| `* `     | new user          | add name of staff                                                                        | keep track of the personal details of my staffs                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"flairekq"},"content":"| `*`      | new user          | add personal details of staff like birth date, contact number, part time/full timer, etc | know my staffs better                                                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"kashing555"},"content":"| `* * *`  | new user          | view a customer profile                                                                  | know the details of a customer                                                   |","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"kashing555"},"content":"| `* * *`  | new user          | view a list of customer profile associated with a keyword                                | view the profiles of customers that i am interest in                             |","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | delete a customer                                                                        | remove a customer that does not visit our salon anymore                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | edit a customer                                                                          | update details when needed                                                       |","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"flairekq"},"content":"| `* * *`  | new user          | find a customer                                                                          | locate a customer\u0027s profile faster                                               |","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"flairekq"},"content":"| `* *`    | intermediate user | check if facilities are available based on bookings of the day                           | know if the facility is available for booking                                    |","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"flairekq"},"content":"| `* *`    | intermediate user | add the birth date of a customer                                                         | know when is the birthday of the customer                                        |","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"flairekq"},"content":"| `* *`    | intermediate user | add the signup date of a customer                                                        | track the customers gained per month                                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"hanhuiice"},"content":"| `* *`    | intermediate user | view the customers that are having their birthday today                                  | be reminded to sent them birthday wishes                                         |","lastModifiedDate":"2022-02-21"},{"lineNumber":291,"author":{"gitId":"flairekq"},"content":"| `* * *`  | intermediate user | add a new service                                                                        | keep track of the services that our salon provides                               |","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"flairekq"},"content":"| `* * *`  | intermediate user | edit a service                                                                           | update the details of the service                                                |","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"flairekq"},"content":"| `* * *`  | intermediate user | delete a service                                                                         | remove service that is not offered anymore                                       |","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"flairekq"},"content":"| `* * *`  | intermediate user | view all services                                                                        | see all the services and their details that our salon provides                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"flairekq"},"content":"| `* *`    | expert user       | add the feedback of the customer after been serviced for a booking                       | know how satisfied the customer is and know the areas of improvement if any      |","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | add a customer booking                                                                   | keep track of the customer\u0027s upcoming appointments and make preparations         |","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | view all the bookings                                                                    | better allocate my manpower as I can know when the salon is the busiest          |","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | delete a customer booking                                                                | remove the booking if there is any cancellation                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | edit a customer booking                                                                  | update the details of the booking                                                |","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | see statistics of how many new customers gained by month                                 | review and improve my company\u0027s performance                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"flairekq"},"content":"| `* * *`  | expert user       | keep track of expected earnings of the salon by month                                    | review and improve my company\u0027s performance                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"flairekq"},"content":"| `* *`    | expert user       | get summary statistics on customer profiles (preferred services)                         | review and improve my choice of services and products                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"flairekq"},"content":"| `* *`    | expert user       | get summary statistics on customer profile (preferred staffs)                            | identify the best staff and let the team learn from them                         |","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"flairekq"},"content":"| `* *`    | expert user       | sort customers based on membership tier                                                  | promote certain facilities or products to the customer to help raise the membership tier of that customer                         |","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"isabelteo"},"content":"(For all use cases below, the **System** is`TrackBeau` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"kashing555"},"content":"**Use case: find customer\u0027s detail by their name**","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"kashing555"},"content":"1.  User requests to find a customer by name using a keyword","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"kashing555"},"content":"2.  TrackBeau shows a list of customers with matching keyword with their customer Index","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":327,"author":{"gitId":"kashing555"},"content":"**Use case: find customer\u0027s details associated with a keyword**","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":329,"author":{"gitId":"kashing555"},"content":"**MSS**","lastModifiedDate":"2022-03-15"},{"lineNumber":330,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":331,"author":{"gitId":"kashing555"},"content":"1.  User requests to find a customer related to a keyword","lastModifiedDate":"2022-03-15"},{"lineNumber":332,"author":{"gitId":"isabelteo"},"content":"2.  TrackBeau shows a list of customers with matching keyword with their customer Index","lastModifiedDate":"2022-02-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"hanhuiice"},"content":"**Use case: Add a customer**","lastModifiedDate":"2022-02-25"},{"lineNumber":341,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":342,"author":{"gitId":"isabelteo"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":343,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":344,"author":{"gitId":"isabelteo"},"content":"1.  User requests to see input format for adding a customer using `help`","lastModifiedDate":"2022-02-22"},{"lineNumber":345,"author":{"gitId":"isabelteo"},"content":"2.  TrackBeau shows command input formats","lastModifiedDate":"2022-02-22"},{"lineNumber":346,"author":{"gitId":"isabelteo"},"content":"3.  User requests to add a customer based on the input format","lastModifiedDate":"2022-02-22"},{"lineNumber":347,"author":{"gitId":"isabelteo"},"content":"4.  TrackBeau adds the customer to the list","lastModifiedDate":"2022-02-22"},{"lineNumber":348,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":349,"author":{"gitId":"isabelteo"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":350,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":351,"author":{"gitId":"isabelteo"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":352,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":353,"author":{"gitId":"isabelteo"},"content":"* 2a. The input format is wrong.","lastModifiedDate":"2022-02-22"},{"lineNumber":354,"author":{"gitId":"isabelteo"},"content":"    * 2a1. TrackBeau shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"kashing555"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"hanhuiice"},"content":"**Use case: Edit a customer**","lastModifiedDate":"2022-02-25"},{"lineNumber":359,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":360,"author":{"gitId":"isabelteo"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":361,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":362,"author":{"gitId":"isabelteo"},"content":"1.  User requests to see input format for editing a customer\u0027s information using `help`","lastModifiedDate":"2022-02-22"},{"lineNumber":363,"author":{"gitId":"isabelteo"},"content":"2.  TrackBeau shows command input formats","lastModifiedDate":"2022-02-22"},{"lineNumber":364,"author":{"gitId":"isabelteo"},"content":"3.  User requests to edit a customer\u0027s information based on the input format","lastModifiedDate":"2022-02-22"},{"lineNumber":365,"author":{"gitId":"isabelteo"},"content":"4.  TrackBeau adds the customer to the list","lastModifiedDate":"2022-02-22"},{"lineNumber":366,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"isabelteo"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":369,"author":{"gitId":"isabelteo"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":370,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":371,"author":{"gitId":"isabelteo"},"content":"* 2a. The input format is wrong.","lastModifiedDate":"2022-02-22"},{"lineNumber":372,"author":{"gitId":"isabelteo"},"content":"    * 2a1. TrackBeau shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":374,"author":{"gitId":"isabelteo"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-22"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"kashing555"},"content":"**Use case: user wishes to exit the application**","lastModifiedDate":"2022-02-23"},{"lineNumber":379,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":380,"author":{"gitId":"kashing555"},"content":"1.  User requests to exit the application","lastModifiedDate":"2022-02-23"},{"lineNumber":381,"author":{"gitId":"kashing555"},"content":"2.  AddressBook closes the application","lastModifiedDate":"2022-02-23"},{"lineNumber":382,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":383,"author":{"gitId":"kashing555"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"kashing555"},"content":"**Use case: add a booking**","lastModifiedDate":"2022-03-25"},{"lineNumber":386,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"kashing555"},"content":"**MSS**","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"kashing555"},"content":"1.  User requests to add a booking of a customer at a specific time","lastModifiedDate":"2022-03-25"},{"lineNumber":390,"author":{"gitId":"kashing555"},"content":"2.  TrackBeau adds the customer to the booking list","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":392,"author":{"gitId":"kashing555"},"content":"    Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":393,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":394,"author":{"gitId":"kashing555"},"content":"**Extensions**","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"kashing555"},"content":"**Use case: delete a booking**","lastModifiedDate":"2022-03-25"},{"lineNumber":397,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"kashing555"},"content":"**MSS**","lastModifiedDate":"2022-03-25"},{"lineNumber":399,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"kashing555"},"content":"1.  User requests to delete a booking of a customer using a booking ID","lastModifiedDate":"2022-03-25"},{"lineNumber":401,"author":{"gitId":"kashing555"},"content":"2.  TrackBeau deletes the booking at the specified index","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"kashing555"},"content":"**Extensions**","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"kashing555"},"content":"* 2a. Booking ID does not exist.","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"kashing555"},"content":"    * 2a1. TrackBeau shows an error message.","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"kashing555"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-25"},{"lineNumber":409,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":410,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":411,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"hanhuiice"},"content":"2.  Should be able to hold up to 1000 customers without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-25"},{"lineNumber":415,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"flairekq"},"content":"4.  Features should be relatively easy to test for both manual and automated testing.","lastModifiedDate":"2022-02-20"},{"lineNumber":417,"author":{"gitId":"flairekq"},"content":"5.  The product should be for a single user i.e. (not a multi-user product).","lastModifiedDate":"2022-02-20"},{"lineNumber":418,"author":{"gitId":"flairekq"},"content":"6.  The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2022-02-20"},{"lineNumber":419,"author":{"gitId":"flairekq"},"content":"7.  Does not use a DBMS to store data.","lastModifiedDate":"2022-02-20"},{"lineNumber":420,"author":{"gitId":"flairekq"},"content":"8.  The software should work without requiring an installer.","lastModifiedDate":"2022-02-20"},{"lineNumber":421,"author":{"gitId":"flairekq"},"content":"9.  The file sizes of the deliverables should be reasonable and not exceed the limits given below:","lastModifiedDate":"2022-02-20"},{"lineNumber":422,"author":{"gitId":"flairekq"},"content":"    -   Product (i.e., the JAR/ZIP file)): 100MB","lastModifiedDate":"2022-02-20"},{"lineNumber":423,"author":{"gitId":"flairekq"},"content":"    -   Documents (i.e., PDF files): 15MB/file","lastModifiedDate":"2022-02-20"},{"lineNumber":424,"author":{"gitId":"flairekq"},"content":"10. The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for,","lastModifiedDate":"2022-02-20"},{"lineNumber":425,"author":{"gitId":"flairekq"},"content":"    -   standard screen resolutions 1920x1080 and higher, and,","lastModifiedDate":"2022-02-20"},{"lineNumber":426,"author":{"gitId":"flairekq"},"content":"    -   for screen scales 100% and 125%.","lastModifiedDate":"2022-02-20"},{"lineNumber":427,"author":{"gitId":"flairekq"},"content":"11. The GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for,","lastModifiedDate":"2022-02-20"},{"lineNumber":428,"author":{"gitId":"flairekq"},"content":"    -   resolutions 1280x720 and higher, and","lastModifiedDate":"2022-02-20"},{"lineNumber":429,"author":{"gitId":"flairekq"},"content":"    -   for screen scales 150%.","lastModifiedDate":"2022-02-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"kashing555"},"content":"### finding customer by name","lastModifiedDate":"2022-03-15"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"kashing555"},"content":"1. finding customer by name","lastModifiedDate":"2022-03-15"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"kashing555"},"content":"   1. Test case: `find name john`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":471,"author":{"gitId":"kashing555"},"content":"      Expected: list of customers with john in their name will be shown","lastModifiedDate":"2022-03-15"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"kashing555"},"content":"   1. Test case: `find name j0hn`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":474,"author":{"gitId":"kashing555"},"content":"      Expected: Invalid keyword has been enter. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-15"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"kashing555"},"content":"   1. Other incorrect show commands to try: `find name`, `find x` (where x only contains english characters)\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"kashing555"},"content":"### finding customer by keyword","lastModifiedDate":"2022-02-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"kashing555"},"content":"1. finding customer by keyword type and keyword","lastModifiedDate":"2022-03-15"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"kashing555"},"content":"   1. Test case: `find allergies nickle`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":484,"author":{"gitId":"kashing555"},"content":"      Expected: list of customers with nickle in their allergy will be shown","lastModifiedDate":"2022-03-15"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"kashing555"},"content":"   1. Test case: `find nickle`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":487,"author":{"gitId":"kashing555"},"content":"      Expected: Invalid keyword has been enter. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-02-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"kashing555"},"content":"   1. Other incorrect show commands to try: `find skintype`, `find x` (where x only contains english characters)\u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":490,"author":{"gitId":"kashing555"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"hanhuiice":30,"kashing555":58,"flairekq":70,"-":286,"isabelteo":46}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"   1. Run the `seedu.trackbeau.Main` and try a few commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"hanhuiice":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"   e.g. `seedu.trackbeau.commons.StringUtilTest`","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"   e.g. `seedu.trackbeau.storage.StorageManagerTest`","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"   e.g. `seedu.trackbeau.logic.LogicManagerTest`","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"## 1. Introduction","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"TrackBeau is a **desktop app made for beauty salons to aid them in managing customers\u0027 profile, bookings and services.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"It is optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"Interface (GUI). If you can type fast, TrackBeau can help you manage your customers, bookings and services faster than","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"traditional GUI apps.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"## 2. Quick start","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"2. Download the latest `trackbeau.jar` from [here](https://github.com/AY2122S2-CS2103-F11-3/tp/releases).","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TrackBeau.","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"5. Type the command in the command box and press Enter to execute it. E.g., typing **`listc`** and pressing Enter will show you profiles of all customers.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"   * **`lists`** : Shows a list of all services in the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"   * **`help`** : Opens the help window.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"6. Refer to the [4. Features](#4-features) below for details of each command.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"## 3. About","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"### 3.1 Structure of this document","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"This User Guide is structured in a way that lets you find what you need quickly and easily.","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"You can jump to the different sections easily by referring to the Table of Contents.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"In the following subsection, [3.2 Reading this document](#32-reading-this-document), you can find several tips on how to read this guide.","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"The next section, [4. Features](#4-features) documents the main features in TrackBeau and provides you with ","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"instructions on how to use them.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"### 3.2 Reading this document","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"This subsection introduces you to the symbols, syntax and technical terms that are used throughout this guide.","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"Getting yourself familiar with this subsection is useful in helping you to better understand this guide.","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c!-- @@author flairekq-reused --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c!-- Reused from https://ay2122s1-cs2103t-f13-2.github.io/tp/UserGuide.html --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c!-- with minor modification --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"#### 3.2.1 Symbols and syntax","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"The table below explains the symbols and syntax used throughout the user guide.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"| Symbol/Syntax                                                              | Meaning                                                                                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"|----------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"| \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e :information_source:\u003c/div\u003e | Text that appears in the information box indicates additional information that may be useful to know.   |","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"| \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e:bulb:\u003c/div\u003e             | Text that appears in the tip box are useful for enhancing your experience with using TrackBeau.         |                                               ","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"| \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation:\u003c/div\u003e      | Text that appears in the caution box is important as unwanted consequences might arise if not followed. |","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"#### 3.2.2 Sections of TrackBeau\u0027s GUI","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The image below shows the annotated GUI components of TrackBeau.","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![Annotated GUI](images/user-guide/annotated-gui-v3.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c!-- Section below adapted from https://ay2122s1-cs2103t-f13-2.github.io/tp/UserGuide.html --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"#### 3.2.3 Navigating in TrackBeau","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"TrackBeau consists of tabs that are toggleable in the tab bar on the left side of the GUI.","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"By selecting a tab, it toggles the display panel to showcase the contents related to the tab e.g., by clicking on","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Services, it will display a list of services available. By default, the Customers tab is selected.","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"There is also a menu bar at the top of the GUI that consists of 3 menu item, File, Help and Charts. By clicking on File,","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"you will be able to access Exit to exit the app. By clicking on Help, you will be able to access Help F1 to open the help window.","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"By clicking on Charts, you will be able to see a list of menu items to open the various charts in TrackBeau.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"You can enter the commands via the command box and pressing Enter to execute them.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The result panel will then display a response on whether the command was successfully executed.","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The display panel will then automatically refresh to display the contents of the results of the command executed. ","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"#### 3.2.4 Command Format","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The table below explains the important technical terms to help you understand how to use the commands in TrackBeau.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c!-- @@author flairekq-reused --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c!-- Reused from https://ay2021s1-cs2103t-w13-3.github.io/tp/UserGuide.html --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c!-- with minor modifications for the table below --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"| Technical Term | Meaning                                                                                                           | ","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"|----------------|-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"| Command Word   | The first word of the command determines the action that TrackBeau should perform.                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"| Prefix         | The characters right before each parameter which distinguishes one parameter from the other.                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"| Parameter      | The words right after the prefix. Each parameter is a value given to the command to perform the specified action. |","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Example**:","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* `addc n/NAME p/PHONE a/ADDRESS e/EMAIL`","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Command Word: `addc`","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Prefixes: `n/`, `p/`, `a/`, `e/`","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Parameters: `NAME`, `PHONE`, `ADDRESS`, `EMAIL`","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The commands in TrackBeau follows these rules:","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  e.g., in `addc n/NAME`, `NAME` is a parameter which can be used as `addc n/John Doe`.","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  e.g., `n/NAME [e/EMAIL]` can be used as `n/John Doe e/johnd@example.com` or as `n/John Doe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g., `[sep/SERVICE_PREFERENCE]…​` can be used as ` ` (i.e., 0 times), `sep/massage`, `sep/facial sep/massage` etc.","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g., if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g., if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `listc`, `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g., if the command specifies `listc 123`, it will be interpreted as `listc`.","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"## 4. Features","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"This section contains the information about the features and commands of TrackBeau. ","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"It is split into the following subsections:","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. [Customer management ](#41-customer-management)","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"2. [Service management ](#42-service-management)","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"3. [Booking management ](#43-booking-management)","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"4. [Statistics ](#44-statistics-management)","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"5. [Schedule management](#45-schedule-management)","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"6. [Miscellaneous ](#46-miscellaneous)","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### 4.1 Customer management","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### 4.1.1 Customer management command parameters","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The table below shows a list of command parameters that will be used for customer management.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Service preference refers to services feedbacked by customers that they would enjoy. As this is feedback, the service could be in the current service list offered by the salon or it could yet to be offered as salons may choose to offer when there is sufficient demand.","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"| Parameter            | Description|","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"|----------------------||","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"| `NAME`               | Name of the customer. Names should only contain alphanumeric characters and spaces, and it should not be blank|","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"| `PHONE_NUMBER`       | Phone number of the customer. Phone numbers should only contain numbers, and it should be at least 3 digits long|","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"| `ADDRESS`            | Address of the customer. Addresses can take any values, and it should not be blank|","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"| `EMAIL`              | Email of the customer. Emails should be of the format local-part@domain and adhere to the following constraints: \u003col\u003e\u003cli\u003eThe local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters.\u003c/li\u003e\u003cli\u003eThis is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods. The domain name must: \u003cul\u003e\u003cli\u003eend with a domain label at least 2 characters long\u003c/li\u003e\u003cli\u003ehave each domain label start and end with alphanumeric characters\u003c/li\u003e\u003cli\u003ehave each domain label consist of alphanumeric characters, separated only by hyphens, if any.\u003c/li\u003e\u003cul\u003e\u003c/li\u003e\u003c/ol\u003e|","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"| `STAFF_PREFERENCE`   | The name of the staffs that the customer prefers. Staffs\u0027 name can be any values, and it should not be blank if inputed. Else, it is an optional value.      |","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"| `SERVICE_PREFERENCE` | The name of the services that the customer feedbacked that they would like to have. Services\u0027 name can be any values, and it should not be blank if inputed. Else, it is an optional value. Note that the service a customer prefers may not be present in the service list as the salon may not be offering the service yet.            |","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"| `HAIR_TYPE`          | The hair type of the customer. Hair types can be any values, and it should not be blank if inputed. Else, it is an optional value|","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"| `SKIN_TYPE`          | The skin type of the customer. Skin types can be any values, and it should not be blank if inputed. Else, it is an optional value|","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"| `ALLERGY`            | The allergy that the customer has. Allergies can be any values, and it should not be blank if inputed. Else, it is an optional value|","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"| `BIRTHDATE`          | The birthdate of the customer. Birthdate should follow dd-MM-yyyy and be valid date|","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"| `REGISTRATION_DATE`  | The registration date of the customer. Registration date should follow dd-MM-yyyy and be valid date|","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"| `INDEX`              | The index of the customer in the displayed list. It must be a valid positive index|","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### 4.1.2 Adding a customer: `addc`","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Adds a customer to the application.","lastModifiedDate":"2022-02-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `addc n/NAME p/PHONE_NUMBER a/ADDRESS rd/REGISTRATION_DATE [e/EMAIL] [stp/STAFF_PREFERENCE]…​ [sep/SERVICE_PREFERENCE]…​ [h/HAIR_TYPE] [s/SKIN_TYPE] [al/ALLERGY]…​ [bd/BIRTHDATE]`","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"A customer can have any number of preferred staffs, preferred services and allergies (including 0)","lastModifiedDate":"2022-02-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `addc n/John Doe p/98765432 a/John street, block 123, #01-01 e/johnd@example.com rd/31-03-2022`","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `addc n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 rd/31-03-2022 al/Aloe Vera sep/facial sep/massage`","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"#### 4.1.3 Listing all customers : `listc`","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Shows a list of all customers in the application.","lastModifiedDate":"2022-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `listc`","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![Listing all customers](images/user-guide/list-customers.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**:information_source: Information:**","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cul\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    \u003cli\u003eTurquoise coloured tag (below the name) is used to represent the staffs that the customer prefers.\u003c/li\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    \u003cli\u003eYellow coloured tag (below staff preferences) is used to represent services that the customer prefers.\u003c/li\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    \u003cli\u003ePink coloured tag (below service preferences) is used to represent allergies that the customer has.\u003c/li\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"#### 4.1.4 Editing a customer : `editc`","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Edits an existing customer in the application.","lastModifiedDate":"2022-02-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `editc INDEX [n/NAME] [p/PHONE_NUMBER] [a/ADDRESS] [e/EMAIL] [stp/STAFF_PREFERENCE]…​ [sep/SERVICE_PREFERENCE]…​ [h/HAIR_TYPE] [s/SKIN_TYPE] [al/ALLERGY]…​ [bd/BIRTHDATE] [rd/REGISTRATION_DATE]`","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**:information_source: Information:**","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cul\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cli\u003eAt least one of the optional fields must be provided.\u003c/li\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    \u003cli\u003eExisting values will be updated to the input values.\u003c/li\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cli\u003eEditing a customer will edit all future bookings of that customer.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* When editing staff/service preferences or allergies, the existing staff/service preferences or allergies will be removed i.e., adding of staff/service preferences or allergies is not cumulative.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* By leaving the staff/service preferences or allergies parameter empty, i.e, `stp/` or `sep/` or `al/` it will remove all the staff/service preferences or allergies currently associated with the customer.","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* Note that 2 customers cannot have the same phone number.","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"*  `editc 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st customer to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"*  `editc 2 n/Betsy Crower al/` Edits the name of the 2nd customer to be `Betsy Crower` and removes all existing allergies.","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Example Usage: `editc 2 n/Betsy Crower al/`","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![Editing a customer example](images/user-guide/edit-customer.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"#### 4.1.5 Finding customers\u0027 profile by keyword: `findc`","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Finds customers whose parameters contain any of the given keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Format: `findc KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-04-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* KEYWORD_TYPE is specific to customer prefixes: `n/` `a/` `p/` `e/` `rd/` `bd/` `s/` `h/` `stp/` `sep/` `al/`","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* For tags, using two tags of the same type will lead to only the latest one being searched for. For instance, `findc h/Oily h/Dry` will search for only customers with dry hair type.\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* For tags, using `findc h/Oily Dry` will search for customers that either have oily or dry hair.","lastModifiedDate":"2022-04-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g, `John` will match `john`","lastModifiedDate":"2022-04-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `findc n/Alex Yeoh` will not match customers who are `Alex Tan`, even if they both are called `Alex`","lastModifiedDate":"2022-04-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* `findc n/John stp/Jason` returns customers who have `john` in their name and customers who like `Jason`","lastModifiedDate":"2022-04-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* `findc al/Nickel` returns customer profiles with Nickel allergies","lastModifiedDate":"2022-04-06"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* `findc h/Oily` returns customer profiles that has the hair type of oily","lastModifiedDate":"2022-03-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"#### 4.1.6 Deleting customer(s) : `deletec`","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"Deletes the specified customer(s) from the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Format: `deletec INDEX,[MORE INDEXES]`","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* Deletes the customer profile at the specified INDEXES.","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2022-02-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2022-02-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* All indexes must be valid else the operation will not execute.","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Deleting a customer will delete all future bookings of that customer.","lastModifiedDate":"2022-03-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**:information_source: Information:** All the input indexes must be valid else the command will not be executed.","lastModifiedDate":"2022-03-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* `deletec 1,2` Removes the 1st and 2nd customer from the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### 4.2 Service management","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### 4.2.1 Service management command parameters","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"The table below shows a list of command parameters that will be used for service management.","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| Parameter      | Description                                                                                                                                                                                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"-"},"content":"|----------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `SERVICE_NAME` | Name of the service. Service name should only contain alphanumeric characters, hyphens and spaces, and it should not be blank. It should also be unique such that no two services have the same name. |","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `PRICE`        | Price of the service. Price should only contain numbers, at most 2 decimal places and have a value that is greater than 0.                                                                            |","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `DURATION`     | Duration of the service in minutes. Duration should only contain numbers and have a value that is greater than 0.                                                                                     |","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `INDEX`        | The index of the service in the displayed list. It must be a valid positive index.                                                                                                                    |","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"#### 4.2.2 Adding a service: `adds`","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Adds a service to the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `adds n/SERVICE_NAME pr/PRICE d/DURATION`","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* `adds n/Acne Facial Treatment pr/138 d/120`","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* `adds n/Hydrating Facial pr/108 d/60`","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Example Usage: `adds n/Acne Facial Treatment pr/138 d/120`","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"![Adding a service example](images/user-guide/add-service.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#### 4.2.3 Listing all services : `lists`","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Shows a list of all services in the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Format: `lists`","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"-"},"content":"#### 4.2.4 Editing a service: `edits`","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Edits an existing service in the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Format: `edits INDEX [n/SERVICE_NAME] [pr/PRICE] [d/DURATION]`","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**:information_source: Information:**","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    \u003cli\u003eAt least one of the optional fields must be provided.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    \u003cli\u003eExisting values will be updated to the input values.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003cli\u003eEditing a service will edit all future bookings with that service.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* `edits 1 pr/200` Edits the price of the 1st service to be `200`.","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* `edits 2 n/Dark Eye Circle Treatment d/30` Edits the name and duration of the 2nd service to be `Dark Eye Circle Treatment` and `60` respectively.","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Example Usage: `edits 1 pr/200`","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"![Editing a service example](images/user-guide/edit-service.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#### 4.2.5 Finding service\u0027 profile by keyword: `finds`","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Find services whose parameters contain any of the given keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Format: `finds KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* Keyword types available: name, price, duration","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g, `Facial` will match `facial`.","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* Only the parameters is searched.","lastModifiedDate":"2022-03-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Facial` will not match `Faial`.","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* `finds n/Facial` returns `Organic Radiance Facial` and `Bio Ageless Facial`.","lastModifiedDate":"2022-03-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* `finds pr/100` returns service profiles at cost $100.","lastModifiedDate":"2022-03-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* `finds d/90` returns services that lasts 90 minutes.","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#### 4.2.6 Deleting service(s) : `deletes`","lastModifiedDate":"2022-03-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Deletes the specified service(s) from the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Format: `deletes INDEX,[MORE INDEXES]`","lastModifiedDate":"2022-03-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* Deletes the service profile at the specified INDEXES.","lastModifiedDate":"2022-03-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed service list.","lastModifiedDate":"2022-03-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2022-03-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* All indexes must be valid else the operation will not execute.","lastModifiedDate":"2022-03-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* Deleting a service will delete all future bookings with that service.","lastModifiedDate":"2022-03-31"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**:information_source: Information:** All the input indexes must be valid else the command will not be executed.","lastModifiedDate":"2022-03-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* `deletes 3` Removes the 3rd service from the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* `deletes 1,2,3` Removes the 1st, 2nd and 3rd service from the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### 4.3 Booking management","lastModifiedDate":"2022-03-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#### 4.3.1 Booking management command parameters","lastModifiedDate":"2022-03-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The table below shows a list of command parameters that will be used for booking management.","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"| Parameter           | Description                                                                                                                                                                                          |","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"|---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| `NAME`              | Name of customer or Service. Name should only contain alphanumeric characters, hyphens and spaces, and it should not be blank. |","lastModifiedDate":"2022-04-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"| `CUSTOMER_INDEX`    | Customer Index should only contain numbers and have a value that is greater than 0.                                                                                                                  |","lastModifiedDate":"2022-04-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"| `SERVICE_INDEX`     | Service Index should only contain numbers and have a value that is greater than 0.                                                                                                                   |","lastModifiedDate":"2022-04-01"},{"lineNumber":380,"author":{"gitId":"-"},"content":"| `BOOKING_DATE_TIME` | Booking Date Time must be in format dd-MM-yyyy HH:mm.                                                                                                                                                |","lastModifiedDate":"2022-04-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"| `FEEDBACK`          | Feedback should only contain alphanumeric characters, hyphens and spaces, and it should not be blank.                                                                                                                                                                                            |","lastModifiedDate":"2022-04-01"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"#### 4.3.2 Adding a booking: `addb`","lastModifiedDate":"2022-03-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"Adds a booking to the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Format: `addb c/CUSTOMER_INDEX sev/SERVICE_INDEX st/BOOKING_DATE_TIME`","lastModifiedDate":"2022-03-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* `addb c/1 sev/1 st/10-10-2022 10:30`","lastModifiedDate":"2022-03-31"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* `addb c/2 sev/3 st/12-12-2022 10:30`","lastModifiedDate":"2022-03-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Example Usage: `addb c/1 sev/1 st/10-10-2022 10:30`","lastModifiedDate":"2022-03-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"![Adding a booking example](images/user-guide/add-booking.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#### 4.3.3 Listing all bookings : `listb`","lastModifiedDate":"2022-03-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Shows a list of all bookings in the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Format: `listb`","lastModifiedDate":"2022-03-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":401,"author":{"gitId":"-"},"content":"#### 4.3.4 Editing a booking: `editb`","lastModifiedDate":"2022-03-31"},{"lineNumber":402,"author":{"gitId":"-"},"content":"Edits an existing service in the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":404,"author":{"gitId":"-"},"content":"Format: `editb INDEX [c/CUSTOMER_INDEX] [sev/SERVICE_INDEX] [st/BOOKING_DATE_TIME] [f/FEEDBACK]`","lastModifiedDate":"2022-03-31"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**:information_source: Information:**","lastModifiedDate":"2022-03-31"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    \u003cli\u003eAt least one of the optional fields must be provided.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003cli\u003eExisting values will be updated to the input values.\u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cli\u003eFeedback can only be given if the current date is after booking date.\u003c/li\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    \u003cli\u003eEditing booking date to be after current date will remove any feedback.\u003c/li\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* `editb 1 sev/3 f/Excellent Customer Service` Edits the 1st booking\u0027s service to the service at Index 2 and edit its feedback to `Excellent Customer Service` .","lastModifiedDate":"2022-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* `editb 2 st/10-12-2022 10:30` Edits the booking time of the 1st booking to be `10-12-2022 10:30`.","lastModifiedDate":"2022-03-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Example Usage: `editb 1 sev/3 f/Excellent Customer Service`","lastModifiedDate":"2022-03-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"![Editing a booking example](images/user-guide/edit-booking.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"#### 4.3.5 Finding booking\u0027 profile by keyword: `findb`","lastModifiedDate":"2022-03-31"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Find bookings whose parameters contain any of the given keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Format: `findb KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-31"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* Keyword types available: customer index, service index, booking date time, feedback","lastModifiedDate":"2022-03-31"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g, `Excellent` will match `excellent`","lastModifiedDate":"2022-03-31"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* Only the parameters is searched.","lastModifiedDate":"2022-03-31"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `10-10-2022` will not match `10-10-202`","lastModifiedDate":"2022-03-31"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":436,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* `findb n/alex` returns bookings where the customer name or service name match.","lastModifiedDate":"2022-03-31"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* `findb f/Bad` returns `Bad service` and `Service was bad`.","lastModifiedDate":"2022-03-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* `findb st/10-10-2022` returns bookings that are on `10-10-2022`.","lastModifiedDate":"2022-03-31"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Example Usage: `findb n/alex`","lastModifiedDate":"2022-03-31"},{"lineNumber":442,"author":{"gitId":"-"},"content":"![Finding a booking example](images/user-guide/find-booking.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":444,"author":{"gitId":"-"},"content":"#### 4.3.6 Deleting booking(s) : `deleteb`","lastModifiedDate":"2022-03-31"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Deletes the specified booking(s) from the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Format: `deleteb INDEX,[MORE INDEXES]`","lastModifiedDate":"2022-03-31"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* Deletes the booking profile at the specified INDEXES.","lastModifiedDate":"2022-03-31"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed booking list.","lastModifiedDate":"2022-03-31"},{"lineNumber":451,"author":{"gitId":"-"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2022-03-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* All indexes must be valid else the operation will not execute.","lastModifiedDate":"2022-03-31"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":454,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":456,"author":{"gitId":"-"},"content":"**:information_source: Information:** All the input indexes must be valid else the command will not be executed.","lastModifiedDate":"2022-03-31"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":458,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":460,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* `deleteb 3` Removes the 3rd booking from the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* `deleteb 1,2,3` Removes the 1st, 2nd and 3rd booking from the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### 4.4 Statistics Management","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":466,"author":{"gitId":"-"},"content":"#### 4.4.1 Design","lastModifiedDate":"2022-03-31"},{"lineNumber":467,"author":{"gitId":"-"},"content":"The charts will be plotted in a pop-up. Note that as all the charts, except for monthly customer gained chart, are plotted based on optional fields, the counts in the pie chart will not tally with total customers.","lastModifiedDate":"2022-03-31"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"#### 4.4.2 Plot all charts: `plotAll`","lastModifiedDate":"2022-03-31"},{"lineNumber":470,"author":{"gitId":"-"},"content":"Plots all available chart formats.","lastModifiedDate":"2022-03-31"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":472,"author":{"gitId":"-"},"content":"Format: `plotAll`","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* `plotAll`","lastModifiedDate":"2022-03-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":477,"author":{"gitId":"-"},"content":"#### 4.4.3 Plot chart on popular staff amongst customers: `plotStaff`","lastModifiedDate":"2022-03-31"},{"lineNumber":478,"author":{"gitId":"-"},"content":"![image](https://user-images.githubusercontent.com/83572953/160984633-ba703f5b-0dda-4a88-b31c-d4f317eeb4f9.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"Plots a pie chart on the most popular staff as indicated by customers as their preferred staff. If there are most than 10 staffs indicated as preferred by customers in TrackBeau, only the top 10 most popular staff will be included in the piechart to let the chart be still meaningful.","lastModifiedDate":"2022-03-31"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Format: `plotStaff`","lastModifiedDate":"2022-03-31"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":484,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* `plotStaff`","lastModifiedDate":"2022-03-31"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":487,"author":{"gitId":"-"},"content":"#### 4.4.4 Plot chart on popular services amongst customers: `plotService`","lastModifiedDate":"2022-03-31"},{"lineNumber":488,"author":{"gitId":"-"},"content":"![image](https://user-images.githubusercontent.com/83572953/160984673-67637ccd-4104-40a0-a21f-0cca42e7d8ee.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":490,"author":{"gitId":"-"},"content":"Plots a pie chart on the most popular service as indicated by customers as their preferred service. If there are most than 10 services indicated as preferred by customers in TrackBeau, only the top 10 most popular services will be included in the piechart to let the chart be still meaningful.","lastModifiedDate":"2022-03-31"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":492,"author":{"gitId":"-"},"content":"Format: `plotService`","lastModifiedDate":"2022-03-31"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":494,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":495,"author":{"gitId":"-"},"content":"* `plotService`","lastModifiedDate":"2022-03-31"},{"lineNumber":496,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":497,"author":{"gitId":"-"},"content":"#### 4.4.5 Plot chart on common allergies amongst customers: `plotAllergy`","lastModifiedDate":"2022-03-31"},{"lineNumber":498,"author":{"gitId":"-"},"content":"![image](https://user-images.githubusercontent.com/83572953/160984906-59c238f4-d145-495a-8cf2-64e525014fc8.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":500,"author":{"gitId":"-"},"content":"Plots a pie chart on the most common allergies amongst customers. If there are most than 10 allergies in customer data, only the top 10 most common allergies will be included in the piechart to let the chart be still meaningful.","lastModifiedDate":"2022-03-31"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":502,"author":{"gitId":"-"},"content":"Format: `plotAllergy`","lastModifiedDate":"2022-03-31"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":504,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":505,"author":{"gitId":"-"},"content":"* `plotAllergy`","lastModifiedDate":"2022-03-31"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2022-03-31"},{"lineNumber":507,"author":{"gitId":"-"},"content":"#### 4.4.6 Plot chart on common skin type amongst customers: `plotSkin`","lastModifiedDate":"2022-03-31"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   ![image](https://user-images.githubusercontent.com/83572953/160984794-e12943ee-863f-4d96-accb-f23271ed6e08.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":510,"author":{"gitId":"-"},"content":"Plots a pie chart on the most common allergies amongst customers. If there are most than 10 skin types in customer data, only the top 10 most skin types will be included in the piechart to let the chart be still meaningful.","lastModifiedDate":"2022-03-31"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":512,"author":{"gitId":"-"},"content":"Format: `plotSkin`","lastModifiedDate":"2022-03-31"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":514,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":515,"author":{"gitId":"-"},"content":"* `plotSkin`   ","lastModifiedDate":"2022-03-31"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":517,"author":{"gitId":"-"},"content":"#### 4.4.7 Plot chart on common hair type amongst customers: `plotHair`","lastModifiedDate":"2022-03-31"},{"lineNumber":518,"author":{"gitId":"-"},"content":"![image](https://user-images.githubusercontent.com/83572953/160984823-3a8c47cc-8942-4d5a-87c9-cf0661f724c2.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":520,"author":{"gitId":"-"},"content":"Plots a pie chart on the most common hair type amongst customers. If there are most than 10 hair type in customer data, only the top 10 most hair types will be included in the piechart to let the chart be still meaningful.","lastModifiedDate":"2022-03-31"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Format: `plotHair`","lastModifiedDate":"2022-03-31"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* `plotHair`","lastModifiedDate":"2022-03-31"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":527,"author":{"gitId":"-"},"content":"#### 4.4.8 Plot chart on monthly customers gained in the current year: `plotMonthlyCustomers`","lastModifiedDate":"2022-03-31"},{"lineNumber":528,"author":{"gitId":"-"},"content":"![image](https://user-images.githubusercontent.com/83572953/160984859-f1d0a4f4-00f6-4719-b6ab-02da9a47da8f.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":530,"author":{"gitId":"-"},"content":"Plots a pie chart on monthly customers gained in the current year.","lastModifiedDate":"2022-03-31"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":532,"author":{"gitId":"-"},"content":"Format: `plotMonthlyCustomers`","lastModifiedDate":"2022-03-31"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":534,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":535,"author":{"gitId":"-"},"content":"* `plotMonthlyCustomers`","lastModifiedDate":"2022-03-31"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### 4.5 Schedule management","lastModifiedDate":"2022-03-31"},{"lineNumber":538,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":540,"author":{"gitId":"-"},"content":"**:information_source: Information:**","lastModifiedDate":"2022-04-08"},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003cul\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    \u003cli\u003eBookings that start and end on different dates will fall under its start date.\u003c/li\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":545,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":548,"author":{"gitId":"-"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":549,"author":{"gitId":"-"},"content":"* The indexes of bookings in schedule view is not meaning for deleting bookings. Using them will lead to unexpected behaviour.","lastModifiedDate":"2022-03-31"},{"lineNumber":550,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":554,"author":{"gitId":"-"},"content":"#### 4.5.1 Schedule management command parameters","lastModifiedDate":"2022-03-31"},{"lineNumber":555,"author":{"gitId":"-"},"content":"The table below shows a list of command parameters that will be used for schedule management.","lastModifiedDate":"2022-03-31"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":557,"author":{"gitId":"-"},"content":"| Parameter | Description                                                            |","lastModifiedDate":"2022-03-31"},{"lineNumber":558,"author":{"gitId":"-"},"content":"|-----------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":559,"author":{"gitId":"-"},"content":"| `DATE`    | The date of interest. Date should follow dd-MM-yyyy and be valid date. |","lastModifiedDate":"2022-03-31"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":561,"author":{"gitId":"-"},"content":"#### 4.5.2 Viewing schedule: `schedule`","lastModifiedDate":"2022-03-31"},{"lineNumber":562,"author":{"gitId":"-"},"content":"Display the schedule of the week containing selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":564,"author":{"gitId":"-"},"content":"Format: `schedule date/DATE`","lastModifiedDate":"2022-03-31"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":566,"author":{"gitId":"-"},"content":"Examples: ","lastModifiedDate":"2022-03-31"},{"lineNumber":567,"author":{"gitId":"-"},"content":"* `schedule date/10-10-2022`","lastModifiedDate":"2022-03-31"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":569,"author":{"gitId":"-"},"content":"Example Usage: `schedule date/10-10-2022`","lastModifiedDate":"2022-03-31"},{"lineNumber":570,"author":{"gitId":"-"},"content":"![display schedule](images/user-guide/display_schedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":572,"author":{"gitId":"-"},"content":"#### 4.5.3 Viewing next week schedule: `scheduleNext`","lastModifiedDate":"2022-03-31"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Display the schedule for next week from the last selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":575,"author":{"gitId":"-"},"content":"Format: `scheduleNext`","lastModifiedDate":"2022-03-31"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":577,"author":{"gitId":"-"},"content":"#### 4.5.4 Viewing previous week schedule: `schedulePreivous`","lastModifiedDate":"2022-03-31"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Display the schedule for previous week from the last selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":580,"author":{"gitId":"-"},"content":"Format: `schedulePrevious`","lastModifiedDate":"2022-03-31"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### 4.6 Miscellaneous","lastModifiedDate":"2022-03-31"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":584,"author":{"gitId":"-"},"content":"#### 4.6.1 Viewing help : `help`","lastModifiedDate":"2022-03-31"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":586,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-27"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":588,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":590,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2022-03-27"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":592,"author":{"gitId":"-"},"content":"#### 4.6.2 Clearing all entries : `clear`","lastModifiedDate":"2022-03-31"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"Clears all entries from the application.","lastModifiedDate":"2022-02-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"#### 4.6.3 Exiting the program : `exit`","lastModifiedDate":"2022-03-31"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"#### 4.6.4 Saving the data","lastModifiedDate":"2022-03-31"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"TrackBeau data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-21"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"#### 4.6.5 Editing the data file","lastModifiedDate":"2022-03-31"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":610,"author":{"gitId":"-"},"content":"TrackBeau data are saved as a JSON file `[JAR file location]/data/trackbeau.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":612,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":614,"author":{"gitId":"-"},"content":":exclamation: **Caution:**","lastModifiedDate":"2022-03-29"},{"lineNumber":615,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, TrackBeau will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-21"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":617,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"## 5. Command summary","lastModifiedDate":"2022-03-28"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### 5.1 Customer","lastModifiedDate":"2022-03-28"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":626,"author":{"gitId":"-"},"content":"| Action                 | Format                                                                                                                                                                                             | Examples                                                                                                                 |","lastModifiedDate":"2022-03-28"},{"lineNumber":627,"author":{"gitId":"-"},"content":"|------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":628,"author":{"gitId":"-"},"content":"| Add a customer         | `addc n/NAME p/PHONE_NUMBER a/ADDRESS rd/REGISTRATION_DATE [e/EMAIL] [stp/STAFF_PREFERENCE]…​ [sep/SERVICE_PREFERENCE]…​ [h/HAIR_TYPE] [s/SKIN_TYPE] [al/ALLERGY]…​ [bd/BIRTHDATE]`                | `addc n/Betsy Crow e/betsycrow@example.com a/Newgate Prison p/1234568 rd/06-04-2022 al/Aloe Vera sep/facial sep/massage` |","lastModifiedDate":"2022-04-08"},{"lineNumber":629,"author":{"gitId":"-"},"content":"| List all customers     | `listc`                                                                                                                                                                                            | `listc`                                                                                                                  |","lastModifiedDate":"2022-04-08"},{"lineNumber":630,"author":{"gitId":"-"},"content":"| Edit a customer        | `editc INDEX [n/NAME] [p/PHONE_NUMBER] [a/ADDRESS] [e/EMAIL] [stp/STAFF_PREFERENCE]…​ [sep/SERVICE_PREFERENCE]…​ [h/HAIR_TYPE] [s/SKIN_TYPE] [al/ALLERGY]…​ [bd/BIRTHDATE] [rd/REGISTRATION_DATE]` | `editc 1 n/Betsy Crower stp/Jason`                                                                                       |","lastModifiedDate":"2022-04-06"},{"lineNumber":631,"author":{"gitId":"-"},"content":"| Find customer profiles | `findc KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`                                                                                                                                                       | `findc n/Alex Yeoh`                                                                                                      |","lastModifiedDate":"2022-04-08"},{"lineNumber":632,"author":{"gitId":"-"},"content":"| Delete customer(s)     | `deletec INDEX,[MORE INDEXES]`                                                                                                                                                                     | `deletec 1,2`                                                                                                            |","lastModifiedDate":"2022-04-08"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":634,"author":{"gitId":"-"},"content":"### 5.2 Service","lastModifiedDate":"2022-03-28"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":636,"author":{"gitId":"-"},"content":"| Action                | Format                                                 | Examples                                    |","lastModifiedDate":"2022-03-28"},{"lineNumber":637,"author":{"gitId":"-"},"content":"|-----------------------|--------------------------------------------------------|---------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":638,"author":{"gitId":"-"},"content":"| Add a service         | `adds n/SERVICE_NAME pr/PRICE d/DURATION`              | `adds n/Acne Facial Treatment pr/138 d/120` |","lastModifiedDate":"2022-03-28"},{"lineNumber":639,"author":{"gitId":"-"},"content":"| List all services     | `lists`                                                ||","lastModifiedDate":"2022-03-28"},{"lineNumber":640,"author":{"gitId":"-"},"content":"| Edit a service        | `edits INDEX [n/SERVICE_NAME] [pr/PRICE] [d/DURATION]` | `edits 2 n/Dark Eye Circle Treatment d/30`  |","lastModifiedDate":"2022-03-28"},{"lineNumber":641,"author":{"gitId":"-"},"content":"| Find service profiles | `finds KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`           ||","lastModifiedDate":"2022-03-31"},{"lineNumber":642,"author":{"gitId":"-"},"content":"| Delete service(s)     | `deletes INDEX,[MORE INDEXES]`                         | `deletes 1,2,3`                             |","lastModifiedDate":"2022-03-28"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":644,"author":{"gitId":"-"},"content":"### 5.3 Booking","lastModifiedDate":"2022-03-28"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":646,"author":{"gitId":"-"},"content":"| Action                | Format                                                                                   | Examples                                     |","lastModifiedDate":"2022-03-28"},{"lineNumber":647,"author":{"gitId":"-"},"content":"|-----------------------|------------------------------------------------------------------------------------------|----------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":648,"author":{"gitId":"-"},"content":"| Add a booking         | `addb c/CUSTOMER_INDEX sev/SERVICE_INDEX st/BOOKING_DATE_TIME`                           | `addb c/1 sev/1 st/10-10-2022 10:30`         |","lastModifiedDate":"2022-03-31"},{"lineNumber":649,"author":{"gitId":"-"},"content":"| List all bookings     | `listb`                                                                                  ||","lastModifiedDate":"2022-03-31"},{"lineNumber":650,"author":{"gitId":"-"},"content":"| Edit a booking        | `editb INDEX [c/CUSTOMER_INDEX] [sev/SERVICE_INDEX] [st/BOOKING_DATE_TIME] [f/FEEDBACK]` | `editb 1 sev/3 f/Excellent Customer Service` |","lastModifiedDate":"2022-03-31"},{"lineNumber":651,"author":{"gitId":"-"},"content":"| Find booking profiles | `findb KEYWORD_TYPE KEYWORD [MORE_KEYWORDS]`                                             ||","lastModifiedDate":"2022-03-31"},{"lineNumber":652,"author":{"gitId":"-"},"content":"| Delete booking(s)     | `deleteb INDEX,[MORE INDEXES]`                                                           | `deleteb 1,2,3`                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":655,"author":{"gitId":"-"},"content":"### 5.4 Statistics","lastModifiedDate":"2022-03-28"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":657,"author":{"gitId":"-"},"content":"The charts plot up to 10 variables at most. For example, in plotStaff, the top 10 most popular staff will be plotted if there are for instance, 15 staff indicated by customers.","lastModifiedDate":"2022-03-31"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":659,"author":{"gitId":"-"},"content":"| Action                                                                                        | Format                | Examples              |","lastModifiedDate":"2022-03-28"},{"lineNumber":660,"author":{"gitId":"-"},"content":"|-----------------------------------------------------------------------------------------------|-----------------------|-----------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":661,"author":{"gitId":"-"},"content":"| Plot all charts                                                                               | `plotAll`             | `plotAll`             |","lastModifiedDate":"2022-03-31"},{"lineNumber":662,"author":{"gitId":"-"},"content":"| Plot chart of popular staff (popular being customers indicated them as their preferred staff) | `plotStaff`           | `plotStaff`           |","lastModifiedDate":"2022-03-31"},{"lineNumber":663,"author":{"gitId":"-"},"content":"| Plot chart on popular services by customers (as indicated in their preferred services)        | `plotService`         | `plotService`         |","lastModifiedDate":"2022-03-31"},{"lineNumber":664,"author":{"gitId":"-"},"content":"| Plot chart on common allergies amongst customers                                              | `plotAllergy`         | `plotAllergy`         |","lastModifiedDate":"2022-03-31"},{"lineNumber":665,"author":{"gitId":"-"},"content":"| Plot chart on common skin type of customers                                                   | `plotSkin`            | `plotSkin`            |","lastModifiedDate":"2022-03-31"},{"lineNumber":666,"author":{"gitId":"-"},"content":"| Plot chart on common hair type of customers                                                   | `plotHair`            | `plotHair`            |","lastModifiedDate":"2022-03-31"},{"lineNumber":667,"author":{"gitId":"-"},"content":"| Plot chart on customers gained per month in the current year                                  | `plotMonthlyCustomers` | `plotMonthlyCustomers` |   ","lastModifiedDate":"2022-03-31"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":669,"author":{"gitId":"-"},"content":"### 5.5 Schedule","lastModifiedDate":"2022-03-31"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":671,"author":{"gitId":"-"},"content":"| Action                                                              | Format               | Examples                   |","lastModifiedDate":"2022-03-31"},{"lineNumber":672,"author":{"gitId":"-"},"content":"|---------------------------------------------------------------------|----------------------|----------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":673,"author":{"gitId":"-"},"content":"| Display the schedule of the week containing selected date.          | `schedule date/DATE` | `schedule date/10-10-2022` |","lastModifiedDate":"2022-03-31"},{"lineNumber":674,"author":{"gitId":"-"},"content":"| Display the schedule for next week from the last selected date.     | `scheduleNext`       | `scheduleNext`             |","lastModifiedDate":"2022-03-31"},{"lineNumber":675,"author":{"gitId":"-"},"content":"| Display the schedule for previous week from the last selected date. | `schedulePrevious`   | `schedulePrevious`         |","lastModifiedDate":"2022-03-31"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":677,"author":{"gitId":"-"},"content":"### 5.6 Miscellaneous","lastModifiedDate":"2022-03-31"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":679,"author":{"gitId":"-"},"content":"| Action | Format  |","lastModifiedDate":"2022-03-28"},{"lineNumber":680,"author":{"gitId":"-"},"content":"|--------|---------|","lastModifiedDate":"2022-03-31"},{"lineNumber":681,"author":{"gitId":"-"},"content":"| Help   | `help`  |","lastModifiedDate":"2022-03-28"},{"lineNumber":682,"author":{"gitId":"-"},"content":"| Clear  | `clear` |","lastModifiedDate":"2022-03-28"},{"lineNumber":683,"author":{"gitId":"-"},"content":"| Exit   | `exit`  |","lastModifiedDate":"2022-03-28"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":685,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":687,"author":{"gitId":"-"},"content":"## 6. Known Limitations","lastModifiedDate":"2022-04-06"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":689,"author":{"gitId":"-"},"content":"* Inputting very long values for fields like the price of a Service might cause it to be round off at certain significant number due to the size limitation of the data type used for the field.                                                                                                       ","lastModifiedDate":"2022-04-06"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":691,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-06"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":693,"author":{"gitId":"-"},"content":"## 7. Glossary","lastModifiedDate":"2022-04-06"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":695,"author":{"gitId":"-"},"content":"| Term                              | Definition                                                                                                                                                              |","lastModifiedDate":"2022-03-28"},{"lineNumber":696,"author":{"gitId":"-"},"content":"|-----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":697,"author":{"gitId":"-"},"content":"| Command Line Interface (CLI)      | A command line interface connects a user to the computer program by allowing the users to interact with the application by typing in text (commands).                   |","lastModifiedDate":"2022-03-28"},{"lineNumber":698,"author":{"gitId":"-"},"content":"| Graphical User Interface (GUI)    | A graphical user interface is a type of user interface through which users interact with the application via visual indicator representations.                          |","lastModifiedDate":"2022-03-28"},{"lineNumber":699,"author":{"gitId":"-"},"content":"| Java ARchive (JAR)                | A JAR is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file distribution. |","lastModifiedDate":"2022-03-28"},{"lineNumber":700,"author":{"gitId":"-"},"content":"| Java 11                           | Java 11 is an open-source reference implementation of Java SE platform version 11.                                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":701,"author":{"gitId":"-"},"content":"| Javascript Object Notation (JSON) | JSON is a text format for storing and transporting data.                                                                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"## 8. FAQ","lastModifiedDate":"2022-04-06"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":707,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":708,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TrackBeau home folder.       ","lastModifiedDate":"2022-03-29"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"flairekq":29,"-":680}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"kashing555"},"content":"    content: \"TrackBeau\";","lastModifiedDate":"2022-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"kashing555":1,"-":294}},{"path":"docs/_sass/minima/skins/classic.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"$brand-color:           #828282 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$brand-color-light:     lighten($brand-color, 40%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$brand-color-dark:      darken($brand-color, 25%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$text-color:            #111 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$background-color:      #fdfdfd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$code-background-color: #eef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$link-base-color:       #2a7ae2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$link-visited-color:    darken($link-base-color, 15%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-color:      lighten($text-color, 18%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$table-zebra-color:     lighten($brand-color, 46%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$table-header-bg-color: lighten($brand-color, 43%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$table-header-border:   lighten($brand-color, 36%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$table-border-color:    $brand-color-light !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"// Syntax highlighting styles should be adjusted appropriately for every \"skinType\"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// ----------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  .c     { color: #998; font-style: italic } // Comment","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  .err   { color: #a61717; background-color: #e3d2d2 } // Error","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  .k     { font-weight: bold } // Keyword","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  .o     { font-weight: bold } // Operator","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  .cm    { color: #998; font-style: italic } // Comment.Multiline","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  .cp    { color: #999; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  .c1    { color: #998; font-style: italic } // Comment.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  .gd    { color: #000; background-color: #fdd } // Generic.Deleted","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  .ge    { font-style: italic } // Generic.Emph","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  .gr    { color: #a00 } // Generic.Error","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  .gh    { color: #999 } // Generic.Heading","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  .gi    { color: #000; background-color: #dfd } // Generic.Inserted","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .go    { color: #888 } // Generic.Output","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  .gp    { color: #555 } // Generic.Prompt","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  .gs    { font-weight: bold } // Generic.Strong","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  .gu    { color: #aaa } // Generic.Subheading","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .gt    { color: #a00 } // Generic.Traceback","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  .kc    { font-weight: bold } // Keyword.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  .kd    { font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  .kp    { font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  .kr    { font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  .kt    { color: #458; font-weight: bold } // Keyword.Type","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  .m     { color: #099 } // Literal.Number","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  .s     { color: #d14 } // Literal.String","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  .na    { color: #008080 } // Name.Attribute","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  .nb    { color: #0086B3 } // Name.Builtin","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  .nc    { color: #458; font-weight: bold } // Name.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  .no    { color: #008080 } // Name.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  .ni    { color: #800080 } // Name.Entity","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  .ne    { color: #900; font-weight: bold } // Name.Exception","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  .nf    { color: #900; font-weight: bold } // Name.Function","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  .nn    { color: #555 } // Name.Namespace","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  .nt    { color: #000080 } // Name.Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  .nv    { color: #008080 } // Name.Variable","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  .ow    { font-weight: bold } // Operator.Word","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  .w     { color: #bbb } // Text.Whitespace","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  .mf    { color: #099 } // Literal.Number.Float","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  .mh    { color: #099 } // Literal.Number.Hex","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  .mi    { color: #099 } // Literal.Number.Integer","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  .mo    { color: #099 } // Literal.Number.Oct","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  .sb    { color: #d14 } // Literal.String.Backtick","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  .sc    { color: #d14 } // Literal.String.Char","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  .sd    { color: #d14 } // Literal.String.Doc","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  .s2    { color: #d14 } // Literal.String.Double","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  .se    { color: #d14 } // Literal.String.Escape","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  .sh    { color: #d14 } // Literal.String.Heredoc","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  .si    { color: #d14 } // Literal.String.Interpol","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  .sx    { color: #d14 } // Literal.String.Other","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .sr    { color: #009926 } // Literal.String.Regex","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  .s1    { color: #d14 } // Literal.String.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  .ss    { color: #990073 } // Literal.String.Symbol","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  .bp    { color: #999 } // Name.Builtin.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .vc    { color: #008080 } // Name.Variable.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  .vg    { color: #008080 } // Name.Variable.Global","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  .vi    { color: #008080 } // Name.Variable.Instance","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  .il    { color: #099 } // Literal.Number.Integer.Long","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":83,"isabelteo":1}},{"path":"docs/_sass/minima/skins/solarized.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"// Solarized skinType","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Created by Sander Voerman \u003cmailto:sander@savoerman.nl\u003e using the Solarized","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// color scheme by Ethan Schoonover \u003chttps://ethanschoonover.com/solarized\u003e.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"// This style sheet implements two options for the minima.skinType setting:","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// \"solarized\" for light mode and \"solarized-dark\" for dark mode.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$sol-is-dark: false !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Color scheme","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// ------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// The inline comments show the canonical L*a*b values for each color.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$sol-base03:   #002b36;  // 15 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$sol-base02:   #073642;  // 20 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$sol-base01:   #586e75;  // 45 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$sol-base00:   #657b83;  // 50 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$sol-base0:    #839496;  // 60 -06 -03","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$sol-base1:    #93a1a1;  // 65 -05 -02","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$sol-base2:    #eee8d5;  // 92 -00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$sol-base3:    #fdf6e3;  // 97  00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"$sol-yellow:   #b58900;  // 60  10  65","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$sol-orange:   #cb4b16;  // 50  50  55","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$sol-red:      #dc322f;  // 50  65  45","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$sol-magenta:  #d33682;  // 50  65 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$sol-violet:   #6c71c4;  // 50  15 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$sol-blue:     #268bd2;  // 55 -10 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$sol-cyan:     #2aa198;  // 60 -35 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$sol-green:    #859900;  // 60 -20  65","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"$sol-mono3:    $sol-base3;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$sol-mono2:    $sol-base2;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"$sol-mono1:    $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"$sol-mono00:   $sol-base00;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"$sol-mono01:   $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@if $sol-is-dark {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  $sol-mono3:  $sol-base03;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  $sol-mono2:  $sol-base02;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  $sol-mono1:  $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  $sol-mono00: $sol-base0;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  $sol-mono01: $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"// Minima color variables","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"// ----------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$brand-color:           $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"$brand-color-light:     mix($sol-mono1, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"$brand-color-dark:      $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"$text-color:            $sol-mono01 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"$background-color:      $sol-mono3 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"$code-background-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"$link-base-color:       $sol-blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"$link-visited-color:    mix($sol-blue, $sol-mono00) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$table-text-color:      $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$table-zebra-color:     mix($sol-mono2, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"$table-header-bg-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$table-header-border:   $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"$table-border-color:    $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"// Syntax highlighting styles","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"// --------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  .c     { color: $sol-mono1; font-style: italic } // Comment","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  .err   { color: $sol-red } // Error","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .k     { color: $sol-mono01; font-weight: bold } // Keyword","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  .o     { color: $sol-mono01; font-weight: bold } // Operator","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  .cm    { color: $sol-mono1; font-style: italic } // Comment.Multiline","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  .cp    { color: $sol-mono1; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .c1    { color: $sol-mono1; font-style: italic } // Comment.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  .cs    { color: $sol-mono1; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  .gd    { color: $sol-red } // Generic.Deleted","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  .gd .x { color: $sol-red } // Generic.Deleted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  .ge    { color: $sol-mono00; font-style: italic } // Generic.Emph","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  .gr    { color: $sol-red } // Generic.Error","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  .gh    { color: $sol-mono1 } // Generic.Heading","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  .gi    { color: $sol-green } // Generic.Inserted","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  .gi .x { color: $sol-green } // Generic.Inserted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  .go    { color: $sol-mono00 } // Generic.Output","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  .gp    { color: $sol-mono00 } // Generic.Prompt","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  .gs    { color: $sol-mono01; font-weight: bold } // Generic.Strong","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  .gu    { color: $sol-mono1 } // Generic.Subheading","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  .gt    { color: $sol-red } // Generic.Traceback","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  .kc    { color: $sol-mono01; font-weight: bold } // Keyword.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  .kd    { color: $sol-mono01; font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  .kp    { color: $sol-mono01; font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  .kr    { color: $sol-mono01; font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  .kt    { color: $sol-violet; font-weight: bold } // Keyword.Type","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  .m     { color: $sol-cyan } // Literal.Number","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .s     { color: $sol-magenta } // Literal.String","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  .na    { color: $sol-cyan } // Name.Attribute","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  .nb    { color: $sol-blue } // Name.Builtin","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  .nc    { color: $sol-violet; font-weight: bold } // Name.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  .no    { color: $sol-cyan } // Name.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  .ni    { color: $sol-violet } // Name.Entity","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  .ne    { color: $sol-violet; font-weight: bold } // Name.Exception","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  .nf    { color: $sol-blue; font-weight: bold } // Name.Function","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  .nn    { color: $sol-mono00 } // Name.Namespace","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  .nt    { color: $sol-blue } // Name.Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  .nv    { color: $sol-cyan } // Name.Variable","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  .ow    { color: $sol-mono01; font-weight: bold } // Operator.Word","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  .w     { color: $sol-mono1 } // Text.Whitespace","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  .mf    { color: $sol-cyan } // Literal.Number.Float","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  .mh    { color: $sol-cyan } // Literal.Number.Hex","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  .mi    { color: $sol-cyan } // Literal.Number.Integer","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  .mo    { color: $sol-cyan } // Literal.Number.Oct","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  .sb    { color: $sol-magenta } // Literal.String.Backtick","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  .sc    { color: $sol-magenta } // Literal.String.Char","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  .sd    { color: $sol-magenta } // Literal.String.Doc","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  .s2    { color: $sol-magenta } // Literal.String.Double","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  .se    { color: $sol-magenta } // Literal.String.Escape","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  .sh    { color: $sol-magenta } // Literal.String.Heredoc","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  .si    { color: $sol-magenta } // Literal.String.Interpol","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  .sx    { color: $sol-magenta } // Literal.String.Other","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  .sr    { color: $sol-green } // Literal.String.Regex","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  .s1    { color: $sol-magenta } // Literal.String.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .ss    { color: $sol-magenta } // Literal.String.Symbol","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  .bp    { color: $sol-mono1 } // Name.Builtin.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  .vc    { color: $sol-cyan } // Name.Variable.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  .vg    { color: $sol-cyan } // Name.Variable.Global","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  .vi    { color: $sol-cyan } // Name.Variable.Instance","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  .il    { color: $sol-cyan } // Literal.Number.Integer.Long","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":131,"isabelteo":2}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"ecp -\u003e ec ++: index, editCustomerDescriptor","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"hanhuiice":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"title: TrackBeau","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-3/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-3/tp/branch/master/graph/badge.svg?token\u003d12OE6Y6JBZ)](https://codecov.io/gh/AY2122S2-CS2103-F11-3/tp)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"* This is application that is designed for busy beauty salons with diverse customer bases that want to personalise service. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface). \u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"  Example usages:","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"  * Track customer profiles like their skin type or hair type so that appropriate products can be recommended for return customers","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"  * Track booking time slots to organise manpower and facilities","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"  * Obtain overall statistics on new customers gained to adjust sales plans","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"* If you are interested in using TrackBeau, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s2-cs2103-f11-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"* If you are interested about developing TrackBeau, the [**Developer Guide**](https://ay2122s2-cs2103-f11-3.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":10,"isabelteo":10}},{"path":"docs/team/flairekq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"layout: page","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"title: Yong Kai Qi\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"### Project: TrackBeau","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"#### Overview","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"TrackBeau is a desktop app made for beauty salons to aid them in managing customers’ profile, bookings and services. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"#### Summary of contributions","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"* **New Feature**: Added the ability to manage services available in the beauty salon.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    * What it does: Allows the user to create, update, delete service and view all services.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    * Justification: This feature is crucial as beauty salons needs to keep track of the services that they have and also make use of it for bookings of services.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"* **New Feature**: Added the ability to edit customers of the beauty salon.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    * What it does: Allows the user to update the information of a customer.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    * Justification: This feature is crucial as the customer\u0027s information might change over time and the beauty salon has to stay up-to-date on the information.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    * Revamp the overall GUI to suit the theme of TrackBeau and the various features it has.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    * Improved code quality by abstracting codes to avoid code duplication","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    ","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"* **Code contributed**: Around 2kLoC contribution to the project [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dflairekq\u0026tabRepo\u003dAY2122S2-CS2103-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"  * User Guide:","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    * Added sections 3, 4.2.1, 4.2.2, 4.2.3, 4.2.4, 4.2.6 and 6.","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    *","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"* **Team Task**:","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"  * Set up the GitHub team org and repo","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"  * Maintaining the issue tracker","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"  * Updating user docs that are not specific to a feature","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"* **Community**:","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"  * Reviewed and merged PRs for team members.","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"  * Reported bugs and gave suggestions to other teams during the dry run of the practical examination [repository: ped](https://github.com/flairekq/ped/issues)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"  * Helped peers in the module via the module\u0027s GitHub website\u0027s forum issues [#233](https://github.com/nus-cs2103-AY2122S2/forum/issues/233) ","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"flairekq":40}},{"path":"docs/team/hanhuiice.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"layout: page","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"title: Wu HanHui\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"### Project: TrackBeau","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"TrackBeau is a **desktop app made for beauty salons to aid them in managing customers\u0027 profile, bookings and services.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"It is optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"Interface (GUI). If you can type fast, TrackBeau can help you manage your customers, bookings and services faster than","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"traditional GUI apps.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"* **New Feature**: Added the ability to view schedule of a selected week.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"  * What it does: allows the user to view all booking organised by the day of the week.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"  * Justification: This feature allows the user to view bookings in an organised manner which help better manage the new bookings and prepare manpower ahead.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"  ","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"* **New features**: Added the ability to delete multiple customer in single delete command.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"  * What it does: allows the user to specify multiple customer indexes and delete those customers.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"  * Justification: There might be multiple customers profiles that need to be removed and deleting them one at a time is slow. The product should provide a convenient way to batch delete.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"  ","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhanhuiice\u0026tabRepo\u003dAY2122S2-CS2103-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"* **Documentation**: ","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"  * User Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"    * Added documentation for the schedule management","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    * Added implement details for deleting multiple customers","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"* **Community**:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"  * Reviewed PRs","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"hanhuiice":32}},{"path":"docs/team/isabelteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"title: Isabel Teo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"### Project: TrackBeau","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"TrackBeau is a desktop application built for beauty salons to manage their customer base. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"* **New Feature**: ","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"* Added feature to obtain summary data on customer information such as pie charts on customer attributes and line chart on customers gained per month in the current year","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003disabelteo\u0026tabRepo\u003dAY2122S2-CS2103-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    * Contributed to discussions on user stories to prioritise and relating code between different features.","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    * Added attributes to customers for salons to track such as birthday, registration date, skin type, hair type, preferred staff, preferred services and allergies.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        * Contributed to the documentation for commands relating to customers.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        * Wrote the documentation for commands relating to plotting charts.","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        * Fixed documentation flaws in the user guide.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        * To be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    * Helped to peer review code.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    * Helped to point out potential bugs or code quality flaws.","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    * Worked with teammates to discuss about how to implement more complicated features.","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    * To be added soon","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"isabelteo":36}},{"path":"docs/team/kashing555.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"Layout: Page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"Title: Ka Shing\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"### Project: TrackBeau","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"TrackBeau is a desktop app for beauty salons to manage customer information, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TrackBeau can get your customer profile management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"* **New Feature**: Added the ability to find customers, services and bookings using a keyword.","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"  * What it does: Allows the user to filter and view customer, services and bookings with keywords.","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"  * Justification: Feature is crucial for staff members to find specific customers, services and bookings to view, edit or delete their details.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"* **New Feature**: Added the ability to manage bookings in the beauty salon.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"  * What it does: Allows the user to create, edit, delete, find and view bookings.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"  * Justification: Feature is crucial for staff members to keep track of the salon\u0027s schedule.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"  * Pull Request:","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    * #35: Commands in User Guide","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    * #36: Update Instructions for manual testing and user stories in Developer Guide","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    * #71: Removed addressbook from helpwindow","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    * #72: added search by name, phone number, skin type and hairtype","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    * #77 \u0026 #99: Additional Find Keywords and find Tests","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    * #101 \u0026 #126: Added Bookings Functions with services and customers","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    * Added sections 4.2.5, 4.3.1, 4.3.2, 4.3.3, 4.3.4, 4.3.5, 4.3.6 and 5.3.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"    * Updated sections 5.2.","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    * Added user stories to view customer profile by name","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"    * Added user stories to view customer profile keyword type and keyword","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    * Added Instructions for manual testing of `find`","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"  * Reviewed and merged PRs for TP team.","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"  * Bug reports and suggestions for other TP teams during practical examination dry run. [repository: ped](https://github.com/kashing555/ped/issues)","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"kashing555":44}},{"path":"docs/team/oheyesee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"title: Kong Jun Yin\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"### Project: TrackBeau","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"TrackBeau is a desktop address book application used for beauty salon to manage customer information. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"**to be added soon**","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"hanhuiice":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":" * Changes the remark of an existing customer in the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"            + \": Edits the remark of the customer identified \"","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"hanhuiice"},"content":"Create a `RemarkCommandParser` class in the `seedu.trackbeau.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"hanhuiice"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of customer data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the customer’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"hanhuiice"},"content":"Create a new `Remark` in `seedu.trackbeau.model.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-02-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"hanhuiice"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"hanhuiice"},"content":"Simply add the following to [`seedu.trackbeau.ui.CustomerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-02-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"hanhuiice"},"content":"public PersonCard(Person customer, int displayedIndex) {","lastModifiedDate":"2022-02-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"hanhuiice"},"content":"    remark.setText(customer.getRemark().value);","lastModifiedDate":"2022-02-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"hanhuiice"},"content":"        Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-02-25"},{"lineNumber":347,"author":{"gitId":"hanhuiice"},"content":"        Person editedCustomer \u003d new Person(","lastModifiedDate":"2022-02-25"},{"lineNumber":348,"author":{"gitId":"hanhuiice"},"content":"                customerToEdit.getName(), customerToEdit.getPhone(), customerToEdit.getEmail(),","lastModifiedDate":"2022-02-25"},{"lineNumber":349,"author":{"gitId":"hanhuiice"},"content":"                customerToEdit.getAddress(), remark, customerToEdit.getTags());","lastModifiedDate":"2022-02-25"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"hanhuiice"},"content":"        model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2022-02-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2022-02-25"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"hanhuiice"},"content":"     * {@code customerToEdit}.","lastModifiedDate":"2022-02-25"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"hanhuiice"},"content":"    private String generateSuccessMessage(Person customerToEdit) {","lastModifiedDate":"2022-02-25"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"hanhuiice"},"content":"        return String.format(message, customerToEdit);","lastModifiedDate":"2022-02-25"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"hanhuiice":24,"-":377}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"The `address` field in `Person` is actually an instance of the `seedu.trackbeau.model.customer.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"  \"customers\": [ {","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hanhuiice":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.trackbeau.logic.Logic`.","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"A quick look at the `seedu.trackbeau.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"hanhuiice"},"content":"       Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-02-25"},{"lineNumber":193,"author":{"gitId":"hanhuiice"},"content":"       Person editedCustomer \u003d createEditedPerson(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"hanhuiice"},"content":"       if (!customerToEdit.isSamePerson(editedCustomer) \u0026\u0026 model.hasPerson(editedCustomer)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"hanhuiice"},"content":"       model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2022-02-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"hanhuiice"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2022-02-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"hanhuiice"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the customer data.","lastModifiedDate":"2022-02-25"},{"lineNumber":205,"author":{"gitId":"hanhuiice"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ customers.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":206,"author":{"gitId":"hanhuiice"},"content":"     FYI, The \u0027filtered list\u0027 is the list of customers resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the customers so that the user can see the edited customer along with all other customers. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":207,"author":{"gitId":"hanhuiice"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of customers is being tracked.","lastModifiedDate":"2022-02-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"hanhuiice"},"content":"        customers.addAll(","lastModifiedDate":"2022-02-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hanhuiice":12,"-":289}},{"path":"src/main/java/seedu/trackbeau/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.FileUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"hanhuiice":3,"-":61}},{"path":"src/main/java/seedu/trackbeau/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"hanhuiice":1,"-":24}},{"path":"src/main/java/seedu/trackbeau/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Config;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Version;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.ConfigUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.StringUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.Logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.LogicManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.util.SampleDataUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.JsonTrackBeauStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.Storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.StorageManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.TrackBeauStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.UserPrefsStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.UiManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TrackBeau ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        TrackBeauStorage trackBeauStorage \u003d new JsonTrackBeauStorage(userPrefs.getTrackBeauFilePath());","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"        storage \u003d new StorageManager(trackBeauStorage, userPrefsStorage);","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s trackBeau and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"     * The data from the sample trackBeau will be used instead if {@code storage}\u0027s trackBeau is not found,","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"     * or an empty trackBeau will be used instead if errors occur when reading {@code storage}\u0027s trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        Optional\u003cReadOnlyTrackBeau\u003e trackBeauOptional;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        ReadOnlyTrackBeau initialData;","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"            trackBeauOptional \u003d storage.readTrackBeau();","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"            if (!trackBeauOptional.isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TrackBeau\");","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"            initialData \u003d trackBeauOptional.orElseGet(SampleDataUtil::getSampleTrackBeau);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TrackBeau\");","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"            initialData \u003d new TrackBeau();","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TrackBeau\");","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"            initialData \u003d new TrackBeau();","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"hanhuiice"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TrackBeau\");","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"hanhuiice"},"content":"        logger.info(\"Starting TrackBeau \" + MainApp.VERSION);","lastModifiedDate":"2022-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"hanhuiice"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TrackBeau ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":40,"flairekq":1,"-":139,"isabelteo":3}},{"path":"src/main/java/seedu/trackbeau/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":62}},{"path":"src/main/java/seedu/trackbeau/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":78}},{"path":"src/main/java/seedu/trackbeau/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    private static final String LOG_FILE \u003d \"trackbeau.log\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":2,"-":110}},{"path":"src/main/java/seedu/trackbeau/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX \u003d \"The booking index provided is invalid\";","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX \u003d \"The service index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_CUSTOMERS_LISTED_OVERVIEW \u003d \"%1$d customer(s) listed!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_SERVICES_LISTED_OVERVIEW \u003d \"%1$d service(s) listed!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_BOOKING_LISTED_OVERVIEW \u003d \"%1$d booking(s) listed!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATED_INDEX \u003d \"Duplicate index found!\";","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_INVALID_FEEDBACK_TIME \u003d \"A feedback cannot be made before the appointment!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":3,"kashing555":5,"flairekq":1,"-":9}},{"path":"src/main/java/seedu/trackbeau/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":115}},{"path":"src/main/java/seedu/trackbeau/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core.index;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hanhuiice":1,"-":53}},{"path":"src/main/java/seedu/trackbeau/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.exceptions;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":10}},{"path":"src/main/java/seedu/trackbeau/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.exceptions;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":1,"-":20}},{"path":"src/main/java/seedu/trackbeau/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.MainApp;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":2,"-":40}},{"path":"src/main/java/seedu/trackbeau/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":1,"-":34}},{"path":"src/main/java/seedu/trackbeau/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Config;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hanhuiice":3,"-":20}},{"path":"src/main/java/seedu/trackbeau/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":82}},{"path":"src/main/java/seedu/trackbeau/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":3,"-":140}},{"path":"src/main/java/seedu/trackbeau/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":2,"-":66,"isabelteo":1}},{"path":"src/main/java/seedu/trackbeau/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"     * Returns the TrackBeau.","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"     * @see seedu.trackbeau.model.Model#getTrackBeau()","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    ReadOnlyTrackBeau getTrackBeau();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    /** Returns an unmodifiable view of the filtered list of bookings */","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    ObservableList\u003cBooking\u003e getFilteredBookingList();","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    /** Returns an unmodifiable view of the list of services */","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    ObservableList\u003cService\u003e getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"     * Returns the user prefs\u0027 trackBeau file path.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    Path getTrackBeauFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"     * Returns selected date ofr schedule.","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"    LocalDate getSelectedDate();","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hanhuiice":21,"kashing555":1,"flairekq":3,"-":36,"isabelteo":3}},{"path":"src/main/java/seedu/trackbeau/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.TrackBeauParser;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.Storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    private final TrackBeauParser trackBeauParser;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        trackBeauParser \u003d new TrackBeauParser();","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        Command command \u003d trackBeauParser.parseCommand(commandText);","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"            storage.saveTrackBeau(model.getTrackBeau());","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    public ReadOnlyTrackBeau getTrackBeau() {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"        return model.getTrackBeau();","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    public ObservableList\u003cBooking\u003e getFilteredBookingList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        return model.getFilteredBookingList();","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"    public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"        return model.getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"    public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"        return model.getTrackBeauFilePath();","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"    public LocalDate getSelectedDate() {","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"        return model.getSelectedDate();","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hanhuiice":30,"kashing555":2,"flairekq":4,"-":59,"isabelteo":4}},{"path":"src/main/java/seedu/trackbeau/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":" * Clears trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TrackBeau has been cleared!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"        model.setTrackBeau(new TrackBeau());","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":8,"-":16}},{"path":"src/main/java/seedu/trackbeau/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":3,"-":17}},{"path":"src/main/java/seedu/trackbeau/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /** plot staff chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotStaffChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    /** plot service chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotServiceChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    /** plot allergy chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotAllergyChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    /** plot skin chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotSkinChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    /** plot hair chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotHairChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    /** plot monthly customer chart */","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    private final boolean plotMonthlyCustomerChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    /** Panel to display */","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    private final Panel panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp,","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                         boolean exit, boolean plotStaffChart,","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                         boolean plotServiceChart, boolean plotAllergyChart,","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                         boolean plotSkinChart, boolean plotHairChart,","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"                         boolean plotMonthlyCustomerChart, Panel panel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        this.panel \u003d panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"        this.plotStaffChart \u003d plotStaffChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        this.plotServiceChart \u003d plotServiceChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        this.plotAllergyChart \u003d plotAllergyChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        this.plotSkinChart \u003d plotSkinChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        this.plotHairChart \u003d plotHairChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"        this.plotMonthlyCustomerChart \u003d plotMonthlyCustomerChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"    public CommandResult(String feedbackToUser, Panel panel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        this(feedbackToUser,","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"                false, false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, panel);","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"    public Panel getPanel() {","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        return panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotStaffChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        return plotStaffChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotServiceChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        return plotServiceChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotAllergyChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"        return plotAllergyChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotSkinChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"        return plotSkinChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotHairChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"        return plotHairChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"    public boolean isPlotMonthlyCustomerChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        return plotMonthlyCustomerChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 plotStaffChart \u003d\u003d otherCommandResult.plotStaffChart","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 plotServiceChart \u003d\u003d otherCommandResult.plotServiceChart","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 plotAllergyChart \u003d\u003d otherCommandResult.plotAllergyChart","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 plotSkinChart \u003d\u003d otherCommandResult.plotSkinChart","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 plotHairChart \u003d\u003d otherCommandResult.plotHairChart","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 plotMonthlyCustomerChart \u003d\u003d otherCommandResult.plotMonthlyCustomerChart","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 panel \u003d\u003d otherCommandResult.panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit,","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"                plotStaffChart, plotServiceChart, plotAllergyChart,","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"hanhuiice"},"content":"                plotSkinChart, plotHairChart, plotMonthlyCustomerChart, panel);","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":18,"-":65,"isabelteo":61}},{"path":"src/main/java/seedu/trackbeau/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TrackBeau as requested ...\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"                true, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hanhuiice":4,"-":15,"isabelteo":3}},{"path":"src/main/java/seedu/trackbeau/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":4,"-":18,"isabelteo":1}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotAllergyChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a Allergy Chart that shows the most common allergies amongst customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotAllergyChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotAllergy\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots allergy chart of customers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted allergy chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"                false, true, false, true, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"            false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":3,"isabelteo":21}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots all charts.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotAll\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots all charts.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted all charts.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                false, true,","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                true, true, true, true,","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"            true, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":3,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotHairChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a Hair Type Chart that shows the most common hair type amongst customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotHairChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotHair\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots hair type chart of customers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted hair type chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                false, false, true, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":2,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotMonthlyCustomerChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a chart that shows the number of customers gained per month.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotMonthlyCustomerChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotMonthlyCustomers\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots monthly customer chart.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted monthly customer chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"                false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, true, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":3,"isabelteo":21}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotServiceChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a Service Chart that shows the favourite services amongst customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotServiceChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotService\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots service preference chart of customers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted service chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                false, false, true,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":2,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotSkinChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a Skin Type Chart that shows the common skin type amongst customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotSkinChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotSkin\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots skin type chart of customers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted skin chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                false, true, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":2,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/commands/PlotStaffChartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Plots a Staff Chart that shows the favourite staffs amongst customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class PlotStaffChartCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public static final String COMMAND_WORD \u003d \"plotStaff\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            + \": Plots staff preference chart of customers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final String SHOWING_CHART_MESSAGE \u003d \"Charted staff chart.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        return new CommandResult(SHOWING_CHART_MESSAGE, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                false, true, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"hanhuiice":2,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":" * View schedule for the week of selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List bookings for the week containing date.\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"            + \"parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"            + PREFIX_DATE + \"10-10-2022\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying schedule for the week of %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"    private final LocalDate selectedDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"     * Create a new ScheduleCommand to display schedule for week of {@code selectDate}","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    public ScheduleCommand(LocalDate selectedDate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(selectedDate);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"        this.selectedDate \u003d selectedDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        model.setSelectedDate(selectedDate);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedDate.format(formatter)),","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"            false, false, false, false, false,","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"            false, false, false, Panel.SCHEDULE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"            || (other instanceof ScheduleCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"            \u0026\u0026 selectedDate.equals(((ScheduleCommand) other).selectedDate));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":52}},{"path":"src/main/java/seedu/trackbeau/logic/commands/ScheduleNextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":" * View schedule of next week from last selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"public class ScheduleNextCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"    public static final String COMMAND_WORD \u003d \"scheduleNext\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List bookings of next week from last selected date.\"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying next week schedule.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"        model.setSelectedDate(model.getSelectedDate().plusDays(7));","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS), Panel.SCHEDULE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":25}},{"path":"src/main/java/seedu/trackbeau/logic/commands/SchedulePreviousCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":" * View schedule of previous week from last selected date.","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"public class SchedulePreviousCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"    public static final String COMMAND_WORD \u003d \"schedulePrevious\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"            + \": List bookings of previous week from last selected date.\"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying previous week schedule.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"        model.setSelectedDate(model.getSelectedDate().minusDays(7));","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS), Panel.SCHEDULE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":26}},{"path":"src/main/java/seedu/trackbeau/logic/commands/booking/AddBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_CUSTOMERINDEX;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICEINDEX;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.booking.AddBookingCommandParser.EMPTY_FEEDBACK_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":" * Adds a booking to trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"public class AddBookingCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"addb\";","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Booking to TrackBeau. \"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            + PREFIX_CUSTOMERINDEX + \"CUSTOMERINDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            + PREFIX_SERVICEINDEX + \"SERVICEINDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            + PREFIX_STARTTIME + \"APPOINTMENTTIME (In format dd-MM-yyyy HH:mm) \\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            + PREFIX_CUSTOMERINDEX + \"1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            + PREFIX_SERVICEINDEX + \"1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"            + PREFIX_STARTTIME + \"10-10-2022 10:30\";","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Booking added: \\n%1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATE_BOOKING \u003d \"This booking already exists in TrackBeau\";","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    private final Integer customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    private final Integer serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    private final BookingDateTime bookingDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"    private final Feedback feedback \u003d new Feedback(EMPTY_FEEDBACK_TYPE);","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"     * Creates an AddBookingCommand to add the specified booking","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    public AddBookingCommand(Integer customerIndex, Integer serviceIndex, BookingDateTime bookingDateTime) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        requireNonNull(customerIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"        requireNonNull(serviceIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"        requireNonNull(bookingDateTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        this.customerIndex \u003d customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"        this.serviceIndex \u003d serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        this.bookingDateTime \u003d bookingDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e customerList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e serviceList \u003d model.getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"        if (customerIndex \u003e\u003d customerList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"        if (serviceIndex \u003e\u003d serviceList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"        Customer customer \u003d customerList.get(customerIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"        Service service \u003d serviceList.get(serviceIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"        requireAllNonNull(customer, service);","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        Booking booking \u003d new Booking(customer, service, bookingDateTime, feedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"        if (model.hasBooking(booking)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BOOKING);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        model.addBooking(booking);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, booking), Panel.BOOKING_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"                || (other instanceof AddBookingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 customerIndex.equals(((AddBookingCommand) other).customerIndex)","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 serviceIndex.equals(((AddBookingCommand) other).serviceIndex)","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 bookingDateTime.equals(((AddBookingCommand) other).bookingDateTime));","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":10,"kashing555":88,"flairekq":1}},{"path":"src/main/java/seedu/trackbeau/logic/commands/booking/DeleteBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":" * Deletes a Booking identified using it\u0027s displayed index from trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"public class DeleteBookingCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"deleteb\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"            + \": Deletes the Booking identified by the index number used in the displayed Booking list.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: INDEXES (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1,2\";","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_DELETE_BOOKING_SUCCESS \u003d \"Deleted Booking(s):\\n%1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    private final ArrayList\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    public DeleteBookingCommand(ArrayList\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e lastShownList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"        ArrayList\u003cBooking\u003e bookingsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"            Booking bookingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"            if (bookingsToDelete.contains(bookingToDelete)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATED_INDEX);","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"            bookingsToDelete.add(bookingToDelete);","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"        for (Booking bookingToDelete : bookingsToDelete) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"            model.deleteBooking(bookingToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            sb.append(bookingToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOKING_SUCCESS, sb), Panel.BOOKING_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"                || (other instanceof DeleteBookingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 targetIndexes.containsAll(((DeleteBookingCommand) other).targetIndexes)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":10,"kashing555":58,"flairekq":1}},{"path":"src/main/java/seedu/trackbeau/logic/commands/booking/EditBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_CUSTOMERINDEX;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_FEEDBACK;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICEINDEX;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.booking.AddBookingCommandParser.EMPTY_FEEDBACK_TYPE;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_BOOKINGS;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":" * Edits the details of an existing booking in trackBeau.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"public class EditBookingCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    public static final String COMMAND_WORD \u003d \"editb\";","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the booking identified \"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            + \"by the index number used in the displayed bookings list. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_CUSTOMERINDEX + \"CUSTOMERINDEX (must be a positive integer)] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_SERVICEINDEX + \"SERVICEINDEX (must be a positive integer)] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_STARTTIME + \"APPOINTMENTTIME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_FEEDBACK + \"FEEDBACK] \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            + PREFIX_CUSTOMERINDEX + \"2 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            + PREFIX_SERVICEINDEX + \"2 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            + PREFIX_STARTTIME + \"11-11-2022 12:30 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"            + PREFIX_FEEDBACK + \"Excellent customer service\";","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_EDIT_BOOKING_SUCCESS \u003d \"Edited Booking: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_DUPLICATE_BOOKING \u003d \"This booking already exists in trackBeau.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"    private final EditBookingDescriptor editBookingDescriptor;","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"     * @param index of the booking in the bookings list to edit","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"     * @param editBookingDescriptor details to edit the booking with","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"    public EditBookingCommand(Index index, EditBookingDescriptor editBookingDescriptor) {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        requireNonNull(editBookingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"        this.editBookingDescriptor \u003d new EditBookingDescriptor(editBookingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e lastShownCustomerList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e lastShownServiceList \u003d model.getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e lastShownBookingList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"        Index customerIndex \u003d editBookingDescriptor.getCustomerIndex();","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"        Index serviceIndex \u003d editBookingDescriptor.getServiceIndex();","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"        Optional\u003cFeedback\u003e feedback \u003d editBookingDescriptor.getFeedback();","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        Booking bookingToEdit \u003d lastShownBookingList.get(index.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"        BookingDateTime updatedDateTime \u003d editBookingDescriptor.getBookingDateTime()","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"                .orElse(bookingToEdit.getBookingDateTime());","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownBookingList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"        if (customerIndex !\u003d null \u0026\u0026 customerIndex.getOneBased() \u003e\u003d lastShownCustomerList.size()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"        if (serviceIndex !\u003d null \u0026\u0026 serviceIndex.getOneBased() \u003e\u003d lastShownServiceList.size()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"        if ((LocalDateTime.now().compareTo(updatedDateTime.value) \u003c 0)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"            if (feedback.isPresent()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_FEEDBACK_TIME);","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"            } else {","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"                editBookingDescriptor.setFeedback(new Feedback(EMPTY_FEEDBACK_TYPE));","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"        Booking editedBooking \u003d createEditedBooking(bookingToEdit, editBookingDescriptor,","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"                lastShownCustomerList, lastShownServiceList);","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"        if (!bookingToEdit.isSameItem(editedBooking) \u0026\u0026 model.hasBooking(editedBooking)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BOOKING);","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"        model.setBooking(bookingToEdit, editedBooking);","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredBookingList(PREDICATE_SHOW_ALL_BOOKINGS);","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BOOKING_SUCCESS, editedBooking), Panel.BOOKING_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"     * Creates and returns a {@code Booking} with the details of {@code bookingToEdit}","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"     * edited with {@code editBookingDescriptor}.","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"    private static Booking createEditedBooking(Booking bookingToEdit, EditBookingDescriptor editBookingDescriptor,","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"           List\u003cCustomer\u003e lastShownCustomerList, List\u003cService\u003e lastShownServiceList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"kashing555"},"content":"        assert bookingToEdit !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"kashing555"},"content":"        Customer updatedCustomer;","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"kashing555"},"content":"        Service updatedService;","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"kashing555"},"content":"        if (editBookingDescriptor.getCustomerIndex() !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"            updatedCustomer \u003d lastShownCustomerList.get(editBookingDescriptor.getCustomerIndex().getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"kashing555"},"content":"            updatedCustomer \u003d bookingToEdit.getCustomer();","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"kashing555"},"content":"        if (editBookingDescriptor.getServiceIndex() !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"kashing555"},"content":"            updatedService \u003d lastShownServiceList.get(editBookingDescriptor.getServiceIndex().getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"kashing555"},"content":"            updatedService \u003d bookingToEdit.getService();","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"kashing555"},"content":"        BookingDateTime updatedDateTime \u003d editBookingDescriptor.getBookingDateTime()","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"kashing555"},"content":"                .orElse(bookingToEdit.getBookingDateTime());","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"kashing555"},"content":"        Feedback updatedFeedback \u003d editBookingDescriptor.getFeedback()","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"kashing555"},"content":"                .orElse(bookingToEdit.getFeedback());","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"kashing555"},"content":"        return new Booking(updatedCustomer, updatedService, updatedDateTime, updatedFeedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"kashing555"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"kashing555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"kashing555"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"kashing555"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"kashing555"},"content":"        if (!(other instanceof EditBookingCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"kashing555"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"kashing555"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"kashing555"},"content":"        EditBookingCommand e \u003d (EditBookingCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"kashing555"},"content":"        return index.equals(e.index) \u0026\u0026 editBookingDescriptor.equals(e.editBookingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"kashing555"},"content":"     * Stores the details to edit the booking with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"kashing555"},"content":"     * corresponding field value of the booking.","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"kashing555"},"content":"    public static class EditBookingDescriptor {","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"kashing555"},"content":"        private Index customerIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"kashing555"},"content":"        private Index serviceIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"kashing555"},"content":"        private BookingDateTime bookingDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"kashing555"},"content":"        private Feedback bookingFeedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"kashing555"},"content":"        public EditBookingDescriptor() {","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"kashing555"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"kashing555"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"kashing555"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"kashing555"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"kashing555"},"content":"        public EditBookingDescriptor(EditBookingDescriptor toCopy) {","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"kashing555"},"content":"            setCustomerIndex(toCopy.customerIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"kashing555"},"content":"            setServiceIndex(toCopy.serviceIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"kashing555"},"content":"            setBookingDateTime(toCopy.bookingDateTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"kashing555"},"content":"            setFeedback(toCopy.bookingFeedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"kashing555"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"kashing555"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"kashing555"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"kashing555"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"kashing555"},"content":"            return CollectionUtil.isAnyNonNull(customerIndex, serviceIndex, bookingDateTime, bookingFeedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"kashing555"},"content":"        public void setCustomerIndex(Index customerIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"kashing555"},"content":"            this.customerIndex \u003d customerIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"kashing555"},"content":"        public Index getCustomerIndex() {","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"kashing555"},"content":"            return customerIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"kashing555"},"content":"        public void setServiceIndex(Index serviceIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"kashing555"},"content":"            this.serviceIndex \u003d serviceIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"kashing555"},"content":"        public Index getServiceIndex() {","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"kashing555"},"content":"            return serviceIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"kashing555"},"content":"        public void setBookingDateTime(BookingDateTime bookingDateTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"kashing555"},"content":"            this.bookingDateTime \u003d bookingDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"kashing555"},"content":"        public Optional\u003cBookingDateTime\u003e getBookingDateTime() {","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"kashing555"},"content":"            return Optional.ofNullable(bookingDateTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"kashing555"},"content":"        public void setFeedback(Feedback bookingFeedback) {","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"kashing555"},"content":"            this.bookingFeedback \u003d bookingFeedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"kashing555"},"content":"        public Optional\u003cFeedback\u003e getFeedback() {","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"kashing555"},"content":"            return Optional.ofNullable(bookingFeedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"kashing555"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"kashing555"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"kashing555"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"kashing555"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"kashing555"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"kashing555"},"content":"            if (!(other instanceof EditBookingDescriptor)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"kashing555"},"content":"                return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"kashing555"},"content":"            // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"kashing555"},"content":"            EditBookingDescriptor e \u003d (EditBookingDescriptor) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"kashing555"},"content":"            return getCustomerIndex().equals(e.getCustomerIndex())","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"kashing555"},"content":"                    \u0026\u0026 getServiceIndex().equals(e.getServiceIndex())","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"kashing555"},"content":"                    \u0026\u0026 getBookingDateTime().equals(e.getBookingDateTime())","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"kashing555"},"content":"                    \u0026\u0026 getFeedback().equals((e.getFeedback()));","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":2,"kashing555":249}},{"path":"src/main/java/seedu/trackbeau/logic/commands/booking/FindBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.BookingSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":" * Finds and lists all bookings in trackBeau whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"public class FindBookingCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public static final String COMMAND_WORD \u003d \"findb\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all booking whose details match \"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_NAME + \"CUSTOMERNAME/SERVICENAME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_STARTTIME + \"APPOINTMENTTIME] \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"            + PREFIX_NAME + \"ALICE \"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"            + PREFIX_STARTTIME + \"10-10-2022 10:30\";","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    private final BookingSearchContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    public FindBookingCommand(BookingSearchContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredBookingList(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"                String.format(Messages.MESSAGE_BOOKING_LISTED_OVERVIEW, model.getFilteredBookingList().size()),","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"                Panel.BOOKING_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                || (other instanceof FindBookingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 predicate.equals(((FindBookingCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":3,"kashing555":48}},{"path":"src/main/java/seedu/trackbeau/logic/commands/booking/ListBookingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_BOOKINGS;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":" * Lists all bookings in trackBeau to the user.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"public class ListBookingsCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    public static final String COMMAND_WORD \u003d \"listb\";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all bookings\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredBookingList(PREDICATE_SHOW_ALL_BOOKINGS);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Panel.BOOKING_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":2,"kashing555":26}},{"path":"src/main/java/seedu/trackbeau/logic/commands/customer/AddCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.customer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":" * Adds a customer to trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"public class AddCustomerCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to TrackBeau. \"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_REGDATE + \"REGISTRATION DATE \"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDAY \"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_SKINTYPE + \"SKIN TYPE \"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_HAIRTYPE + \"HAIR TYPE \\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_STAFFS + \"STAFFS]...\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_SERVICES + \"SERVICES]...\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_ALLERGIES + \"ALLERGIES]...\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_REGDATE + \"23-03-2022 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_SKINTYPE + \"oily \"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_HAIRTYPE + \"coiled \"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_STAFFS + \"Jason \"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_SERVICES + \"Acne treatment \"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"            + PREFIX_ALLERGIES + \"Nickel\";","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in TrackBeau\";","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"    private final Customer toAdd;","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"     * Creates an AddCustomerCommand to add the specified {@code Customer}","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"    public AddCustomerCommand(Customer customer) {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"                || (other instanceof AddCustomerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomerCommand) other).toAdd));","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":19,"flairekq":9,"-":36,"isabelteo":20}},{"path":"src/main/java/seedu/trackbeau/logic/commands/customer/DeleteCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.customer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.commands.booking.DeleteBookingCommand.MESSAGE_DELETE_BOOKING_SUCCESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":" * Deletes a customer identified using it\u0027s displayed index from trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"public class DeleteCustomerCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"            + \": Deletes the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"            + \"Parameters: INDEXES (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1,2\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer(s):\\n%1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    private final ArrayList\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    public DeleteCustomerCommand(ArrayList\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * Returns a list of bookings affected by the deletion of customers.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"    public ArrayList\u003cBooking\u003e bookingsToDelete(List\u003cCustomer\u003e lastShownCustomersList,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                                               List\u003cBooking\u003e lastShownBookingsList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        ArrayList\u003cBooking\u003e bookingsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        String currentTimeStr \u003d localDateTime.format(formatter);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.parse(currentTimeStr, formatter);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        for (Booking booking : lastShownBookingsList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"            for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                if (booking.getCustomer().equals(lastShownCustomersList.get(targetIndex.getZeroBased()))","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"                        \u0026\u0026 booking.getBookingDateTime().value.isAfter(currentTime)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"                    bookingsToDelete.add(booking);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"                    break;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        return bookingsToDelete;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e lastShownCustomersList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e lastShownBookingsList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cCustomer\u003e customersToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownCustomersList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"            Customer customerToDelete \u003d lastShownCustomersList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"            if (customersToDelete.contains(customerToDelete)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATED_INDEX);","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"            customersToDelete.add(customerToDelete);","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cBooking\u003e bookingsToDelete \u003d bookingsToDelete(lastShownCustomersList, lastShownBookingsList);","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"        StringBuilder sbCustomers \u003d new StringBuilder();","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        StringBuilder sbBookings \u003d new StringBuilder();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"        for (Customer customerToDelete : customersToDelete) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"            model.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"            sbCustomers.append(customerToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"        for (Booking bookingToDelete : bookingsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"            model.deleteBooking(bookingToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"            sbBookings.append(bookingToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"        String successMessage \u003d String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, sbCustomers);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"        if (sbBookings.length() \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"            successMessage +\u003d String.format(MESSAGE_DELETE_BOOKING_SUCCESS, sbBookings);","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(successMessage, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"                || (other instanceof DeleteCustomerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 targetIndexes.containsAll(((DeleteCustomerCommand) other).targetIndexes)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":30,"kashing555":48,"flairekq":8,"-":28}},{"path":"src/main/java/seedu/trackbeau/logic/commands/customer/EditCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.customer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_BOOKINGS;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.CollectionUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":" * Edits the details of an existing customer in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"public class EditCustomerCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_REGDATE + \"REGISTRATION DATE] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"            + \"[\" + PREFIX_SKINTYPE + \"SKIN TYPE] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"            + \"[\" + PREFIX_HAIRTYPE + \"HAIR TYPE] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDAY] \"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"            + \"[\" + PREFIX_STAFFS + \"STAFFS]... \"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"            + \"[\" + PREFIX_SERVICES + \"SERVICES]... \"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"            + \"[\" + PREFIX_ALLERGIES + \"ALLERGIES]...\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in trackBeau.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"    private final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"    public EditCustomerCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e lastShownCustomerList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownCustomerList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"        Customer customerToEdit \u003d lastShownCustomerList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"        //if different customer, check the customer list to see if this new customer will clash with an existing one","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"        if (customerToEdit.hasDifferentIdentityFieldsFrom(editedCustomer)","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 model.hasAnotherCustomerWithClashingIdentity(customerToEdit, editedCustomer)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e lastShownBookingsList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c lastShownBookingsList.size(); i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"            Booking booking \u003d lastShownBookingsList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"            if (booking.getCustomer().equals(customerToEdit)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"                model.setBooking(booking, new Booking(editedCustomer, booking.getService(),","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"                        booking.getBookingDateTime(), booking.getFeedback()));","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredBookingList(PREDICATE_SHOW_ALL_BOOKINGS);","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer), Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"hanhuiice"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"hanhuiice"},"content":"     * edited with {@code editCustomerDescriptor}.","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit,","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"                                                 EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"hanhuiice"},"content":"        Name updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"        Phone updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"hanhuiice"},"content":"        Email updatedEmail \u003d editCustomerDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"        Address updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"hanhuiice"},"content":"        SkinType updatedSkinType \u003d editCustomerDescriptor.getSkinType().orElse(customerToEdit.getSkinType());","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"hanhuiice"},"content":"        HairType updatedHairType \u003d editCustomerDescriptor.getHairType().orElse(customerToEdit.getHairType());","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"        Set\u003cTag\u003e updatedStaffs \u003d editCustomerDescriptor.getStaffs().orElse(customerToEdit.getStaffs());","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"hanhuiice"},"content":"        Set\u003cTag\u003e updatedServices \u003d editCustomerDescriptor.getServices().orElse(customerToEdit.getServices());","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"hanhuiice"},"content":"        Set\u003cTag\u003e updatedAllergies \u003d editCustomerDescriptor.getAllergies().orElse(customerToEdit.getAllergies());","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        Birthdate updatedBirthdate \u003d editCustomerDescriptor.getBirthdate().orElse(customerToEdit.getBirthdate());","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        RegistrationDate updatedRegistrationDate \u003d editCustomerDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"                .getRegistrationDate().orElse(customerToEdit.getRegDate());","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        return new Customer(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedSkinType, updatedHairType,","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"                updatedStaffs, updatedServices, updatedAllergies, updatedBirthdate, updatedRegistrationDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"flairekq"},"content":"        if (!(other instanceof EditCustomerCommand)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand e \u003d (EditCustomerCommand) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"hanhuiice"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"hanhuiice"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"        private SkinType skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"        private HairType hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"        private Birthdate birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"        private RegistrationDate regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"        private Set\u003cTag\u003e staffs;","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"        private Set\u003cTag\u003e services;","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"        private Set\u003cTag\u003e allergies;","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"hanhuiice"},"content":"        public EditCustomerDescriptor() {}","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"hanhuiice"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":192,"author":{"gitId":"flairekq"},"content":"            setSkinType(toCopy.skinType);","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"flairekq"},"content":"            setHairType(toCopy.hairType);","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"            setStaffs(toCopy.staffs);","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"isabelteo"},"content":"            setServices(toCopy.services);","lastModifiedDate":"2022-03-09"},{"lineNumber":196,"author":{"gitId":"isabelteo"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"            setBirthdate(toCopy.birthdate);","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"            setRegistrationDate(toCopy.regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"isabelteo"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address,","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"isabelteo"},"content":"                    skinType, hairType, staffs, services, allergies, birthdate, regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"isabelteo"},"content":"        public void setSkinType(SkinType skinType) {","lastModifiedDate":"2022-03-09"},{"lineNumber":242,"author":{"gitId":"isabelteo"},"content":"            this.skinType \u003d skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":244,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cSkinType\u003e getSkinType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"isabelteo"},"content":"            return Optional.ofNullable(skinType);","lastModifiedDate":"2022-03-09"},{"lineNumber":247,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"isabelteo"},"content":"        public void setHairType(HairType hairType) {","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"isabelteo"},"content":"            this.hairType \u003d hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":252,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cHairType\u003e getHairType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":254,"author":{"gitId":"isabelteo"},"content":"            return Optional.ofNullable(hairType);","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"isabelteo"},"content":"        public void setBirthdate(Birthdate birthdate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"isabelteo"},"content":"            this.birthdate \u003d birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cBirthdate\u003e getBirthdate() {","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"isabelteo"},"content":"            return Optional.ofNullable(birthdate);","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"isabelteo"},"content":"        public void setRegistrationDate(RegistrationDate regDate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"isabelteo"},"content":"            this.regDate \u003d regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cRegistrationDate\u003e getRegistrationDate() {","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"isabelteo"},"content":"            return Optional.ofNullable(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"isabelteo"},"content":"         * Sets {@code staffs} to this object\u0027s {@code staffs}.","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"isabelteo"},"content":"         * A defensive copy of {@code staffs} is used internally.","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"isabelteo"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"isabelteo"},"content":"        public void setStaffs(Set\u003cTag\u003e staffs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"isabelteo"},"content":"            this.staffs \u003d (staffs !\u003d null) ? new HashSet\u003c\u003e(staffs) : null;","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"isabelteo"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"isabelteo"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"isabelteo"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"isabelteo"},"content":"         * Returns {@code Optional#empty()} if {@code staffs} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"isabelteo"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getStaffs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"isabelteo"},"content":"            return (staffs !\u003d null) ? Optional.of(Collections.unmodifiableSet(staffs)) : Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":288,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"isabelteo"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"isabelteo"},"content":"         * Sets {@code services} to this object\u0027s {@code services}.","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"isabelteo"},"content":"         * A defensive copy of {@code services} is used internally.","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"isabelteo"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"isabelteo"},"content":"        public void setServices(Set\u003cTag\u003e services) {","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"isabelteo"},"content":"            this.services \u003d (services !\u003d null) ? new HashSet\u003c\u003e(services) : null;","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":297,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"isabelteo"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":299,"author":{"gitId":"isabelteo"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":300,"author":{"gitId":"isabelteo"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":301,"author":{"gitId":"isabelteo"},"content":"         * Returns {@code Optional#empty()} if {@code services} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"isabelteo"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getServices() {","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"isabelteo"},"content":"            return (services !\u003d null) ? Optional.of(Collections.unmodifiableSet(services)) : Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":305,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":307,"author":{"gitId":"isabelteo"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":308,"author":{"gitId":"isabelteo"},"content":"         * Sets {@code allergies} to this object\u0027s {@code allergies}.","lastModifiedDate":"2022-03-09"},{"lineNumber":309,"author":{"gitId":"isabelteo"},"content":"         * A defensive copy of {@code services} is used internally.","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":311,"author":{"gitId":"isabelteo"},"content":"        public void setAllergies(Set\u003cTag\u003e allergies) {","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"isabelteo"},"content":"            this.allergies \u003d (allergies !\u003d null) ? new HashSet\u003c\u003e(allergies) : null;","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"isabelteo"},"content":"         * Returns {@code Optional#empty()} if {@code allergies} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":320,"author":{"gitId":"isabelteo"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getAllergies() {","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"isabelteo"},"content":"            return (allergies !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergies)) : Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":332,"author":{"gitId":"hanhuiice"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":337,"author":{"gitId":"hanhuiice"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":343,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getSkinType().equals(e.getSkinType())","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getHairType().equals(e.getHairType())","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getBirthdate().equals(e.getBirthdate())","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getRegistrationDate().equals(e.getRegistrationDate())","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getStaffs().equals(e.getStaffs())","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getServices().equals(e.getServices())","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"isabelteo"},"content":"                    \u0026\u0026 getAllergies().equals(e.getAllergies());","lastModifiedDate":"2022-03-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"hanhuiice":55,"kashing555":15,"flairekq":14,"-":152,"isabelteo":116}},{"path":"src/main/java/seedu/trackbeau/logic/commands/customer/FindCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.customer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":" * Finds and lists all customers in trackBeau whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"public class FindCustomerCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customers whose details match \"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_SKINTYPE + \"SKIN TYPE]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_HAIRTYPE + \"HAIR TYPE]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_STAFFS + \"STAFFS]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_SERVICES + \"SERVICES]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_ALLERGIES + \"ALLERGIES]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"            + PREFIX_ADDRESS + \"Clementi \"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"            + PREFIX_SKINTYPE + \"oily \"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            + PREFIX_HAIRTYPE + \"coiled \"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            + PREFIX_STAFFS + \"Jason \"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            + PREFIX_SERVICES + \"Acne treatment \"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"            + PREFIX_ALLERGIES + \"Nickel\";","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"    private final CustomerSearchContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    public FindCustomerCommand(CustomerSearchContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW, model.getFilteredCustomerList().size()),","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"                Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"                || (other instanceof FindCustomerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 predicate.equals(((FindCustomerCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hanhuiice":5,"kashing555":37,"flairekq":7,"-":23}},{"path":"src/main/java/seedu/trackbeau/logic/commands/customer/ListCustomersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.customer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":" * Lists all customers in trackBeau to the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"public class ListCustomersCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all customers\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":7,"flairekq":5,"-":15}},{"path":"src/main/java/seedu/trackbeau/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands.exceptions;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hanhuiice":1,"-":16}},{"path":"src/main/java/seedu/trackbeau/logic/commands/service/AddServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.service;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":" * Adds a service to trackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"public class AddServiceCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"adds\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a service to TrackBeau. \"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"        + PREFIX_PRICE + \"PRICE \"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        + PREFIX_DURATION + \"DURATION (in minutes) \"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        + PREFIX_NAME + \"Relaxing Eye Treatment \"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        + PREFIX_PRICE + \"58 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        + PREFIX_DURATION + \"30\";","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New service added: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_DUPLICATE_SERVICE \u003d \"This service already exists in TrackBeau\";","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    private final Service toAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"     * Creates an AddServiceCommand to add the specified {@code Service}","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"    public AddServiceCommand(Service service) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        requireNonNull(service);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        toAdd \u003d service;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        if (model.hasService(toAdd)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SERVICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        model.addService(toAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Panel.SERVICE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"            || (other instanceof AddServiceCommand // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 toAdd.equals(((AddServiceCommand) other).toAdd));","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"hanhuiice":2,"flairekq":61}},{"path":"src/main/java/seedu/trackbeau/logic/commands/service/DeleteServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.service;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.commands.booking.DeleteBookingCommand.MESSAGE_DELETE_BOOKING_SUCCESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":" * Deletes service(s) identified using it\u0027s displayed index from trackBeau.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"public class DeleteServiceCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"deletes\";","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        + \": Deletes the service(s) identified by the index number(s) used in the displayed service list.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        + \"Parameters: INDEXES (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1,2\";","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_DELETE_SERVICE_SUCCESS \u003d \"Deleted Service(s):\\n%1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    private final ArrayList\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    public DeleteServiceCommand(ArrayList\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"     * Returns a list of bookings affected by the deletion of Services.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"    public ArrayList\u003cBooking\u003e bookingsToDelete(List\u003cService\u003e lastShownServicesList,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                                               List\u003cBooking\u003e lastShownBookingsList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        ArrayList\u003cBooking\u003e bookingsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        String currentTimeStr \u003d localDateTime.format(formatter);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.parse(currentTimeStr, formatter);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        for (Booking booking : lastShownBookingsList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"            for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"                if (booking.getService().equals(lastShownServicesList.get(targetIndex.getZeroBased()))","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"                        \u0026\u0026 booking.getBookingDateTime().value.isAfter(currentTime)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"                    bookingsToDelete.add(booking);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"                    break;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        return bookingsToDelete;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e lastShownServiceList \u003d model.getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e lastShownBookingList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        ArrayList\u003cService\u003e servicesToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownServiceList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"            Service serviceToDelete \u003d lastShownServiceList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"            if (servicesToDelete.contains(serviceToDelete)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATED_INDEX);","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"            servicesToDelete.add(serviceToDelete);","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cBooking\u003e bookingsToDelete \u003d bookingsToDelete(lastShownServiceList, lastShownBookingList);","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        StringBuilder sbServices \u003d new StringBuilder();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"        StringBuilder sbBookings \u003d new StringBuilder();","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"        for (Service serviceToDelete : servicesToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"            model.deleteService(serviceToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"            sbServices.append(serviceToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"        for (Booking bookingToDelete : bookingsToDelete) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"            model.deleteBooking(bookingToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"            sbBookings.append(bookingToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"        String successMessage \u003d String.format(MESSAGE_DELETE_SERVICE_SUCCESS, sbServices);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"        if (sbBookings.length() \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"            successMessage +\u003d String.format(MESSAGE_DELETE_BOOKING_SUCCESS, sbBookings);","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(successMessage, Panel.SERVICE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"            || (other instanceof DeleteServiceCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 targetIndexes.containsAll(((DeleteServiceCommand) other).targetIndexes)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"hanhuiice":9,"kashing555":48,"flairekq":58}},{"path":"src/main/java/seedu/trackbeau/logic/commands/service/EditServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.service;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_BOOKINGS;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_SERVICES;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Duration;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Price;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":" * Edits the details of an existing service in trackBeau.","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"public class EditServiceCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"edits\";","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the service identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        + \"by the index number used in the displayed service list. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        + \"[\" + PREFIX_DURATION + \"DURATION]\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        + PREFIX_PRICE + \"138.00 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        + PREFIX_DURATION + \"90\";","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_EDIT_SERVICE_SUCCESS \u003d \"Edited Service: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_DUPLICATE_SERVICE \u003d \"This service already exists in trackBeau.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"    private final EditServiceDescriptor editServiceDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"     * @param index                 of the service in the service list to edit","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"     * @param editServiceDescriptor details to edit the service with","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"    public EditServiceCommand(Index index, EditServiceDescriptor editServiceDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"        requireNonNull(editServiceDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        this.editServiceDescriptor \u003d new EditServiceDescriptor(editServiceDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e lastShownServiceList \u003d model.getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownServiceList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        Service serviceToEdit \u003d lastShownServiceList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"        Service editedService \u003d createEditedService(serviceToEdit, editServiceDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"        if (!serviceToEdit.isSameItem(editedService) \u0026\u0026 model.hasService(editedService)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SERVICE);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"        List\u003cBooking\u003e lastShownBookingsList \u003d model.getFilteredBookingList();","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"        for (int i \u003d 0; i \u003c lastShownBookingsList.size(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"            Booking booking \u003d lastShownBookingsList.get(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"            if (booking.getService().equals(serviceToEdit)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"                model.setBooking(booking, new Booking(booking.getCustomer(), editedService,","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"                    booking.getBookingDateTime(), booking.getFeedback()));","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"flairekq"},"content":"        model.setService(serviceToEdit, editedService);","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"        model.updateServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"        model.updateFilteredBookingList(PREDICATE_SHOW_ALL_BOOKINGS);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SERVICE_SUCCESS, editedService), Panel.SERVICE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"flairekq"},"content":"     * Creates and returns a {@code Service} with the details of {@code serviceToEdit}","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"     * edited with {@code editServiceDescriptor}.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"    private static Service createEditedService(Service serviceToEdit, EditServiceDescriptor editServiceDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"        assert serviceToEdit !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"flairekq"},"content":"        ServiceName updatedName \u003d editServiceDescriptor.getName().orElse(serviceToEdit.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"        Price updatePrice \u003d editServiceDescriptor.getPrice().orElse(serviceToEdit.getPrice());","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":"        Duration updatedDuration \u003d editServiceDescriptor.getDuration().orElse(serviceToEdit.getDuration());","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"        return new Service(updatedName, updatePrice, updatedDuration);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"flairekq"},"content":"        if (!(other instanceof EditServiceCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"flairekq"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"flairekq"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"flairekq"},"content":"        EditServiceCommand e \u003d (EditServiceCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"flairekq"},"content":"        return index.equals(e.index) \u0026\u0026 editServiceDescriptor.equals(e.editServiceDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"flairekq"},"content":"     * Stores the details to edit the service with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"flairekq"},"content":"     * corresponding field value of the service.","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"flairekq"},"content":"    public static class EditServiceDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"flairekq"},"content":"        private ServiceName name;","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"flairekq"},"content":"        private Price price;","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"flairekq"},"content":"        private Duration duration;","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"flairekq"},"content":"        public EditServiceDescriptor() {","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"        public EditServiceDescriptor(EditServiceDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"flairekq"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"flairekq"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"flairekq"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"flairekq"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"flairekq"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"            return CollectionUtil.isAnyNonNull(name, price, duration);","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"        public void setName(ServiceName name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"flairekq"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"flairekq"},"content":"        public Optional\u003cServiceName\u003e getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"flairekq"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"flairekq"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"flairekq"},"content":"            this.price \u003d price;","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"flairekq"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"flairekq"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"flairekq"},"content":"        public void setDuration(Duration duration) {","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"flairekq"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"flairekq"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"flairekq"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"flairekq"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"flairekq"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"flairekq"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"flairekq"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"flairekq"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"flairekq"},"content":"            if (!(other instanceof EditServiceDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"flairekq"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"flairekq"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"flairekq"},"content":"            EditServiceDescriptor e \u003d (EditServiceDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"flairekq"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 getDuration().equals(e.getDuration());","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"hanhuiice":2,"kashing555":4,"flairekq":193}},{"path":"src/main/java/seedu/trackbeau/logic/commands/service/FindServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.commands.service;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.ServiceSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":" * Finds and lists all services in trackBeau whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"public class FindServiceCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    public static final String COMMAND_WORD \u003d \"finds\";","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all service whose details match \"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"            + PREFIX_NAME + \"Relaxing Eye Treatment \"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"            + PREFIX_PRICE + \"58 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"            + PREFIX_DURATION + \"30\";","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    private final ServiceSearchContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    public FindServiceCommand(ServiceSearchContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredServiceList(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"                String.format(Messages.MESSAGE_SERVICES_LISTED_OVERVIEW, model.getFilteredServiceList().size()),","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"                Panel.SERVICE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                || (other instanceof FindServiceCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 predicate.equals(((FindServiceCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":3,"kashing555":51}},{"path":"src/main/java/seedu/trackbeau/logic/commands/service/ListServicesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.commands.service;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_SERVICES;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":" * Lists all services in trackBeau to the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"public class ListServicesCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    public static final String COMMAND_WORD \u003d \"lists\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all services\";","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"        model.updateServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Panel.SERVICE_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":2,"flairekq":26}},{"path":"src/main/java/seedu/trackbeau/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"hanhuiice":1,"-":59}},{"path":"src/main/java/seedu/trackbeau/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"hanhuiice":1,"-":147}},{"path":"src/main/java/seedu/trackbeau/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_SKINTYPE \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_HAIRTYPE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_STAFFS \u003d new Prefix(\"stp/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_SERVICES \u003d new Prefix(\"sep/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_ALLERGIES \u003d new Prefix(\"al/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    public static final Prefix PREFIX_CUSTOMERINDEX \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    public static final Prefix PREFIX_SERVICEINDEX \u003d new Prefix(\"sev/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"bd/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    public static final Prefix PREFIX_REGDATE \u003d new Prefix(\"rd/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    public static final Prefix PREFIX_FEEDBACK \u003d new Prefix(\"f/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hanhuiice":2,"kashing555":4,"flairekq":2,"-":12,"isabelteo":7}},{"path":"src/main/java/seedu/trackbeau/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"hanhuiice":3,"-":13}},{"path":"src/main/java/seedu/trackbeau/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.model.customer.Address.VALIDATION_REGEX;","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.StringUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Duration;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Price;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    private static final String FIND_MESSAGE_CONSTRAINTS \u003d \"Find Command can take any values, \"","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"            + \"but it should not be blank\";","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"     * Parses a {@code String skinType } into an {@code SkinType}.","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"     * Skin type input must fit existing categories.","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"     * @throws ParseException if the given {@code SkinType} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"    public static SkinType parseSkinType(String skinType) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(skinType);","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"        String trimmedSkinType \u003d skinType.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        if (!SkinType.isValidSkinType(trimmedSkinType)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"            throw new ParseException(SkinType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        return new SkinType(trimmedSkinType);","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"     * Parses a {@code String hairType} into an {@code HairType}.","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"     * @throws ParseException if the given {@code HairType} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"    public static HairType parseHairType(String hairType) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(hairType);","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"        String trimmedHairType \u003d hairType.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"        if (!HairType.isValidHairType(trimmedHairType)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"            throw new ParseException(HairType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        return new HairType(trimmedHairType);","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"     * Parses a {@code String birthdate} into an {@code Birthdate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"     * @throws ParseException if the given {@code Birthdate} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"    public static Birthdate parseBirthdate(String birthDate) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"        String trimmedbirthDate \u003d birthDate.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"        if (!Birthdate.isValidBirthdate(trimmedbirthDate)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"            throw new ParseException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"        return new Birthdate(birthDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"     * Parses a {@code String regDate} into an {@code RegistrationDate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"     * @throws ParseException if the given {@code RegistrationDate} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"    public static RegistrationDate parseRegistrationDate(String regDate) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"        String trimmedRegDate \u003d regDate.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"        if (!RegistrationDate.isValidRegistrationDate(trimmedRegDate)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"            throw new ParseException(RegistrationDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"        return new RegistrationDate(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":198,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"hanhuiice"},"content":"     * Parses a {@code String startTime} into an {@code BookingDateTime}.","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"kashing555"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the given {@code startTime} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"hanhuiice"},"content":"    public static BookingDateTime parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"kashing555"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"hanhuiice"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"hanhuiice"},"content":"        if (!BookingDateTime.isValidBookingDateTime(trimmedStartTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"hanhuiice"},"content":"            throw new ParseException(BookingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"hanhuiice"},"content":"        return new BookingDateTime(trimmedStartTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"flairekq"},"content":"     * Parses a {@code String serviceName} into a {@code ServiceName}.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"flairekq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the given {@code serviceName} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"flairekq"},"content":"    public static ServiceName parseServiceName(String serviceName) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"flairekq"},"content":"        requireNonNull(serviceName);","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"flairekq"},"content":"        String trimmedName \u003d serviceName.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"flairekq"},"content":"        if (!ServiceName.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"flairekq"},"content":"        return new ServiceName(trimmedName);","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"flairekq"},"content":"     * Parses a {@code String price} into a {@code Price}.","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"flairekq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"flairekq"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"flairekq"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"flairekq"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"flairekq"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"flairekq"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"flairekq"},"content":"     * Parses a {@code String duration} into a {@code Duration}.","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"flairekq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"flairekq"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"flairekq"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"flairekq"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"flairekq"},"content":"        if (!Duration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"flairekq"},"content":"        return new Duration(trimmedDuration);","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":260,"author":{"gitId":"flairekq"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"flairekq"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":263,"author":{"gitId":"flairekq"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"flairekq"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"flairekq"},"content":"     * Splits {@code args} into a list of String where each String can be parse as an Index and returns it.","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if parseIndex() throws a ParseException.","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"flairekq"},"content":"    public static ArrayList\u003cIndex\u003e parseIndexes(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"flairekq"},"content":"        String[] split \u003d args.split(\",\");","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"flairekq"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"flairekq"},"content":"        for (String s : split) {","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"flairekq"},"content":"            indexes.add(parseIndex(s));","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"flairekq"},"content":"        return indexes;","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":281,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"kashing555"},"content":"     * Parses a {@code String feedback} into an {@code feedback}.","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"kashing555"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"kashing555"},"content":"    public static Feedback parseFeedback(String feedback) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"kashing555"},"content":"        requireNonNull(feedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"kashing555"},"content":"        String trimmedFeedback \u003d feedback.trim();","lastModifiedDate":"2022-03-31"},{"lineNumber":290,"author":{"gitId":"kashing555"},"content":"        if (!Feedback.isValidFeedback(trimmedFeedback)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(Feedback.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":292,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":293,"author":{"gitId":"kashing555"},"content":"        return new Feedback(trimmedFeedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":294,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":295,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":296,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":297,"author":{"gitId":"isabelteo"},"content":"     * Parses keywords given by user in Find Command Parser.","lastModifiedDate":"2022-04-04"},{"lineNumber":298,"author":{"gitId":"isabelteo"},"content":"     * @param value keyword given by user","lastModifiedDate":"2022-04-04"},{"lineNumber":299,"author":{"gitId":"isabelteo"},"content":"     * @throws ParseException","lastModifiedDate":"2022-04-04"},{"lineNumber":300,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":301,"author":{"gitId":"isabelteo"},"content":"    public static String parseFindValues(String value) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":302,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-04-04"},{"lineNumber":303,"author":{"gitId":"isabelteo"},"content":"        String trimmedValue \u003d value.trim();","lastModifiedDate":"2022-04-04"},{"lineNumber":304,"author":{"gitId":"isabelteo"},"content":"        if (!value.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":305,"author":{"gitId":"isabelteo"},"content":"            throw new ParseException(FIND_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-04"},{"lineNumber":306,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":307,"author":{"gitId":"isabelteo"},"content":"        return trimmedValue;","lastModifiedDate":"2022-04-04"},{"lineNumber":308,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":309,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hanhuiice":19,"kashing555":27,"flairekq":72,"-":112,"isabelteo":80}},{"path":"src/main/java/seedu/trackbeau/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"hanhuiice":1,"-":38}},{"path":"src/main/java/seedu/trackbeau/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d \"Date should follow dd-MM-yyyy.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_DATE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"        String trimmedDate \u003d argMultimap.getValue(PREFIX_DATE).get().trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"        LocalDate date;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"            date \u003d LocalDate.parse(trimmedDate, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"            throw new ParseException(MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        return new ScheduleCommand(date);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":42}},{"path":"src/main/java/seedu/trackbeau/logic/parser/TrackBeauParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ClearCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ExitCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.HelpCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotAllergyChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotHairChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotMonthlyCustomerChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotServiceChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotSkinChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.logic.commands.PlotStaffChartCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ScheduleNextCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.SchedulePreviousCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.AddBookingCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.DeleteBookingCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.EditBookingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.FindBookingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.ListBookingsCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.FindCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.ListCustomersCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.AddServiceCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.DeleteServiceCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.EditServiceCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.service.FindServiceCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.ListServicesCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.booking.AddBookingCommandParser;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.booking.DeleteBookingCommandParser;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.booking.EditBookingCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.booking.FindBookingCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.DeleteCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.EditCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.FindCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.service.AddServiceCommandParser;","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.service.DeleteServiceCommandParser;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.service.EditServiceCommandParser;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.service.FindServiceCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"public class TrackBeauParser {","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"        case ListCustomersCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            return new ListCustomersCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        case AddCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"            return new AddCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"        case EditCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"            return new EditCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        case DeleteCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"            return new DeleteCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"        case FindCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"            return new FindCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"        case ListServicesCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"flairekq"},"content":"            return new ListServicesCommand();","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"        case AddServiceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"flairekq"},"content":"            return new AddServiceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"        case EditServiceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"            return new EditServiceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"        case DeleteServiceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"flairekq"},"content":"            return new DeleteServiceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"        case FindServiceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"            return new FindServiceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"        case ListBookingsCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"kashing555"},"content":"            return new ListBookingsCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"        case AddBookingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"            return new AddBookingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"        case EditBookingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"            return new EditBookingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"        case DeleteBookingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"            return new DeleteBookingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"        case FindBookingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"            return new FindBookingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"hanhuiice"},"content":"        case ScheduleNextCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"hanhuiice"},"content":"            return new ScheduleNextCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"hanhuiice"},"content":"        case SchedulePreviousCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"            return new SchedulePreviousCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"        // chart commands","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"        case PlotAllergyChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"            return new PlotAllergyChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"        case PlotServiceChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"            return new PlotServiceChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"        case PlotStaffChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"            return new PlotStaffChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"        case PlotHairChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"            return new PlotHairChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"        case PlotSkinChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"            return new PlotSkinChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"        case PlotMonthlyCustomerChartCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"            return new PlotMonthlyCustomerChartCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"        case PlotCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"            return new PlotCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":21,"kashing555":47,"flairekq":22,"-":49,"isabelteo":30}},{"path":"src/main/java/seedu/trackbeau/logic/parser/booking/AddBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_CUSTOMERINDEX;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICEINDEX;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.AddBookingCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":" * Parses input arguments and creates a new AddBookingCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"public class AddBookingCommandParser implements Parser\u003cAddBookingCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public static final String EMPTY_FEEDBACK_TYPE \u003d \"No data\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookingCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"    public AddBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CUSTOMERINDEX, PREFIX_SERVICEINDEX, PREFIX_STARTTIME);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_CUSTOMERINDEX, PREFIX_SERVICEINDEX, PREFIX_STARTTIME)","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                AddBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        Integer customerIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CUSTOMERINDEX)","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"                .get()).getZeroBased();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        Integer serviceIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_SERVICEINDEX)","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"                .get()).getZeroBased();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        BookingDateTime bookingDateTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"        return new AddBookingCommand(customerIndex, serviceIndex, bookingDateTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":5,"kashing555":38,"flairekq":1}},{"path":"src/main/java/seedu/trackbeau/logic/parser/booking/DeleteBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.DeleteBookingCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class DeleteBookingCommandParser implements Parser\u003cDeleteBookingCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBookingCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"     * and returns a DeleteBookingCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    public DeleteBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"            return new DeleteBookingCommand(ParserUtil.parseIndexes(args));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":2,"kashing555":26,"flairekq":1}},{"path":"src/main/java/seedu/trackbeau/logic/parser/booking/EditBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_CUSTOMERINDEX;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_FEEDBACK;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICEINDEX;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.EditBookingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.EditBookingCommand.EditBookingDescriptor;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":" * Parses input arguments and creates a new EditBookingCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"public class EditBookingCommandParser implements Parser\u003cEditBookingCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBookingCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * and returns an EditBookingCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    public EditBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CUSTOMERINDEX, PREFIX_SERVICEINDEX, PREFIX_STARTTIME,","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"                        PREFIX_FEEDBACK);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"                EditBookingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        EditBookingDescriptor editBookingDescriptor \u003d new EditBookingDescriptor();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        if (argMultimap.getValue(PREFIX_CUSTOMERINDEX).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            editBookingDescriptor.setCustomerIndex(ParserUtil.parseIndex(argMultimap","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                    .getValue(PREFIX_CUSTOMERINDEX).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        if (argMultimap.getValue(PREFIX_SERVICEINDEX).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"            editBookingDescriptor.setServiceIndex(ParserUtil.parseIndex(argMultimap","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                    .getValue(PREFIX_SERVICEINDEX).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"            editBookingDescriptor.setBookingDateTime(ParserUtil.parseStartTime(argMultimap","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"                    .getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"        if (argMultimap.getValue(PREFIX_FEEDBACK).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            editBookingDescriptor.setFeedback(ParserUtil.parseFeedback(argMultimap","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"                    .getValue(PREFIX_FEEDBACK).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        if (!editBookingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(EditBookingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        return new EditBookingCommand(index, editBookingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kashing555":70}},{"path":"src/main/java/seedu/trackbeau/logic/parser/booking/FindBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_FEEDBACK;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.booking.BookingSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.booking.FindBookingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Prefix;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.BookingSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":" * Parses input arguments and creates a new FindBookingCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"public class FindBookingCommandParser implements Parser\u003cFindBookingCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * Parses the given {@code String} of arguments in the context of the FindBookingCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     * and returns a FindBookingCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    public FindBookingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_STARTTIME, PREFIX_FEEDBACK);","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        Prefix[] prefixList \u003d { PREFIX_NAME, PREFIX_STARTTIME, PREFIX_FEEDBACK };","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            if (argMultimap.getValue(prefixList[i]).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                prefixArr.set(i,","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                        Arrays.asList(ParserUtil","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                                .parseFindValues(argMultimap.getValue(prefixList[i]).get())","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                                .toString().split(\" \")));","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"        return new FindBookingCommand(new BookingSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kashing555":56,"isabelteo":3}},{"path":"src/main/java/seedu/trackbeau/logic/parser/customer/AddCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.customer;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"public class AddCustomerCommandParser implements Parser\u003cAddCustomerCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    public static final String EMPTY_HAIR_TYPE \u003d \"No data\";","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public static final String EMPTY_SKIN_TYPE \u003d \"No data\";","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    public static final String EMPTY_DATE \u003d \"01-01-1000\"; //impossible date","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCustomerCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"    public AddCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                        PREFIX_SKINTYPE, PREFIX_HAIRTYPE,","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"                        PREFIX_STAFFS, PREFIX_SERVICES, PREFIX_ALLERGIES, PREFIX_BIRTHDATE, PREFIX_REGDATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                PREFIX_EMAIL, PREFIX_REGDATE)","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        RegistrationDate regDate \u003d ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                .parseRegistrationDate(argMultimap.getValue(PREFIX_REGDATE)","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                .get());","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        SkinType skinType \u003d new SkinType(EMPTY_SKIN_TYPE);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_SKINTYPE).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"            skinType \u003d ParserUtil.parseSkinType(argMultimap.getValue(PREFIX_SKINTYPE).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        HairType hairType \u003d new HairType((EMPTY_HAIR_TYPE));","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_HAIRTYPE).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"            hairType \u003d ParserUtil.parseHairType(argMultimap.getValue(PREFIX_HAIRTYPE).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        Birthdate birthdate \u003d new Birthdate(EMPTY_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"            birthdate \u003d ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e staffList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_STAFFS));","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e serviceList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_SERVICES));","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e allergyList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_ALLERGIES));","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        Customer customer \u003d new Customer(name, phone, email,","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"                address, skinType, hairType, staffList,","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"                serviceList, allergyList, birthdate, regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"        return new AddCustomerCommand(customer);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hanhuiice":12,"kashing555":5,"flairekq":9,"-":25,"isabelteo":39}},{"path":"src/main/java/seedu/trackbeau/logic/parser/customer/DeleteCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.customer;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"public class DeleteCustomerCommandParser implements Parser\u003cDeleteCustomerCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    public DeleteCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"            return new DeleteCustomerCommand(ParserUtil.parseIndexes(args));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hanhuiice":2,"kashing555":3,"flairekq":8,"-":15}},{"path":"src/main/java/seedu/trackbeau/logic/parser/customer/EditCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.customer;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new EditCustomerCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"public class EditCustomerCommandParser implements Parser\u003cEditCustomerCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCustomerCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"     * and returns an EditCustomerCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    public EditCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                PREFIX_SKINTYPE, PREFIX_HAIRTYPE, PREFIX_BIRTHDATE,","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                PREFIX_STAFFS, PREFIX_SERVICES, PREFIX_ALLERGIES, PREFIX_REGDATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"                EditCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_SKINTYPE).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setSkinType(ParserUtil.parseSkinType(argMultimap.getValue(PREFIX_SKINTYPE).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_HAIRTYPE).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"            editCustomerDescriptor.setHairType(ParserUtil.parseHairType(argMultimap.getValue(PREFIX_HAIRTYPE).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"            editCustomerDescriptor.setBirthdate(ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"                .parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"        if (argMultimap.getValue(PREFIX_REGDATE).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"            editCustomerDescriptor.setRegistrationDate(ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"                .parseRegistrationDate(argMultimap.getValue(PREFIX_REGDATE).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_STAFFS)).ifPresent(editCustomerDescriptor::setStaffs);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_SERVICES)).ifPresent(editCustomerDescriptor::setServices);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_ALLERGIES)).ifPresent(editCustomerDescriptor::setAllergies);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"        return new EditCustomerCommand(index, editCustomerDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hanhuiice":17,"kashing555":5,"flairekq":14,"-":55,"isabelteo":22}},{"path":"src/main/java/seedu/trackbeau/logic/parser/customer/FindCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.customer;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.NON_TAG_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.FindCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Prefix;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new FindCustomerCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"public class FindCustomerCommandParser implements Parser\u003cFindCustomerCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCustomerCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"     * and returns a FindCustomerCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    public FindCustomerCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"            ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                PREFIX_SKINTYPE, PREFIX_HAIRTYPE,","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"                    PREFIX_BIRTHDATE, PREFIX_REGDATE, PREFIX_STAFFS, PREFIX_SERVICES, PREFIX_ALLERGIES);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"        Prefix[] prefixList \u003d { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_SKINTYPE,","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            PREFIX_HAIRTYPE, PREFIX_BIRTHDATE, PREFIX_REGDATE, PREFIX_STAFFS,","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"            PREFIX_SERVICES, PREFIX_ALLERGIES};","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            if (argMultimap.getValue(prefixList[i]).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"                if (i \u003c NON_TAG_ATTRIBUTE_COUNT) {","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"                    prefixArr.set(i,","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"                            Arrays.asList(ParserUtil","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"                                    .parseFindValues(argMultimap.getValue(prefixList[i]).get()).toString()));","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                } else {","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                    prefixArr.set(i,","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"                            Arrays.asList(ParserUtil","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"                                    .parseFindValues(argMultimap.getValue(prefixList[i]).get()).toString().split(\" \")));","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"        return new FindCustomerCommand(new CustomerSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hanhuiice":2,"kashing555":35,"flairekq":6,"-":14,"isabelteo":19}},{"path":"src/main/java/seedu/trackbeau/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser.exceptions;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"hanhuiice":2,"-":15}},{"path":"src/main/java/seedu/trackbeau/logic/parser/service/AddServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.parser.service;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.AddServiceCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Duration;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Price;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new AddServiceCommandParser object","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"public class AddServiceCommandParser implements Parser\u003cAddServiceCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the AddServiceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * and returns an AddServiceCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    public AddServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_DURATION);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE, PREFIX_DURATION)","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        ServiceName name \u003d ParserUtil.parseServiceName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        Duration duration \u003d ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        Service service \u003d new Service(name, price, duration);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"        return new AddServiceCommand(service);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"flairekq":48}},{"path":"src/main/java/seedu/trackbeau/logic/parser/service/DeleteServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.parser.service;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.DeleteServiceCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new DeleteServiceCommand object","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"public class DeleteServiceCommandParser implements Parser\u003cDeleteServiceCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteServiceCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * and returns a DeleteServiceCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    public DeleteServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"            return new DeleteServiceCommand(ParserUtil.parseIndexes(args));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteServiceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"flairekq":29}},{"path":"src/main/java/seedu/trackbeau/logic/parser/service/EditServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.logic.parser.service;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.EditServiceCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.service.EditServiceCommand.EditServiceDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":" * Parses input arguments and creates a new EditServiceCommand object","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"public class EditServiceCommandParser implements Parser\u003cEditServiceCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * Parses the given {@code String} of arguments in the context of the EditServiceCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * and returns an EditServiceCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    public EditServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_DURATION);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"                EditServiceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        EditServiceDescriptor editServiceDescriptor \u003d new EditServiceDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"            editServiceDescriptor.setName(ParserUtil.parseServiceName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"            editServiceDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        if (argMultimap.getValue(PREFIX_DURATION).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"            editServiceDescriptor.setDuration(ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        if (!editServiceDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"            throw new ParseException(EditServiceCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"        return new EditServiceCommand(index, editServiceDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"flairekq":61}},{"path":"src/main/java/seedu/trackbeau/logic/parser/service/FindServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.logic.parser.service;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.service.ServiceSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.commands.service.FindServiceCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.Prefix;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.ServiceSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":" * Parses input arguments and creates a new FindServiceCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"public class FindServiceCommandParser implements Parser\u003cFindServiceCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"     * Parses the given {@code String} of arguments in the context of the FindServiceCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"     * and returns a FindServiceCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    public FindServiceCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PRICE, PREFIX_DURATION);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"        Prefix[] prefixList \u003d { PREFIX_NAME, PREFIX_PRICE, PREFIX_DURATION };","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"            if (argMultimap.getValue(prefixList[i]).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                prefixArr.set(i,","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                        Arrays.asList(ParserUtil","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                                .parseFindValues(argMultimap.getValue(prefixList[i]).get()).toString().split(\" \")));","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        return new FindServiceCommand(new ServiceSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kashing555":56,"isabelteo":1}},{"path":"src/main/java/seedu/trackbeau/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    Predicate\u003cBooking\u003e PREDICATE_SHOW_ALL_BOOKINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    Predicate\u003cService\u003e PREDICATE_SHOW_ALL_SERVICES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"     * Returns the user prefs\u0027 trackBeau file path.","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"    Path getTrackBeauFilePath();","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"     * Sets the user prefs\u0027 trackBeau file path.","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"    void setTrackBeauFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"     * Replaces trackBeau data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"    void setTrackBeau(ReadOnlyTrackBeau addressBook);","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"    /** Returns the TrackBeau */","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"    ReadOnlyTrackBeau getTrackBeau();","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a edited customer has the same identity as another customer in trackBeau.","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"    boolean hasAnotherCustomerWithClashingIdentity(Customer originalCustomer, Customer editedCustomer);","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"     * Deletes the given booking.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"     * The booking must exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"    void deleteBooking(Booking target);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"     * Deletes the given customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"     * The customer must exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"     * Adds the given booking.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"     * {@code booking} must not already exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"    void addBooking(Booking booking);","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"     * Adds the given customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"     * {@code customer} must not already exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the given booking {@code target} with {@code editedBooking}.","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"     * The booking identity of {@code editedBooking} must not be the same as another existing booking in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"    void setBooking(Booking target, Booking editedBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"    /** Returns an unmodifiable view of the filtered booking list */","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"    ObservableList\u003cBooking\u003e getFilteredBookingList();","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"     * Updates the filter of the filtered booking list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"    void updateFilteredBookingList(Predicate\u003cBooking\u003e predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"    /** Returns an unmodifiable view of the filtered customer list */","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"hanhuiice"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"    void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"kashing555"},"content":"     * Updates the filter of the filtered service list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"kashing555"},"content":"    void updateFilteredServiceList(Predicate\u003cService\u003e predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"flairekq"},"content":"     * Returns true if a service with the same identity as {@code service} exists in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"flairekq"},"content":"    boolean hasService(Service service);","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"     * Deletes the given service.","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"     * The service must exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"    void deleteService(Service target);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"flairekq"},"content":"     * Adds the given service.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"flairekq"},"content":"     * {@code service} must not already exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"flairekq"},"content":"    void addService(Service service);","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"     * Replaces the given service {@code target} with {@code editedService}.","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"flairekq"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"flairekq"},"content":"     * The service identity of {@code editedService} must not be the same as another existing service in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"flairekq"},"content":"    void setService(Service target, Service editedService);","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"flairekq"},"content":"    /** Returns an unmodifiable view of the service list */","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"kashing555"},"content":"    ObservableList\u003cService\u003e getFilteredServiceList();","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"flairekq"},"content":"     * Updates the filter of the filtered service list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"flairekq"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"flairekq"},"content":"    void updateServiceList(Predicate\u003cService\u003e predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if a booking with the same identity as {@code booking} exists in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"hanhuiice"},"content":"    boolean hasBooking(Booking booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"hanhuiice"},"content":"     * Return selected date.","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"hanhuiice"},"content":"    LocalDate getSelectedDate();","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"hanhuiice"},"content":"     * Set the selected date in model.","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"hanhuiice"},"content":"    void setSelectedDate(LocalDate selectedDate);","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hanhuiice":51,"kashing555":30,"flairekq":36,"-":59,"isabelteo":5}},{"path":"src/main/java/seedu/trackbeau/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":" * Represents the in-memory model of TrackBeau data.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    private final TrackBeau trackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    private final FilteredList\u003cService\u003e filteredServices;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    private final FilteredList\u003cBooking\u003e filteredBookings;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    private LocalDate selectedDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"     * Initializes a ModelManager with the given trackBeau and userPrefs.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    public ModelManager(ReadOnlyTrackBeau trackBeau, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        requireAllNonNull(trackBeau, userPrefs);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        logger.fine(\"Initializing with trackBeau: \" + trackBeau + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        this.trackBeau \u003d new TrackBeau(trackBeau);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        this.selectedDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.trackBeau.getCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        filteredServices \u003d new FilteredList\u003c\u003e(this.trackBeau.getServiceList());","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        filteredBookings \u003d new FilteredList\u003c\u003e(this.trackBeau.getBookingList());","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        this(new TrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"    public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        return userPrefs.getTrackBeauFilePath();","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"    public void setTrackBeauFilePath(Path trackBeauFilePath) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(trackBeauFilePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        userPrefs.setTrackBeauFilePath(trackBeauFilePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TrackBeau \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"    public void setTrackBeau(ReadOnlyTrackBeau trackBeau) {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        this.trackBeau.resetData(trackBeau);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"    public ReadOnlyTrackBeau getTrackBeau() {","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"        return trackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"        return trackBeau.hasCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"    public boolean hasAnotherCustomerWithClashingIdentity(Customer originalCustomer, Customer editedCustomer) {","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"        requireAllNonNull(originalCustomer, editedCustomer);","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        return trackBeau.hasAnotherCustomerWithClashingIdentity(originalCustomer, editedCustomer);","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"        trackBeau.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"        trackBeau.removeCustomer(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"        trackBeau.setCustomer(target, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Services \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"kashing555"},"content":"    public boolean hasService(Service service) {","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"kashing555"},"content":"        requireNonNull(service);","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"kashing555"},"content":"        return trackBeau.hasService(service);","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"kashing555"},"content":"    public void addService(Service service) {","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"kashing555"},"content":"        trackBeau.addService(service);","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"kashing555"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"kashing555"},"content":"    public void deleteService(Service target) {","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"kashing555"},"content":"        trackBeau.removeService(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"kashing555"},"content":"    public void setService(Service target, Service editedService) {","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"kashing555"},"content":"        requireAllNonNull(target, editedService);","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"kashing555"},"content":"        trackBeau.setService(target, editedService);","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"kashing555"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Bookings \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"hanhuiice"},"content":"    public boolean hasBooking(Booking booking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"hanhuiice"},"content":"        return trackBeau.hasBooking(booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"kashing555"},"content":"    public void addBooking(Booking booking) {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"kashing555"},"content":"        trackBeau.addBooking(booking);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"kashing555"},"content":"        updateFilteredBookingList(PREDICATE_SHOW_ALL_BOOKINGS);","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"kashing555"},"content":"    public void deleteBooking(Booking target) {","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"kashing555"},"content":"        trackBeau.removeBooking(target);","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"hanhuiice"},"content":"    public void setBooking(Booking target, Booking editedBooking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"hanhuiice"},"content":"        requireAllNonNull(target, editedBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"hanhuiice"},"content":"        trackBeau.setBooking(target, editedBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"kashing555"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"kashing555"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"kashing555"},"content":"     * {@code versionedTrackBeau}","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"kashing555"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"kashing555"},"content":"        return filteredCustomers;","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"kashing555"},"content":"    public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"kashing555"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"kashing555"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"kashing555"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Service List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"kashing555"},"content":"     * Returns an unmodifiable view of the list of {@code Service} backed by the internal list of","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"kashing555"},"content":"     * {@code versionedTrackBeau}","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"kashing555"},"content":"    public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"kashing555"},"content":"        return filteredServices;","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"kashing555"},"content":"    public void updateFilteredServiceList(Predicate\u003cService\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"kashing555"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"kashing555"},"content":"        filteredServices.setPredicate(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"flairekq"},"content":"    public void updateServiceList(Predicate\u003cService\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"flairekq"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"kashing555"},"content":"        filteredServices.setPredicate(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"kashing555"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Booking List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":224,"author":{"gitId":"kashing555"},"content":"     * Returns an unmodifiable view of the list of {@code Booking} backed by the internal list of","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"hanhuiice"},"content":"     * {@code versionedTrackBeau}","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":228,"author":{"gitId":"kashing555"},"content":"    public ObservableList\u003cBooking\u003e getFilteredBookingList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"kashing555"},"content":"        return filteredBookings;","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":233,"author":{"gitId":"kashing555"},"content":"    public void updateFilteredBookingList(Predicate\u003cBooking\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":235,"author":{"gitId":"kashing555"},"content":"        filteredBookings.setPredicate(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":238,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"hanhuiice"},"content":"    public LocalDate getSelectedDate() {","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"hanhuiice"},"content":"        return this.selectedDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"hanhuiice"},"content":"    public void setSelectedDate(LocalDate selectedDate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"hanhuiice"},"content":"        this.selectedDate \u003d selectedDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"hanhuiice"},"content":"        return trackBeau.equals(other.trackBeau)","lastModifiedDate":"2022-03-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":264,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers)","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 filteredServices.equals(other.filteredServices)","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 filteredBookings.equals(other.filteredBookings);","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":63,"kashing555":82,"flairekq":17,"-":101,"isabelteo":6}},{"path":"src/main/java/seedu/trackbeau/model/ReadOnlyTrackBeau.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":" * Unmodifiable view of trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"public interface ReadOnlyTrackBeau {","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     * Returns an unmodifiable view of the bookings list.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     * This list will not contain any duplicate bookings.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    ObservableList\u003cBooking\u003e getBookingList();","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * Returns an unmodifiable view of the services list.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     * This list will not contain any duplicate services.","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    ObservableList\u003cService\u003e getServiceList();","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"     * Returns the index of the customer in the customer list.","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"     * @param customer customer to find.","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"    Integer getCustomerIndex(Customer customer);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"     * Returns the index of the service in the service list.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"     * @param service service to find.","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"    Integer getServiceIndex(Service service);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":18,"kashing555":18,"flairekq":6}},{"path":"src/main/java/seedu/trackbeau/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"    Path getTrackBeauFilePath();","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hanhuiice":3,"-":13}},{"path":"src/main/java/seedu/trackbeau/model/TrackBeau.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.UniqueList;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":" * Wraps all data at the trackBeau level","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":" * Duplicates are not allowed (by .isSameCustomer or .isSameBooking or .isSameService comparison)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"public class TrackBeau implements ReadOnlyTrackBeau {","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    private final UniqueList\u003cCustomer\u003e customers;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    private final UniqueList\u003cService\u003e services;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    private final UniqueList\u003cBooking\u003e bookings;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        customers \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        services \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        bookings \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"    public TrackBeau() {}","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"     * Creates a TrackBeau using the Customers, Bookings and Services in the {@code toBeCopied}","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    public TrackBeau(ReadOnlyTrackBeau toBeCopied) {","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        this.customers.setItems(customers);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"     * Replaces the contents of the service list with {@code services}.","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"     * {@code services} must not contain duplicate services.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"    public void setServices(List\u003cService\u003e services) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"        this.services.setItems(services);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the contents of the booking list with {@code bookings}.","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"     * {@code bookings} must not contain duplicate bookings.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"    public void setBookings(List\u003cBooking\u003e bookings) {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"        this.bookings.setItems(bookings);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"     * Resets the existing data of this {@code TrackBeau} with {@code newData}.","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"    public void resetData(ReadOnlyTrackBeau newData) {","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"        setServices(newData.getServiceList());","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        setBookings(newData.getBookingList());","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"    //// customer-level operations","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        return customers.contains(customer);","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a customer, other than itself, has same phone or email.","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"    public boolean hasAnotherCustomerWithClashingIdentity(Customer originalCustomer, Customer editedCustomer) {","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"        requireAllNonNull(originalCustomer, editedCustomer);","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        return customers.checkIfClash(originalCustomer, editedCustomer);","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"     * Adds a customer to trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"     * The customer must not already exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"    public void addCustomer(Customer c) {","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"        customers.add(c);","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"     * Return the index of the customer in the customer list.","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"     * The customer must already exist in trackBeau.","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"    public Integer getCustomerIndex(Customer c) {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"        return customers.indexOf(c);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"flairekq"},"content":"        customers.setItem(target, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"hanhuiice"},"content":"     * Removes {@code key} from this {@code TrackBeau}.","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"     * {@code key} must exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"hanhuiice"},"content":"        customers.remove(key);","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"flairekq"},"content":"    //// service-level operations","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"     * Returns true if a service with the same identity as {@code service} exists in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"    public boolean hasService(Service service) {","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"        requireNonNull(service);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"flairekq"},"content":"        return services.contains(service);","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"     * Adds a service to trackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"flairekq"},"content":"     * The service must not already exist in trackBeau.","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"flairekq"},"content":"    public void addService(Service s) {","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"        services.add(s);","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"kashing555"},"content":"     * Return the index of the service in the service list.","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"kashing555"},"content":"     * The service must already exist in trackBeau.","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"kashing555"},"content":"    public Integer getServiceIndex(Service s) {","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"kashing555"},"content":"        return services.indexOf(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"hanhuiice"},"content":"     * Removes {@code key} from this {@code TrackBeau}.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"hanhuiice"},"content":"     * {@code key} must exist in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"hanhuiice"},"content":"    public void removeService(Service key) {","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"hanhuiice"},"content":"        services.remove(key);","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"flairekq"},"content":"     * Replaces the given service {@code target} in the list with {@code editedService}.","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"flairekq"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"flairekq"},"content":"     * The service identity of {@code editedService} must not be the same as another existing service in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"flairekq"},"content":"    public void setService(Service target, Service editedService) {","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"flairekq"},"content":"        requireNonNull(editedService);","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"flairekq"},"content":"        services.setItem(target, editedService);","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if a booking with the same identity as {@code booking} exists in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"hanhuiice"},"content":"    public boolean hasBooking(Booking booking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"hanhuiice"},"content":"        return bookings.contains(booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"kashing555"},"content":"     * Adds a booking to trackBeau.","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"kashing555"},"content":"     * The customer must not already exist in trackBeau.","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"kashing555"},"content":"    public void addBooking(Booking b) {","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"kashing555"},"content":"        requireNonNull(b);","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"kashing555"},"content":"        bookings.add(b);","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"hanhuiice"},"content":"     * Replaces the given booking {@code target} in the list with {@code editedBooking}.","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"hanhuiice"},"content":"     * {@code target} must exist in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"hanhuiice"},"content":"     * The booking identity of {@code editedBooking} must not be the same as another existing booking in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"hanhuiice"},"content":"    public void setBooking(Booking target, Booking editedBooking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(editedBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"hanhuiice"},"content":"        bookings.setItem(target, editedBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":210,"author":{"gitId":"hanhuiice"},"content":"     * Removes {@code key} from this {@code TrackBeau}.","lastModifiedDate":"2022-02-25"},{"lineNumber":211,"author":{"gitId":"hanhuiice"},"content":"     * {@code key} must exist in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":213,"author":{"gitId":"hanhuiice"},"content":"    public void removeBooking(Booking key) {","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"hanhuiice"},"content":"        bookings.remove(key);","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"flairekq"},"content":"        // return customers.asUnmodifiableObservableList().size() + \" customers\";","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"flairekq"},"content":"        return customers.asUnmodifiableObservableList().size() + \" customers\"","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"hanhuiice"},"content":"                + \", \" + services.asUnmodifiableObservableList().size() + \" services\"","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"hanhuiice"},"content":"                + \", \" + bookings.asUnmodifiableObservableList().size() + \" bookings\";","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"hanhuiice"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2022-02-26"},{"lineNumber":230,"author":{"gitId":"hanhuiice"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2022-02-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":232,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"flairekq"},"content":"    public ObservableList\u003cService\u003e getServiceList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"flairekq"},"content":"        return services.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":238,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"kashing555"},"content":"    public ObservableList\u003cBooking\u003e getBookingList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"kashing555"},"content":"        return bookings.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":246,"author":{"gitId":"hanhuiice"},"content":"                || (other instanceof TrackBeau // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":247,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 customers.equals(((TrackBeau) other).customers)","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 services.equals(((TrackBeau) other).services)","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 bookings.equals(((TrackBeau) other).bookings));","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":254,"author":{"gitId":"kashing555"},"content":"        return customers.hashCode() + bookings.hashCode() + services.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":69,"kashing555":39,"flairekq":56,"-":81,"isabelteo":11}},{"path":"src/main/java/seedu/trackbeau/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    private Path trackBeauFilePath \u003d Paths.get(\"data\" , \"trackbeau.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        setTrackBeauFilePath(newUserPrefs.getTrackBeauFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        return trackBeauFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    public void setTrackBeauFilePath(Path trackBeauFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(trackBeauFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        this.trackBeauFilePath \u003d trackBeauFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 trackBeauFilePath.equals(o.trackBeauFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"        return Objects.hash(guiSettings, trackBeauFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        sb.append(\"\\nLocal data file location : \" + trackBeauFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":3,"-":75,"isabelteo":9}},{"path":"src/main/java/seedu/trackbeau/model/booking/Booking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.booking;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.UniqueListItem;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":" * Represents a Booking in trackBeau.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"public class Booking implements UniqueListItem, Comparable\u003cBooking\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"    private final Customer customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    private final Service service;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    private final BookingDateTime bookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    private final Feedback feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public Booking(Customer customer, Service service, BookingDateTime bookingDateTime, Feedback feedback) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        requireAllNonNull(bookingDateTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        this.service \u003d service;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"        this.bookingDateTime \u003d bookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"    public Customer getCustomer() {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        return customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"    public Service getService() {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"        return service;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    public Name getCustomerName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        return customer.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"    public Phone getCustomerPhone() {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        return customer.getPhone();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"    public ServiceName getServiceName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"        return service.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"    public BookingDateTime getBookingDateTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"        return bookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"    public LocalDateTime getBookingEndTime() {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        return bookingDateTime.value.plusMinutes(service.getDuration().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"    public Feedback getFeedback() {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"        return feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if both bookings is the same as define by {@code equals}.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"    public boolean isSameItem(UniqueListItem otherBooking) {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        return this.equals(otherBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"    public int compareTo(Booking b) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        return bookingDateTime.value.compareTo(b.bookingDateTime.value);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if both bookings have the same fields.","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"     * This defines a strong notion of equality between two bookings.","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        if (!(other instanceof Booking)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"        Booking otherBooking \u003d (Booking) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"        return otherBooking.getCustomer().equals(getCustomer())","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 otherBooking.getService().equals(getService())","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 otherBooking.getBookingDateTime().equals(getBookingDateTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"        builder.append(getCustomerName())","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"                .append(getCustomerPhone())","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"                .append(\"; Service: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"                .append(getServiceName())","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"                .append(\"; Appointment DateTime: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"                .append(getBookingDateTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"hanhuiice":52,"kashing555":55,"flairekq":7}},{"path":"src/main/java/seedu/trackbeau/model/booking/BookingDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.booking;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Date;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"public class BookingDateTime extends Date {","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"            \"BookingDateTime should follow dd-MM-yyyy HH:mm, and it should not be blank\";","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"     * Constructs an {@code BookingDateTime}.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"     * @param bookingDateTime A valid BookingDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    public BookingDateTime(String bookingDateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(bookingDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        checkArgument(isValidBookingDateTime(bookingDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        value \u003d LocalDateTime.parse(bookingDateTime, formatter);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if a given string is a valid BookingDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    public static boolean isValidBookingDateTime(String test) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"            LocalDateTime.parse(test, formatter);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"        return formatter.format(value);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"                || (other instanceof BookingDateTime // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 value.equals(((BookingDateTime) other).value)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"hanhuiice":55,"isabelteo":6}},{"path":"src/main/java/seedu/trackbeau/model/booking/BookingSearchContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.model.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.util.StringUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" * Tests that a {@code booking\u0027s}\u0027s {@code Data} matches any of the keywords given.","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class BookingSearchContainsKeywordsPredicate implements Predicate\u003cBooking\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public static final int FIND_ATTRIBUTE_COUNT \u003d 3;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    private final ArrayList\u003cList\u003cString\u003e\u003e keywordsList;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     * Constructs a {@code Predicate}.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     * @param keywordsList User input keywords to search with.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    public BookingSearchContainsKeywordsPredicate(ArrayList\u003cList\u003cString\u003e\u003e keywordsList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        this.keywordsList \u003d keywordsList;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"        assert keywordsList.size() \u003d\u003d FIND_ATTRIBUTE_COUNT","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"                : String.format(\"Keyword list is wrong size: %s\", keywordsList.toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public boolean test(Booking booking) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        String[] find \u003d {\"getCustomerName\", \"getServiceName\", \"getBookingDateTime\", \"getFeedback\"};","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        String searchString \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e keywords \u003d keywordsList.get(0);","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"            for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                searchString \u003d booking.getClass().getDeclaredMethod(find[i]).invoke(booking).toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"                if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"                    continue;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"                    if (StringUtil.containsWordIgnoreCase(searchString, keyword)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"                        return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            for (int i \u003d 1; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                keywords \u003d keywordsList.get(i);","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                searchString \u003d booking.getClass().getDeclaredMethod(find[i + 1]).invoke(booking).toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                    continue;","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"                    if (StringUtil.containsWordIgnoreCase(searchString, keyword)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"                        return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        } catch (NoSuchMethodException | SecurityException | IllegalAccessException | InvocationTargetException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"        return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        } else if (!(other instanceof BookingSearchContainsKeywordsPredicate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e thisKeywords \u003d this.keywordsList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e otherKeywords \u003d ((BookingSearchContainsKeywordsPredicate) other).keywordsList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            if ((thisKeywords !\u003d null) \u0026\u0026 (otherKeywords !\u003d null)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"                if (!thisKeywords.equals(otherKeywords)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"                    return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"        return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kashing555":87}},{"path":"src/main/java/seedu/trackbeau/model/booking/Feedback.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.model.booking;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":" * Represents a Customer\u0027s Feedback of the booking in trackBeau.","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFeedback(String)}","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"public class Feedback {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"            \"Feedback should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    /*","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"     * The first character of feedback must not be a whitespace,","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    public final String feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"     * Constructs a {@code feedback}.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"     * @param feedback A valid feedback.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public Feedback(String feedback) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        requireNonNull(feedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        checkArgument(isValidFeedback(feedback), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"     * Returns true if a given string is a valid feedback.","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"    public static boolean isValidFeedback(String test) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"    public String toString() {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"        return feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                || (other instanceof Feedback // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                \u0026\u0026 feedback.equals(((Feedback) other).feedback)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"        return feedback.hashCode();","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kashing555":59}},{"path":"src/main/java/seedu/trackbeau/model/customer/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s address in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":3,"-":53,"isabelteo":1}},{"path":"src/main/java/seedu/trackbeau/model/customer/Birthdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public class Birthdate extends Date {","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthdate should follow dd-MM-yyyy and be valid date.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    public final LocalDate value;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * Constructs an {@code Birthdate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     * @param birthDate A valid Birthdate.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    public Birthdate(String birthDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        checkArgument(isValidBirthdate(birthDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        value \u003d LocalDate.parse(birthDate, formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a given string is a valid Birthdate.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    public static boolean isValidBirthdate(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        if (!isSatisfyDateRequirements(test, formatter)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        return formatter.format(value);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                || (other instanceof Birthdate // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 value.equals(((Birthdate) other).value)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":1,"isabelteo":54}},{"path":"src/main/java/seedu/trackbeau/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.UniqueListItem;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"public class Customer implements UniqueListItem {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    private final SkinType skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    private final HairType hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    private final Set\u003cTag\u003e staffs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    private final Set\u003cTag\u003e services \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private final Set\u003cTag\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    private final Birthdate birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    private final RegistrationDate regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    public Customer(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"                    SkinType skinType, HairType hairType,","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                    Set\u003cTag\u003e staffs, Set\u003cTag\u003e services, Set\u003cTag\u003e allergies,","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                    Birthdate birthdate, RegistrationDate regDate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        requireAllNonNull(name, phone, email, address, regDate);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        this.skinType \u003d skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        this.hairType \u003d hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"        this.staffs.addAll(staffs);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"        this.services.addAll(services);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"        this.allergies.addAll(allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        this.regDate \u003d regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"    public SkinType getSkinType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        return skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"    public HairType getHairType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        return hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"    public Birthdate getBirthdate() {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        return birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"    public RegistrationDate getRegDate() {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        return regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"    public Set\u003cTag\u003e getStaffs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        return Collections.unmodifiableSet(staffs);","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"    public Set\u003cTag\u003e getServices() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        return Collections.unmodifiableSet(services);","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"    public Set\u003cTag\u003e getAllergies() {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        return Collections.unmodifiableSet(allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"     * Returns true if both customers have the same phone and email.","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"     * This defines a weaker notion of equality between two customers.","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"    public boolean isSameItem(UniqueListItem other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"flairekq"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"        boolean isSamePhoneNumber \u003d otherCustomer.getPhone().equals(getPhone());","lastModifiedDate":"2022-04-04"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"        boolean isSameEmail \u003d otherCustomer.getEmail().equals(getEmail());","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"        //as long as match on phone or email, they are the same person","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"        return isSameEmail || isSamePhoneNumber;","lastModifiedDate":"2022-04-04"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"     * Checks if identity fields, phone and email, have been changed from the original customer.","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"    public boolean hasDifferentIdentityFieldsFrom(UniqueListItem other) {","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        boolean isSamePhoneNumber \u003d otherCustomer.getPhone().equals(getPhone());","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"        boolean isSameEmail \u003d otherCustomer.getEmail().equals(getEmail());","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"        if (isSameEmail \u0026\u0026 isSamePhoneNumber) { //no identity fields edited if email and phone remain same","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"            return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"        return true;","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"     * Returns true if both customers have the same identity and data fields.","lastModifiedDate":"2022-02-26"},{"lineNumber":137,"author":{"gitId":"hanhuiice"},"content":"     * This defines a stronger notion of equality between two customers.","lastModifiedDate":"2022-02-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"hanhuiice"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"hanhuiice"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"hanhuiice"},"content":"        return otherCustomer.getName().equals(getName())","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"hanhuiice"},"content":"            \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"hanhuiice"},"content":"            \u0026\u0026 otherCustomer.getEmail().equals(getEmail())","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"hanhuiice"},"content":"            \u0026\u0026 otherCustomer.getAddress().equals(getAddress())","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"            \u0026\u0026 otherCustomer.getStaffs().equals(getStaffs())","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"            \u0026\u0026 otherCustomer.getServices().equals(getServices())","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"            \u0026\u0026 otherCustomer.getAllergies().equals(getAllergies())","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"            \u0026\u0026 otherCustomer.getBirthdate().equals(getBirthdate())","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"            \u0026\u0026 otherCustomer.getRegDate().equals(getRegDate());","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"        return Objects.hash(name, phone, email, address, skinType, hairType, staffs, services, allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"            .append(getAddress())","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"            .append(\"; Skin Type: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"            .append(getSkinType())","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"            .append(\"; Hair Type: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"            .append(getHairType())","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"            .append(\"; Birthday: \")","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"            .append(getBirthdate())","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"            .append(\"; Registration Date: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"isabelteo"},"content":"            .append(getRegDate());","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e staffs \u003d getStaffs();","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"isabelteo"},"content":"        if (!staffs.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"isabelteo"},"content":"            builder.append(\"; Favourite staffs: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"isabelteo"},"content":"            staffs.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e services \u003d getServices();","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"isabelteo"},"content":"        if (!services.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"            builder.append(\"; Favourite Services: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"isabelteo"},"content":"            services.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e allergies \u003d getAllergies();","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"        if (!allergies.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"isabelteo"},"content":"            builder.append(\"; allergies: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"isabelteo"},"content":"            allergies.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":13,"flairekq":9,"-":90,"isabelteo":95}},{"path":"src/main/java/seedu/trackbeau/model/customer/CustomerSearchContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" * Tests that a {@code Customer\u0027s}\u0027s {@code Data} matches any of the keywords given.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"public class CustomerSearchContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    public static final int FIND_ATTRIBUTE_COUNT \u003d 11;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public static final int NON_TAG_ATTRIBUTE_COUNT \u003d 8;","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"    private final ArrayList\u003cList\u003cString\u003e\u003e keywordsList;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     * Constructs a {@code Predicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"     * @param keywordsList User input keywords to search with.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"kashing555"},"content":"    public CustomerSearchContainsKeywordsPredicate(ArrayList\u003cList\u003cString\u003e\u003e keywordsList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"        this.keywordsList \u003d keywordsList;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        assert keywordsList.size() \u003d\u003d FIND_ATTRIBUTE_COUNT","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"                : String.format(\"Keyword list is wrong size: %s\", keywordsList.toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        String[] find \u003d {\"getName\", \"getPhone\", \"getEmail\", \"getAddress\", \"getSkinType\",","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"            \"getHairType\", \"getBirthdate\", \"getRegDate\", \"getStaffs\", \"getServices\", \"getAllergies\"};","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"            for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"                //keywords contains the information that user wants to find for a particular attribute","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"                List\u003cString\u003e keywords \u003d keywordsList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                //customer is not searching about this attribute","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"                    continue;","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"                }","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                String searchString \u003d \"\"; //searchString contains the existing customer information","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                if (i \u003c NON_TAG_ATTRIBUTE_COUNT) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"                    //get customer detail","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"                    searchString \u003d customer.getClass().getDeclaredMethod(find[i]).invoke(customer).toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"                } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"                    Set\u003cTag\u003e tagList \u003d (Set\u003cTag\u003e) customer.getClass().getDeclaredMethod(find[i]).invoke(customer);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                    for (Tag tag : tagList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"                        searchString \u003d searchString + tag.tagName + \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                //loop through the keywords individually to check if match with customer information","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"                searchString \u003d searchString.toLowerCase();","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"                    keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"                    if (searchString.contains(keyword)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"                        return true;","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        } catch (NoSuchMethodException | SecurityException | IllegalAccessException | InvocationTargetException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"        return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"        } else if (!(other instanceof CustomerSearchContainsKeywordsPredicate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kashing555"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e thisKeywords \u003d this.keywordsList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e otherKeywords \u003d ((CustomerSearchContainsKeywordsPredicate) other).keywordsList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"            if ((thisKeywords !\u003d null) \u0026\u0026 (otherKeywords !\u003d null)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"                if (!thisKeywords.equals(otherKeywords)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"kashing555":66,"isabelteo":24}},{"path":"src/main/java/seedu/trackbeau/model/customer/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" *","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public abstract class Date {","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    protected static boolean isSatisfyDateRequirements(String test, DateTimeFormatter formatter) {","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"        return isNotInFuture(test, formatter);","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    static boolean isNotInFuture(String test, DateTimeFormatter formatter) {","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"            LocalDate userInputDate \u003d LocalDate.parse(test, formatter);","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"            LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"            if (userInputDate.isAfter(now)) { //date cannot be in the future","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"                return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"            return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"            return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"isabelteo":28}},{"path":"src/main/java/seedu/trackbeau/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s email in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"     * @param email A valid email.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":4,"-":67}},{"path":"src/main/java/seedu/trackbeau/model/customer/HairType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s hair type in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHairType(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public class HairType {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"HairTypes can be any values and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"     * The first character of hair type must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     * Constructs an {@code hairType}.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @param hairType A valid hair type.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    public HairType(String hairType) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(hairType);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        checkArgument(isValidHairType(hairType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        value \u003d hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a given string is a valid hair type.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    public static boolean isValidHairType(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        return value;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                || (other instanceof HairType // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 value.equals(((HairType) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"hanhuiice":3,"isabelteo":53}},{"path":"src/main/java/seedu/trackbeau/model/customer/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s name in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"     * The first character of name must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":4,"-":55}},{"path":"src/main/java/seedu/trackbeau/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s phone number in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":3,"-":50}},{"path":"src/main/java/seedu/trackbeau/model/customer/RegistrationDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public class RegistrationDate extends Date {","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"RegistrationDate should follow dd-MM-yyyy and be valid date.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    private static final String EMPTY_DATE \u003d \"01-01-1000\"; //impossible date","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    public final LocalDate value;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     * Constructs an {@code RegistrationDate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     * @param regDate A valid RegistrationDate.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    public RegistrationDate(String regDate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        checkArgument(isValidRegistrationDate(regDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        value \u003d LocalDate.parse(regDate, formatter);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a given string is a valid RegistrationDate.","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    public static boolean isValidRegistrationDate(String test) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        if (!isSatisfyDateRequirements(test, formatter)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        if (this.equals(new RegistrationDate(EMPTY_DATE))) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"            return \"Registration data not available.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"            return formatter.format(value);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"                || (other instanceof RegistrationDate // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 value.equals(((RegistrationDate) other).value)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"flairekq":1,"isabelteo":59}},{"path":"src/main/java/seedu/trackbeau/model/customer/SkinType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Customer\u0027s skin type in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSkinType(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public class SkinType {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"SkinTypes can be any values and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"     * The first character of skin type must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * Constructs an {@code SkinType}.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * @param skinType a valid skin type.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    public SkinType(String skinType) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        requireNonNull(skinType);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        checkArgument(isValidSkinType(skinType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        value \u003d skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Returns true if a given string is a valid skin type.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    public static boolean isValidSkinType(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        return value;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                || (other instanceof SkinType // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                \u0026\u0026 value.equals(((SkinType) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"hanhuiice":3,"isabelteo":54}},{"path":"src/main/java/seedu/trackbeau/model/service/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.service;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" * Represents a Service\u0027s duration in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDuration(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"public class Duration {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"        \"Duration should only contain numbers and have a value that is greater than 0.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\s*(?\u003d.*[1-9])\\\\d*$\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    public final Integer value;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code Duration}.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * @param duration A valid duration.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    public Duration(String duration) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        value \u003d Integer.parseInt(duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code Duration}.","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"     * @param duration A valid duration.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    public Duration(int duration) {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        value \u003d duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"     * Returns true if a given string is a valid duration.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        return value.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"            || (other instanceof Duration // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 value.equals(((Duration) other).value)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":64}},{"path":"src/main/java/seedu/trackbeau/model/service/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.service;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":" * Represents a Service\u0027s price in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"public class Price {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"            \"Price should only contain numbers, at most 2 decimal places and have a value that is greater than 0.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\s*(?\u003d.*[1-9])\\\\d*(?:\\\\.\\\\d{1,2})?\\\\s*$\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    public final Double value;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * @param price A valid price.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public Price(String price) {","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"        value \u003d Double.parseDouble(price);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"     * @param price A valid price.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    public Price(Double price) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"        value \u003d price;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        return value.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":63}},{"path":"src/main/java/seedu/trackbeau/model/service/Service.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.service;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.UniqueListItem;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":" * Represents a Service for the beauty salon in trackbeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"public class Service implements UniqueListItem {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    // Identity fields","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    private final ServiceName name;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    // Data fields","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    private final Price price;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    private final Duration duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    public Service(ServiceName name, Price price, Duration duration) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        requireAllNonNull(name, price, duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        assert price.value \u003e 0 : \"price should be greater than 0\";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        assert duration.value \u003e 0 : \"duration should be greater than 0\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    public ServiceName getName() {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        return name;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    public Price getPrice() {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        return price;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    public Duration getDuration() {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        return duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"     * Returns true if both services have the same name.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"     * This defines a weaker notion of equality between two services.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"    public boolean isSameItem(UniqueListItem other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"        if (!(other instanceof Service)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"        Service otherService \u003d (Service) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        return otherService.getName().equals(getName());","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"     * Returns true if both services have the same identity and data fields.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"     * This defines a stronger notion of equality between two services.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"        if (!(other instanceof Service)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"        Service otherService \u003d (Service) other;","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"        return otherService.getName().equals(getName())","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 otherService.getPrice().equals(getPrice())","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 otherService.getDuration().equals(getDuration());","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"flairekq"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"        return Objects.hash(name, price, duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"        Locale locale \u003d new Locale(\"en\", \"SG\");","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"flairekq"},"content":"        NumberFormat formatter \u003d NumberFormat.getCurrencyInstance(locale);","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"        String priceString \u003d formatter.format(getPrice().value);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"flairekq"},"content":"            .append(\"; Price: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"            .append(priceString)","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"            .append(\"; Duration (in minutes): \")","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"            .append(getDuration());","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":105}},{"path":"src/main/java/seedu/trackbeau/model/service/ServiceName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.service;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":" * Represents a Service\u0027s name in trackBeau.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"public class ServiceName {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"            \"Names should only contain alphanumeric characters, hyphens and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"     * The first character of name must not be a whitespace,","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} -]*\";","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code ServiceName}.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public ServiceName(String name) {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        return fullName;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"                || (other instanceof ServiceName // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"                \u0026\u0026 fullName.equals(((ServiceName) other).fullName)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":59}},{"path":"src/main/java/seedu/trackbeau/model/service/ServiceSearchContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kashing555"},"content":"package seedu.trackbeau.model.service;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":" * Tests that a {@code service\u0027s}\u0027s {@code Data} matches any of the keywords given.","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kashing555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"public class ServiceSearchContainsKeywordsPredicate implements Predicate\u003cService\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"    public static final int FIND_ATTRIBUTE_COUNT \u003d 3;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"    private final ArrayList\u003cList\u003cString\u003e\u003e keywordsList;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"     * Constructs a {@code Predicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"kashing555"},"content":"     * @param keywordsList User input keywords to search with.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    public ServiceSearchContainsKeywordsPredicate(ArrayList\u003cList\u003cString\u003e\u003e keywordsList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"        this.keywordsList \u003d keywordsList;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        assert keywordsList.size() \u003d\u003d FIND_ATTRIBUTE_COUNT","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"                : String.format(\"Keyword list is wrong size: %s\", keywordsList.toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"    public boolean test(Service service) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"        String[] find \u003d {\"getName\", \"getPrice\", \"getDuration\"};","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kashing555"},"content":"        String searchString \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        Boolean anyMatch \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"            for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                List\u003cString\u003e keywords \u003d keywordsList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"                searchString \u003d service.getClass().getDeclaredMethod(find[i]).invoke(service).toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"                if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"                    continue;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"                    if (StringUtil.containsWordIgnoreCase(searchString, keyword)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                        anyMatch \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"                        break;","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"                    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        } catch (NoSuchMethodException | SecurityException | IllegalAccessException | InvocationTargetException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        return anyMatch;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"        } else if (!(other instanceof ServiceSearchContainsKeywordsPredicate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c FIND_ATTRIBUTE_COUNT; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e thisKeywords \u003d this.keywordsList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"            List\u003cString\u003e otherKeywords \u003d ((ServiceSearchContainsKeywordsPredicate) other).keywordsList.get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"            if ((thisKeywords !\u003d null) \u0026\u0026 (otherKeywords !\u003d null)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"                if (!thisKeywords.equals(otherKeywords)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"kashing555"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"kashing555"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"kashing555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"kashing555":70,"isabelteo":4}},{"path":"src/main/java/seedu/trackbeau/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":" * Represents a Tag in trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names can be any values, and it should not be blank\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hanhuiice":3,"-":49,"isabelteo":2}},{"path":"src/main/java/seedu/trackbeau/model/uniquelist/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.uniquelist;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"public class UniqueList\u003cT extends UniqueListItem\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"     * Returns true if the list, other than item to skip, is same item as item toCheck in argument.","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    public boolean checkIfClash(T toSkip, T toCheck) {","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        //we skip the original customer and check the edited customer against the rest of the list","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        requireAllNonNull(toSkip, toCheck);","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        int indexOfToSkip \u003d internalList.indexOf(toSkip);","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"            if (i \u003d\u003d indexOfToSkip) {","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"                continue;","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"            } else {","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                if (internalList.get(i).isSameItem(toCheck)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                    return true;","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                }","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"     * Adds a item to the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"        if (!target.isSameItem(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"     * The item must exist in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"     * Returns the index of the first occurrence of the specified element in the UniqueList,","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"     * or -1 if this UniqueList does not contain the element.","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"    public Integer indexOf(T item) {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"        requireNonNull(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"        return internalList.indexOf(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"flairekq"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"flairekq"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"flairekq"},"content":"        internalList.setAll(items);","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"flairekq"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"flairekq"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"flairekq"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"flairekq"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"flairekq"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"flairekq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"flairekq"},"content":"            || (other instanceof UniqueList // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"flairekq"},"content":"            \u0026\u0026 internalList.equals(((UniqueList) other).internalList));","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"flairekq"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"flairekq"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"flairekq"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"flairekq"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"flairekq"},"content":"                    return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"        return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"kashing555":9,"flairekq":129,"isabelteo":19}},{"path":"src/main/java/seedu/trackbeau/model/uniquelist/UniqueListItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.uniquelist;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" * An interface to represent an item in a UniqueList.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"public interface UniqueListItem {","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    boolean isSameItem(UniqueListItem other);","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"flairekq":8}},{"path":"src/main/java/seedu/trackbeau/model/uniquelist/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.uniquelist.exceptions;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" * Signals that the operation will result in duplicate UniqueItems","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" * (UniqueItems are considered duplicates if they have the same identity).","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"flairekq":11}},{"path":"src/main/java/seedu/trackbeau/model/uniquelist/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.model.uniquelist.exceptions;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"flairekq":6}},{"path":"src/main/java/seedu/trackbeau/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.booking.AddBookingCommandParser.EMPTY_FEEDBACK_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Price;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":" * Contains utility methods for populating {@code TrackBeau} with sample data.","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        return new Customer[]{","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new SkinType(\"Oily\"), new HairType(\"Dry\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                getTagSet(\"Jason\"), getTagSet(\"Organic Radiance Facial\", \"Student Facial\"), getTagSet(\"Nickel\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                new Birthdate(\"01-12-2001\"), new RegistrationDate(\"23-01-2022\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"                new SkinType(\"Sensitive\"), new HairType(\"Oily\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                getTagSet(\"Jane\", \"Lee\"), getTagSet(\"Eyebrow Shaping\"), getTagSet(\"Steroids\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                new Birthdate(\"01-12-1996\"), new RegistrationDate(\"23-02-2022\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new SkinType(\"Combination\"), new HairType(\"Dry\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                getTagSet(\"Lee\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Lymphatic Flow Facial\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Salicylic acid\", \"Aluminium compounds\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                    new Birthdate(\"05-10-1960\"), new RegistrationDate(\"23-02-2022\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new SkinType(\"Oily\"), new HairType(\"Dry\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Jason\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Anti-Aging Eye Treatment\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Cobalt\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"                    new Birthdate(\"26-05-2000\"), new RegistrationDate(\"23-03-2022\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new SkinType(\"Sensitive\"), new HairType(\"Oily\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Jolene\", \"Lee\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Anti-Aging Eye Treatment\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"                    getTagSet(\"Fragrances\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"                    new Birthdate(\"23-05-2001\"), new RegistrationDate(\"23-03-2022\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"            new Customer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new SkinType(\"Combination\"), new HairType(\"Dry\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                getTagSet(\"Lee\"), getTagSet(\"Anti-Aging Eye Treatment\"), getTagSet(\"Cocoa butter\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"                new Birthdate(\"01-08-2001\"), new RegistrationDate(\"23-03-2022\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"    public static Service[] getSampleServices() {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        return new Service[]{","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Organic Radiance Facial\"), new Price(168.00), new Duration(60)),","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Bio Ageless Facial\"), new Price(268.00), new Duration(90)),","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Lymphatic Flow Facial\"), new Price(198.00), new Duration(90)),","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Student Facial\"), new Price(30.00), new Duration(45)),","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Anti-Aging Eye Treatment\"), new Price(58.00), new Duration(30)),","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"            new Service(new ServiceName(\"Eyebrow Shaping\"), new Price(15.00), new Duration(30))","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"        };","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"    public static Booking[] getSampleBookings() {","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        LocalDateTime dateTimeNow \u003d LocalDateTime.now();","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"        return new Booking[] {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"            new Booking(getSampleCustomers()[0], getSampleServices()[0],","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"            new Booking(getSampleCustomers()[0], getSampleServices()[3],","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.plusDays(1).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"            new Booking(getSampleCustomers()[1], getSampleServices()[1],","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.plusDays(2).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"            new Booking(getSampleCustomers()[2], getSampleServices()[2],","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.plusDays(3).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"            new Booking(getSampleCustomers()[0], getSampleServices()[2],","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.minusDays(1).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"            new Booking(getSampleCustomers()[1], getSampleServices()[2],","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.minusDays(2).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE)),","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"kashing555"},"content":"            new Booking(getSampleCustomers()[2], getSampleServices()[2],","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"hanhuiice"},"content":"                new BookingDateTime(dateTimeNow.minusDays(3).format(formatter)), new Feedback(EMPTY_FEEDBACK_TYPE))","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"    public static ReadOnlyTrackBeau getSampleTrackBeau() {","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau sampleTb \u003d new TrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"            sampleTb.addCustomer(sampleCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"        for (Service sampleService : getSampleServices()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"            sampleTb.addService(sampleService);","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"hanhuiice"},"content":"        for (Booking sampleBooking : getSampleBookings()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"            sampleTb.addBooking(sampleBooking);","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"        return sampleTb;","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":122,"author":{"gitId":"hanhuiice"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-02-25"},{"lineNumber":123,"author":{"gitId":"hanhuiice"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"hanhuiice"},"content":"            .map(Tag::new)","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"hanhuiice"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":76,"kashing555":6,"flairekq":18,"isabelteo":28}},{"path":"src/main/java/seedu/trackbeau/storage/JsonAdaptedBooking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.BookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":" * Jackson-friendly version of {@link Booking}.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"class JsonAdaptedBooking {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Booking\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"kashing555"},"content":"    private final Integer customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"    private final Integer serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    private final String bookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"kashing555"},"content":"    private final String feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"     * Constructs a {@code JsonAdaptedBooking} with the given Booking details.","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"kashing555"},"content":"    public JsonAdaptedBooking(@JsonProperty(\"nameIndex\") Integer customerIndex,","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"kashing555"},"content":"                              @JsonProperty(\"serviceIndex\") Integer serviceIndex,","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"kashing555"},"content":"                              @JsonProperty(\"bookingDateTime\") String bookingDateTime,","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kashing555"},"content":"                              @JsonProperty(\"feedback\") String feedback) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kashing555"},"content":"        this.customerIndex \u003d customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        this.serviceIndex \u003d serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        this.bookingDateTime \u003d bookingDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"kashing555"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"     * Converts a given {@code Booking} into this class for Jackson use.","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    public JsonAdaptedBooking(Booking source, Integer customerIndex, Integer serviceIndex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"        this.customerIndex \u003d customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        this.serviceIndex \u003d serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        this.bookingDateTime \u003d source.getBookingDateTime().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        this.feedback \u003d source.getFeedback().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"    Integer getModelCustomerID() throws IllegalValueException {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        if (customerIndex \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Integer.class.getSimpleName()));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"        if (customerIndex \u003c 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        return customerIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"    Integer getModelServiceID() throws IllegalValueException {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"kashing555"},"content":"        if (serviceIndex \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Integer.class.getSimpleName()));","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"        if (serviceIndex \u003c 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(Messages.MESSAGE_INVALID_SERVICE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"kashing555"},"content":"        return serviceIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"    BookingDateTime getModelBookingDateTime() throws IllegalValueException {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        if (bookingDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"                    BookingDateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        if (!BookingDateTime.isValidBookingDateTime(bookingDateTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"            throw new IllegalValueException(BookingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        return new BookingDateTime(bookingDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"kashing555"},"content":"    Feedback getModelFeedback() throws IllegalValueException {","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"kashing555"},"content":"        if (feedback \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"                    Feedback.class.getSimpleName()));","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"        if (!Feedback.isValidFeedback(feedback)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"kashing555"},"content":"            throw new IllegalValueException(Feedback.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"kashing555"},"content":"        return new Feedback(feedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"     * Converts this Jackson-friendly adapted booking object into the model\u0027s {@code Booking} object.","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"hanhuiice"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Booking.","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"kashing555"},"content":"    public Booking toModelType(TrackBeau trackBeau) throws IllegalValueException {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e customerList \u003d trackBeau.getCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e serviceList \u003d trackBeau.getServiceList();","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"kashing555"},"content":"        Customer customer \u003d customerList.get(getModelCustomerID());","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"kashing555"},"content":"        Service service \u003d serviceList.get(getModelServiceID());","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"kashing555"},"content":"        return new Booking(customer, service, getModelBookingDateTime(), getModelFeedback());","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"hanhuiice":57,"kashing555":53}},{"path":"src/main/java/seedu/trackbeau/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    private final String name;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    private final String phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    private final String email;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    private final String address;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    private final String skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    private final String hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    private final String birthDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    private final String regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    private final List\u003cJsonAdaptedTag\u003e staffs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    private final List\u003cJsonAdaptedTag\u003e services \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    private final List\u003cJsonAdaptedTag\u003e allergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"skinType\") String skinType,","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"hairType\") String hairType,","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"staffs\") List\u003cJsonAdaptedTag\u003e staffs,","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"services\") List\u003cJsonAdaptedTag\u003e services,","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"allergies\") List\u003cJsonAdaptedTag\u003e allergies,","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"birthdate\") String birthDate,","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                               @JsonProperty(\"regDate\") String regDate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"        this.skinType \u003d skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"        this.hairType \u003d hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"        this.regDate \u003d regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        if (staffs !\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"            this.staffs.addAll(staffs);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        if (services !\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"            this.services.addAll(services);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        if (allergies !\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"            this.allergies.addAll(allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        skinType \u003d source.getSkinType().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"        hairType \u003d source.getHairType().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        birthDate \u003d source.getBirthdate().toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"        regDate \u003d source.getRegDate().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        staffs.addAll(source.getStaffs().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        services.addAll(source.getServices().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        allergies.addAll(source.getAllergies().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"    Set\u003cTag\u003e getModelStaffs() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        final List\u003cTag\u003e staffTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"        for (JsonAdaptedTag staff : staffs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"            staffTags.add(staff.toModelType());","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"        return new HashSet\u003c\u003e(staffTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"    Set\u003cTag\u003e getModelServices() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"        final List\u003cTag\u003e serviceTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"        for (JsonAdaptedTag service : services) {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"            serviceTags.add(service.toModelType());","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"        return new HashSet\u003c\u003e(serviceTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"    Set\u003cTag\u003e getModelAllergies() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"        final List\u003cTag\u003e allergyTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"        for (JsonAdaptedTag allergy : allergies) {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"            allergyTags.add(allergy.toModelType());","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"        return new HashSet\u003c\u003e(allergyTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"    Name getModelName() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"        return new Name(name);","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"    Phone getModelPhone() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        return new Phone(phone);","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"    Email getModelEmail() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"        return new Email(email);","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"    Address getModelAddress() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"        return new Address(address);","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"    SkinType getModelSkinType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"        if (skinType \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"                    SkinType.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"        if (!SkinType.isValidSkinType(skinType)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(SkinType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"        return new SkinType(skinType);","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"    HairType getModelHairType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"        if (hairType \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"                    HairType.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"        if (!HairType.isValidHairType(hairType)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(HairType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"        return new HairType(hairType);","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"isabelteo"},"content":"    Birthdate getModelBirthdate() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"isabelteo"},"content":"        if (birthDate \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"isabelteo"},"content":"                    Birthdate.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"isabelteo"},"content":"        if (!Birthdate.isValidBirthdate(birthDate)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"        return new Birthdate(birthDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"    RegistrationDate getModelRegistrationDate() throws IllegalValueException {","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"        if (regDate \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"isabelteo"},"content":"                    RegistrationDate.class.getSimpleName()));","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"isabelteo"},"content":"        if (!RegistrationDate.isValidRegistrationDate(regDate)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"isabelteo"},"content":"            throw new IllegalValueException(RegistrationDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"isabelteo"},"content":"        return new RegistrationDate(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"hanhuiice"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":211,"author":{"gitId":"isabelteo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2022-03-11"},{"lineNumber":212,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":213,"author":{"gitId":"isabelteo"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":214,"author":{"gitId":"isabelteo"},"content":"        final Set\u003cTag\u003e modelStaffs \u003d this.getModelStaffs();","lastModifiedDate":"2022-03-11"},{"lineNumber":215,"author":{"gitId":"isabelteo"},"content":"        final Set\u003cTag\u003e modelServices \u003d this.getModelServices();","lastModifiedDate":"2022-03-11"},{"lineNumber":216,"author":{"gitId":"isabelteo"},"content":"        final Set\u003cTag\u003e modelAllergies \u003d this.getModelAllergies();","lastModifiedDate":"2022-03-11"},{"lineNumber":217,"author":{"gitId":"isabelteo"},"content":"        final Name modelName \u003d this.getModelName();","lastModifiedDate":"2022-03-11"},{"lineNumber":218,"author":{"gitId":"isabelteo"},"content":"        final Phone modelPhone \u003d this.getModelPhone();","lastModifiedDate":"2022-03-11"},{"lineNumber":219,"author":{"gitId":"isabelteo"},"content":"        final Email modelEmail \u003d this.getModelEmail();","lastModifiedDate":"2022-03-11"},{"lineNumber":220,"author":{"gitId":"isabelteo"},"content":"        final Address modelAddress \u003d this.getModelAddress();","lastModifiedDate":"2022-03-11"},{"lineNumber":221,"author":{"gitId":"isabelteo"},"content":"        final SkinType modelSkinType \u003d this.getModelSkinType();","lastModifiedDate":"2022-03-11"},{"lineNumber":222,"author":{"gitId":"isabelteo"},"content":"        final HairType modelHairType \u003d this.getModelHairType();","lastModifiedDate":"2022-03-11"},{"lineNumber":223,"author":{"gitId":"isabelteo"},"content":"        final Birthdate modelBirthdate \u003d this.getModelBirthdate();","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"isabelteo"},"content":"        final RegistrationDate modelRegistrationDate \u003d this.getModelRegistrationDate();","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"isabelteo"},"content":"        return new Customer(modelName, modelPhone, modelEmail,","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"isabelteo"},"content":"                modelAddress, modelSkinType, modelHairType,","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"isabelteo"},"content":"                modelStaffs, modelServices, modelAllergies, modelBirthdate, modelRegistrationDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"hanhuiice":3,"flairekq":1,"isabelteo":226}},{"path":"src/main/java/seedu/trackbeau/storage/JsonAdaptedService.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Price;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.ServiceName;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" * Jackson-friendly version of {@link Service}.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"class JsonAdaptedService {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Service\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    private final String name;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    private final Double price;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"    private final Integer duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     * Constructs a {@code JsonAdaptedService} with the given service details.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"    public JsonAdaptedService(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"                              @JsonProperty(\"price\") Double price,","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"                              @JsonProperty(\"duration\") Integer duration) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"     * Converts a given {@code Service} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    public JsonAdaptedService(Service source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        price \u003d source.getPrice().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        duration \u003d source.getDuration().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    ServiceName getModelName() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"                ServiceName.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"        if (!ServiceName.isValidName(name)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"            throw new IllegalValueException(ServiceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"        return new ServiceName(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"    Price getModelPrice() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        return new Price(price);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"    Duration getModelDuration() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"flairekq"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Duration.class.getSimpleName()));","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"        return new Duration(duration);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"     * Converts this Jackson-friendly adapted service object into the model\u0027s {@code Service} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"    public Service toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"        final ServiceName modelName \u003d this.getModelName();","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"        final Price modelPrice \u003d this.getModelPrice();","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"        final Duration modelDuration \u003d this.getModelDuration();","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"        return new Service(modelName, modelPrice, modelDuration);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":85}},{"path":"src/main/java/seedu/trackbeau/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hanhuiice":3,"-":45}},{"path":"src/main/java/seedu/trackbeau/storage/JsonSerializableTrackBeau.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":" * An Immutable TrackBeau that is serializable to JSON format.","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"@JsonRootName(value \u003d \"trackBeau\")","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"class JsonSerializableTrackBeau {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    public static final String MESSAGE_DUPLICATE_SERVICE \u003d \"Services list contains duplicate service(s).\";","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public static final String MESSAGE_DUPLICATE_BOOKING \u003d \"Bookings list contains duplicate booking(s).\";","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    private final List\u003cJsonAdaptedService\u003e services \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    private final List\u003cJsonAdaptedBooking\u003e bookings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"     * Constructs a {@code JsonSerializableTrackBeau} with the given customers, services and bookings.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    public JsonSerializableTrackBeau(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"                                     @JsonProperty(\"services\") List\u003cJsonAdaptedService\u003e services,","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"                                     @JsonProperty(\"bookings\") List\u003cJsonAdaptedBooking\u003e bookings) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"        this.services.addAll(services);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        this.bookings.addAll(bookings);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"     * Converts a given {@code ReadOnlyTrackBeau} into this class for Jackson use.","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTrackBeau}.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    public JsonSerializableTrackBeau(ReadOnlyTrackBeau source) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"        List\u003cCustomer\u003e customerList \u003d source.getCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"        List\u003cService\u003e serviceList \u003d source.getServiceList();","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"kashing555"},"content":"        List\u003cBooking\u003e bookingList \u003d source.getBookingList();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"kashing555"},"content":"        customers.addAll(customerList.stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"kashing555"},"content":"        services.addAll(serviceList.stream().map(JsonAdaptedService::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"kashing555"},"content":"        for (Booking booking : bookingList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"            Integer customerIndex \u003d source.getCustomerIndex(booking.getCustomer());","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"            Integer serviceIndex \u003d source.getServiceIndex(booking.getService());","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"kashing555"},"content":"            if (customerIndex \u003e\u003d 0 || serviceIndex \u003e\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"                bookings.add(new JsonAdaptedBooking(booking, customerIndex, serviceIndex));","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"     * Converts this trackBeau into the model\u0027s {@code TrackBeau} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    public TrackBeau toModelType() throws IllegalValueException {","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        TrackBeau trackBeau \u003d new TrackBeau();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"            if (trackBeau.hasCustomer(customer)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"            trackBeau.addCustomer(customer);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"        for (JsonAdaptedService jsonAdaptedService : services) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"            Service service \u003d jsonAdaptedService.toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"            if (trackBeau.hasService(service)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SERVICE);","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"            trackBeau.addService(service);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"        for (JsonAdaptedBooking jsonAdaptedBooking : bookings) {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"kashing555"},"content":"            Booking booking \u003d jsonAdaptedBooking.toModelType(trackBeau);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"            if (trackBeau.hasBooking(booking)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_BOOKING);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"            trackBeau.addBooking(booking);","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        return trackBeau;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hanhuiice":30,"kashing555":14,"flairekq":13,"-":33,"isabelteo":7}},{"path":"src/main/java/seedu/trackbeau/storage/JsonTrackBeauStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.FileUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.JsonUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":" * A class to access TrackBeau data stored as a json file on the hard disk.","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"public class JsonTrackBeauStorage implements TrackBeauStorage {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTrackBeauStorage.class);","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public JsonTrackBeauStorage(Path filePath) {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    public Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau() throws DataConversionException {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        return readTrackBeau(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"     * Similar to {@link #readTrackBeau()}.","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    public Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"        Optional\u003cJsonSerializableTrackBeau\u003e jsonTrackBeau \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                filePath, JsonSerializableTrackBeau.class);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        if (!jsonTrackBeau.isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"            return Optional.of(jsonTrackBeau.get().toModelType());","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"    public void saveTrackBeau(ReadOnlyTrackBeau trackBeau) throws IOException {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        saveTrackBeau(trackBeau, filePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"     * Similar to {@link #saveTrackBeau(ReadOnlyTrackBeau)}.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"    public void saveTrackBeau(ReadOnlyTrackBeau trackBeau, Path filePath) throws IOException {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        requireNonNull(trackBeau);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTrackBeau(trackBeau), filePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hanhuiice":16,"-":54,"isabelteo":10}},{"path":"src/main/java/seedu/trackbeau/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.JsonUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hanhuiice":5,"-":42}},{"path":"src/main/java/seedu/trackbeau/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":" * API of the Storage component","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"public interface Storage extends TrackBeauStorage, UserPrefsStorage {","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    Path getTrackBeauFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    void saveTrackBeau(ReadOnlyTrackBeau trackBeau) throws IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":30,"isabelteo":2}},{"path":"src/main/java/seedu/trackbeau/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":" * Manages storage of TrackBeau data in local storage.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    private TrackBeauStorage trackBeauStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code StorageManager} with the given {@code TrackBeauStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public StorageManager(TrackBeauStorage trackBeauStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        this.trackBeauStorage \u003d trackBeauStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TrackBeau methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return trackBeauStorage.getTrackBeauFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"    public Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        return readTrackBeau(trackBeauStorage.getTrackBeauFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"    public Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        return trackBeauStorage.readTrackBeau(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"    public void saveTrackBeau(ReadOnlyTrackBeau trackBeau) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"        saveTrackBeau(trackBeau, trackBeauStorage.getTrackBeauFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"    public void saveTrackBeau(ReadOnlyTrackBeau trackBeau, Path filePath) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        trackBeauStorage.saveTrackBeau(trackBeau, filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":68,"isabelteo":10}},{"path":"src/main/java/seedu/trackbeau/storage/TrackBeauStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":" * Represents a storage for {@link TrackBeau}.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"public interface TrackBeauStorage {","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    Path getTrackBeauFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"     * Returns TrackBeau data as a {@link ReadOnlyTrackBeau}.","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     * @see #getTrackBeauFilePath()","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"     * Saves the given {@link ReadOnlyTrackBeau} to the storage.","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     * @param trackBeau cannot be null.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    void saveTrackBeau(ReadOnlyTrackBeau trackBeau) throws IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"     * @see #saveTrackBeau(ReadOnlyTrackBeau)","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    void saveTrackBeau(ReadOnlyTrackBeau trackBeau, Path filePath) throws IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":38,"isabelteo":8}},{"path":"src/main/java/seedu/trackbeau/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":" * Represents a storage for {@link seedu.trackbeau.model.UserPrefs}.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"     * Saves the given {@link seedu.trackbeau.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hanhuiice":6,"-":30}},{"path":"src/main/java/seedu/trackbeau/ui/BookingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.booking.AddBookingCommandParser.EMPTY_FEEDBACK_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":" * An UI component that displays information of a {@code Booking}.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"public class BookingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    private static final String FXML \u003d \"BookingListCard.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on addressbook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    public final Booking booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    public final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    private Label name;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    private Label id;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    private Label phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    private Label service;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    private Label startTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"    private Label endTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kashing555"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"    private Label feedback;","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code BookingCard} with the given {@code Booking} and index to display.","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"    public BookingCard(Booking booking, int displayedIndex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"        super(FXML);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"        this.booking \u003d booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"        name.setText(booking.getCustomerName().fullName);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"        phone.setText(\"Phone Number: \" + booking.getCustomerPhone().value);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        service.setText(\"Service: \" + booking.getServiceName().fullName);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"kashing555"},"content":"        startTime.setText(\"Appointment Time: \" + booking.getBookingDateTime().value.format(formatter));","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kashing555"},"content":"        endTime.setText(\"End Time: \" + booking.getBookingEndTime().format(formatter));","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        if (!booking.getFeedback().feedback.equals(EMPTY_FEEDBACK_TYPE)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"            feedback.setText(\"Feedback: \" + booking.getFeedback().feedback);","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kashing555"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kashing555"},"content":"            feedback.setManaged(false);","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        if (!(other instanceof BookingCard)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        BookingCard card \u003d (BookingCard) other;","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 booking.equals(card.booking);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":74,"kashing555":13}},{"path":"src/main/java/seedu/trackbeau/ui/BookingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"public class BookingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    private static final String FXML \u003d \"BookingListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookingListPanel.class);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    private ListView\u003cBooking\u003e bookingListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code BookingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    public BookingListPanel(ObservableList\u003cBooking\u003e bookingList) {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        bookingListView.setItems(bookingList);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        bookingListView.setCellFactory(listView -\u003e new BookingListViewCell());","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Booking} using a {@code BookingCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    class BookingListViewCell extends ListCell\u003cBooking\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        protected void updateItem(Booking booking, boolean empty) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"            super.updateItem(booking, empty);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"            if (empty || booking \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"                setText(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(new BookingCard(booking, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"hanhuiice":31,"flairekq":16}},{"path":"src/main/java/seedu/trackbeau/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"         * @see seedu.trackbeau.logic.Logic#execute(String)","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"hanhuiice":5,"-":80}},{"path":"src/main/java/seedu/trackbeau/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_DATE;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_HAIR_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_SKIN_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Addressbook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    public final Customer customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    private Label skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    private Label hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    private Label birthDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    private Label regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    private FlowPane staffs;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    private FlowPane services;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"    private FlowPane allergies;","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code CustomerCard} with the given {@code Customer} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        regDate.setText(\"Registration Date: \" + customer.getRegDate().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        if (!customer.getSkinType().value.equals(EMPTY_SKIN_TYPE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"            skinType.setText(\"Skin Type: \" + customer.getSkinType().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"            skinType.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        if (!customer.getHairType().value.equals(EMPTY_HAIR_TYPE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"            hairType.setText(\"Hair Type: \" + customer.getHairType().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"            hairType.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        if (!customer.getBirthdate().toString().equals(EMPTY_DATE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"            birthDate.setText(\"Birthday: \" + customer.getBirthdate().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"            birthDate.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        customer.getServices().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                .forEach(tag -\u003e services.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        customer.getStaffs().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"                .forEach(tag -\u003e staffs.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"        customer.getAllergies().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"                .forEach(tag -\u003e allergies.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hanhuiice":16,"kashing555":3,"flairekq":1,"-":57,"isabelteo":42}},{"path":"src/main/java/seedu/trackbeau/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        super(FXML);","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(null);","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"                setText(null);","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"            } else {","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":49}},{"path":"src/main/java/seedu/trackbeau/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kashing555"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"        \"https://ay2122s2-cs2103-f11-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":3,"kashing555":1,"-":99}},{"path":"src/main/java/seedu/trackbeau/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_HAIR_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_SKIN_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.Logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.ui.charts.MonthlyCustomerChartWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.ui.charts.PieChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    private static final int MAX_POINTS \u003d 10;","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    private PieChartWindow staffChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"    private PieChartWindow serviceChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"    private PieChartWindow allergyChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"    private PieChartWindow skinChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"    private PieChartWindow hairChartWindow;","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"    private MonthlyCustomerChartWindow monthlyCustomerChartWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"flairekq"},"content":"    private ServiceListPanel serviceListPanel;","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"    private BookingListPanel bookingListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"    private SchedulePanel schedulePanel;","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    private Panel currPanel;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"    private StackPane detailsPanelPlaceholder;","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"    private Label customersLabel;","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"    private Label servicesLabel;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"flairekq"},"content":"    private Label bookingsLabel;","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"    private Label scheduleLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"flairekq"},"content":"    private ArrayList\u003cLabel\u003e labels;","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"        staffChartWindow \u003d new PieChartWindow(\"Staff Preference Chart\",","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"                \"Most Popular Staff Amongst Customers\", \"preferred staff\");","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"        serviceChartWindow \u003d new PieChartWindow(\"Service Preference Chart\",","lastModifiedDate":"2022-04-04"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"                \"Most In-Demand Services Amongst Customers\", \"preferred services\");","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"        allergyChartWindow \u003d new PieChartWindow(\"Allergy Preference Chart\",","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"                \"Common Allergies Amongst Customers\", \"allergy\");","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        skinChartWindow \u003d new PieChartWindow(\"Skin Type Chart\",","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"                \"Common Skin Types Amongst Customers\", \"skin type\");","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        hairChartWindow \u003d new PieChartWindow(\"Hair Type Chart\",","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"                \"Common Hair Types Amongst Customers\", \"hair type\");","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        int maxMonthlyCustomerCount \u003d this","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"            .getMonthlyCustomerMaxCount(this.getMonthlyCustomerMap());","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"        int totalCustomerCount \u003d this.getCustomerCount();","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"        monthlyCustomerChartWindow \u003d new MonthlyCustomerChartWindow(maxMonthlyCustomerCount, totalCustomerCount);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"flairekq"},"content":"        this.labels \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"flairekq"},"content":"        this.labels.add(customersLabel);","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"        this.labels.add(servicesLabel);","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"flairekq"},"content":"        this.labels.add(bookingsLabel);","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"        this.labels.add(scheduleLabel);","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"        customersLabel.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"        for (Label l : this.labels) {","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"            setLabelOnMouseClickEvent(l);","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // @@author flairekq-reused","lastModifiedDate":"2022-04-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    // Reused from https://stackoverflow.com/questions/49097747/javafx-determining-which-label-has-been-clicked","lastModifiedDate":"2022-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-04-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void setLabelOnMouseClickEvent(Label label) {","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        label.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2022-04-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            for (Label l : labels) {","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                l.getStyleClass().remove(\"selected\");","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            label.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            switchPanel(stringToPanel(label.getId()));","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private Panel stringToPanel(String id) {","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        switch (id) {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        case \"customersLabel\":","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Panel.CUSTOMER_PANEL;","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        case \"servicesLabel\":","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Panel.SERVICE_PANEL;","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        case \"bookingsLabel\":","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Panel.BOOKING_PANEL;","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        case \"scheduleLabel\":","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Panel.SCHEDULE_PANEL;","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Panel.NO_CHANGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void switchPanel(Panel panel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        detailsPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        for (Label l : labels) {","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            l.getStyleClass().remove(\"selected\");","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        switch (panel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        case CUSTOMER_PANEL:","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            customersLabel.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            detailsPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        case SERVICE_PANEL:","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            servicesLabel.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            serviceListPanel \u003d new ServiceListPanel(logic.getFilteredServiceList());","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            detailsPanelPlaceholder.getChildren().add(serviceListPanel.getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        case BOOKING_PANEL:","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            bookingsLabel.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            bookingListPanel \u003d new BookingListPanel(logic.getFilteredBookingList());","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            detailsPanelPlaceholder.getChildren().add(bookingListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        case SCHEDULE_PANEL:","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            scheduleLabel.getStyleClass().add(\"selected\");","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            schedulePanel \u003d new SchedulePanel(logic.getFilteredBookingList(), logic.getSelectedDate());","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            detailsPanelPlaceholder.getChildren().add(schedulePanel.getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            // nothing to add to details panel placeholder","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        detailsPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        currPanel \u003d Panel.CUSTOMER_PANEL;","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTrackBeauFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * Plots windows that contains pie charts.","lastModifiedDate":"2022-04-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void plotPieChart(PieChartWindow window, HashMap infoMap) {","lastModifiedDate":"2022-04-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        addPieChartData(infoMap, window.getPieChart());","lastModifiedDate":"2022-04-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        if (!window.isShowing()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            window.show();","lastModifiedDate":"2022-04-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            window.focus();","lastModifiedDate":"2022-04-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Opens the staff chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-04-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-04-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void plotStaffChart() {","lastModifiedDate":"2022-04-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        plotPieChart(staffChartWindow, getTagMap(\"getStaffs\"));","lastModifiedDate":"2022-04-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * Opens the service chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    public void plotServiceChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        plotPieChart(serviceChartWindow, getTagMap(\"getServices\"));","lastModifiedDate":"2022-04-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * Opens the allergy chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public void plotAllergyChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        plotPieChart(allergyChartWindow, getTagMap(\"getAllergies\"));","lastModifiedDate":"2022-04-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * Opens the skin type chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void plotSkinChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        plotPieChart(skinChartWindow, getTypeMap(\"getSkinType\", EMPTY_SKIN_TYPE));","lastModifiedDate":"2022-04-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * Opens the hair type chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void plotHairChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        plotPieChart(hairChartWindow, getTypeMap(\"getHairType\", EMPTY_HAIR_TYPE));","lastModifiedDate":"2022-04-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * Opens the monthly customer chart window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public void plotMonthlyCustomerChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, Integer\u003e monthlyCustomerMap \u003d this.getMonthlyCustomerMap();","lastModifiedDate":"2022-03-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        int totalCustomerCount \u003d this.getCustomerCount();","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        int maxMonthlyCustomerCount \u003d this","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            .getMonthlyCustomerMaxCount(monthlyCustomerMap);","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        //update the axis limits manually","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        monthlyCustomerChartWindow \u003d new MonthlyCustomerChartWindow(maxMonthlyCustomerCount,","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            totalCustomerCount);","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        addMonthlyCustomerChartData(monthlyCustomerMap,","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            monthlyCustomerChartWindow.getLineChart(), \"Customers Gained This Year\");","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        if (!monthlyCustomerChartWindow.isShowing()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            monthlyCustomerChartWindow.show();","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            monthlyCustomerChartWindow.focus();","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * Adds data to the pie charts in a specific window.","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    void addPieChartData(HashMap\u003cString, Integer\u003e hm, PieChart pieChart) {","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        pieChart.getData().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        int dataCount \u003d 0; //add only top 10 most count to prevent cluttering","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        Map\u003cString, Integer\u003e map \u003d sortByValue(hm);","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        for (String key : map.keySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            if (dataCount \u003d\u003d MAX_POINTS) {","lastModifiedDate":"2022-04-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            String detail \u003d key;","lastModifiedDate":"2022-03-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            Integer count \u003d map.get(key);","lastModifiedDate":"2022-03-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            String dataLabel \u003d String.format(\"%s: %d\", detail, count);","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            pieChart.getData()","lastModifiedDate":"2022-03-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                .add(new PieChart.Data(dataLabel, count));","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            dataCount++;","lastModifiedDate":"2022-03-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        //.layout() prevents labels from moving to top left after opening chart a few times","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        pieChart.layout();","lastModifiedDate":"2022-03-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * Adds data to a line chart in a specific window.","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    void addMonthlyCustomerChartData(HashMap\u003cInteger, Integer\u003e hm, LineChart lineChart, String chartName) {","lastModifiedDate":"2022-03-30"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        lineChart.getData().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        XYChart.Series series \u003d new XYChart.Series();","lastModifiedDate":"2022-03-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        for (int key : hm.keySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            int month \u003d key;","lastModifiedDate":"2022-03-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            int count \u003d hm.get(key);","lastModifiedDate":"2022-03-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            series.getData().add(new XYChart.Data(month, count));","lastModifiedDate":"2022-03-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        series.setName(chartName);","lastModifiedDate":"2022-03-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        lineChart.getData().add(series);","lastModifiedDate":"2022-03-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        //.layout() prevents labels from moving to top left after opening chart a few times","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        lineChart.layout();","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * Get maximum customer count gained a month in the current year to bound y-axis of chart.","lastModifiedDate":"2022-03-30"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    int getMonthlyCustomerMaxCount(HashMap\u003cInteger, Integer\u003e hm) {","lastModifiedDate":"2022-03-30"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        int maxCount \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        for (int key : hm.keySet()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            int count \u003d hm.get(key);","lastModifiedDate":"2022-03-30"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            if (count \u003e maxCount) {","lastModifiedDate":"2022-03-30"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                maxCount \u003d count;","lastModifiedDate":"2022-03-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        return maxCount;","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"     * Get total customer count in TrackBeau.","lastModifiedDate":"2022-03-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    int getCustomerCount() {","lastModifiedDate":"2022-03-30"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        ObservableList\u003cCustomer\u003e customerList \u003d logic.getFilteredCustomerList();","lastModifiedDate":"2022-03-30"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        for (Customer customer : customerList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            count++;","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        return count;","lastModifiedDate":"2022-03-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":426,"author":{"gitId":"-"},"content":"     * Returns a hashmap for count of allergies, preferred services and staffs of customers, which are stored as tags.","lastModifiedDate":"2022-04-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    HashMap\u003cString, Integer\u003e getTagMap(String methodName) {","lastModifiedDate":"2022-04-04"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-04-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            HashMap\u003cString, Integer\u003e map \u003d new HashMap\u003cString, Integer\u003e();","lastModifiedDate":"2022-04-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            ObservableList\u003cCustomer\u003e customerList \u003d logic.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            Class\u003c?\u003e customerClass \u003d Class.forName(\"seedu.trackbeau.model.customer.Customer\");","lastModifiedDate":"2022-04-04"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            Method method \u003d customerClass.getDeclaredMethod(methodName);","lastModifiedDate":"2022-04-04"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            for (Customer customer : customerList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                Set\u003cTag\u003e tagList \u003d (Set\u003cTag\u003e) method.invoke(customer);","lastModifiedDate":"2022-04-04"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                for (Tag tag : tagList) {","lastModifiedDate":"2022-04-04"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                    String key \u003d tag.tagName.toUpperCase(); //key is the staff name","lastModifiedDate":"2022-03-29"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                    if (map.containsKey(key)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                        map.put(key, map.get(key) + 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                    } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                        map.put(key, 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-04-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            return map;","lastModifiedDate":"2022-04-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        } catch (NoSuchMethodException","lastModifiedDate":"2022-04-04"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                | ClassNotFoundException | InvocationTargetException","lastModifiedDate":"2022-04-04"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                | IllegalAccessException e) {","lastModifiedDate":"2022-04-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid tag map\");","lastModifiedDate":"2022-04-04"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-04-04"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            return new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-04"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":456,"author":{"gitId":"-"},"content":"     * Returns a hashmap for count of different skin type and hair type information of customer.","lastModifiedDate":"2022-04-04"},{"lineNumber":457,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    HashMap\u003cString, Integer\u003e getTypeMap(String methodName, String emptyType) {","lastModifiedDate":"2022-04-04"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-04-04"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            HashMap\u003cString, Integer\u003e map \u003d new HashMap\u003cString, Integer\u003e();","lastModifiedDate":"2022-04-04"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            ObservableList\u003cCustomer\u003e customerList \u003d logic.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            Class\u003c?\u003e customerClass \u003d Class.forName(\"seedu.trackbeau.model.customer.Customer\");","lastModifiedDate":"2022-04-04"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            Method method \u003d customerClass.getDeclaredMethod(methodName);","lastModifiedDate":"2022-04-04"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            for (Customer customer : customerList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":465,"author":{"gitId":"-"},"content":"                String key \u003d method.invoke(customer).toString().toUpperCase();","lastModifiedDate":"2022-04-04"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                if (!key.equals(emptyType.toUpperCase())) {","lastModifiedDate":"2022-04-04"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                    if (map.containsKey(key)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                        map.put(key, map.get(key) + 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                    } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                        map.put(key, 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-03-29"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            return map;","lastModifiedDate":"2022-04-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        } catch (NoSuchMethodException","lastModifiedDate":"2022-04-04"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                | ClassNotFoundException | InvocationTargetException","lastModifiedDate":"2022-04-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                | IllegalAccessException e) {","lastModifiedDate":"2022-04-04"},{"lineNumber":478,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid type map\");","lastModifiedDate":"2022-04-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-04-04"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            return new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-04"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":485,"author":{"gitId":"-"},"content":"     * Returns a hashmap with the month as the key and count as the value.","lastModifiedDate":"2022-03-29"},{"lineNumber":486,"author":{"gitId":"-"},"content":"     * Count refers to the number of customers who have registered on that month this year.","lastModifiedDate":"2022-03-29"},{"lineNumber":487,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"     * @return HashMap","lastModifiedDate":"2022-03-29"},{"lineNumber":489,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    HashMap\u003cInteger, Integer\u003e getMonthlyCustomerMap() {","lastModifiedDate":"2022-03-29"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, Integer\u003e monthlyCustomerMap \u003d new HashMap\u003cInteger, Integer\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        ObservableList\u003cCustomer\u003e customerList \u003d logic.getFilteredCustomerList();","lastModifiedDate":"2022-03-29"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-29"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        int currentYear \u003d currentDate.getYear();","lastModifiedDate":"2022-03-29"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        for (Customer customer : customerList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            Integer key \u003d customer.getRegDate().value.getMonthValue();","lastModifiedDate":"2022-03-29"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            if (customer.getRegDate().value.getYear() \u003d\u003d currentYear) {","lastModifiedDate":"2022-03-29"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                if (monthlyCustomerMap.containsKey(key)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                    monthlyCustomerMap.put(key, monthlyCustomerMap.get(key) + 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                    monthlyCustomerMap.put(key, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        return monthlyCustomerMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":510,"author":{"gitId":"-"},"content":"     * Returns a sorted HashMap by value.","lastModifiedDate":"2022-03-29"},{"lineNumber":511,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    //function is taken from https://www.geeksforgeeks.org/sorting-a-hashmap-according-to-values/","lastModifiedDate":"2022-03-29"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    private HashMap\u003cString, Integer\u003e sortByValue(HashMap\u003cString, Integer\u003e hm) {","lastModifiedDate":"2022-03-29"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        // Create a list from elements of HashMap","lastModifiedDate":"2022-03-29"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        List\u003cMap.Entry\u003cString, Integer\u003e\u003e list \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            new LinkedList\u003cMap.Entry\u003cString, Integer\u003e\u003e(hm.entrySet());","lastModifiedDate":"2022-03-29"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        // Sort the list","lastModifiedDate":"2022-03-29"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        Collections.sort(list, new Comparator\u003cMap.Entry\u003cString, Integer\u003e\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            public int compare(Map.Entry\u003cString, Integer\u003e o1,","lastModifiedDate":"2022-03-29"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                               Map.Entry\u003cString, Integer\u003e o2) {","lastModifiedDate":"2022-03-29"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                return (o1.getValue()).compareTo(o2.getValue());","lastModifiedDate":"2022-03-29"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-03-29"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        // put data from sorted list to hashmap","lastModifiedDate":"2022-03-29"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        HashMap\u003cString, Integer\u003e temp \u003d new LinkedHashMap\u003cString, Integer\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, Integer\u003e aa : list) {","lastModifiedDate":"2022-03-29"},{"lineNumber":529,"author":{"gitId":"-"},"content":"            temp.put(aa.getKey(), aa.getValue());","lastModifiedDate":"2022-03-29"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        return temp;","lastModifiedDate":"2022-03-29"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":539,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":540,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        staffChartWindow.hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        serviceChartWindow.hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        allergyChartWindow.hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        skinChartWindow.hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        hairChartWindow.hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        monthlyCustomerChartWindow.hide();","lastModifiedDate":"2022-03-30"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    public CustomerListPanel getCustomerListPanel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        return customerListPanel;","lastModifiedDate":"2022-02-25"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":561,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":563,"author":{"gitId":"-"},"content":"     * @see seedu.trackbeau.logic.Logic#execute(String)","lastModifiedDate":"2022-02-25"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":572,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":575,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":577,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotStaffChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                plotStaffChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotServiceChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                plotServiceChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":587,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotAllergyChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":588,"author":{"gitId":"-"},"content":"                plotAllergyChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":589,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":591,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotSkinChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":592,"author":{"gitId":"-"},"content":"                plotSkinChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotMonthlyCustomerChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"                plotMonthlyCustomerChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            if (commandResult.isPlotHairChart()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":600,"author":{"gitId":"-"},"content":"                plotHairChart();","lastModifiedDate":"2022-03-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            if (commandResult.getPanel() !\u003d Panel.NO_CHANGE) {","lastModifiedDate":"2022-03-31"},{"lineNumber":604,"author":{"gitId":"-"},"content":"                switchPanel(commandResult.getPanel());","lastModifiedDate":"2022-03-31"},{"lineNumber":605,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":610,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":614,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":15,"kashing555":2,"flairekq":28,"-":529,"isabelteo":40}},{"path":"src/main/java/seedu/trackbeau/ui/Panel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"public enum Panel {","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"    NO_CHANGE, CUSTOMER_PANEL, SERVICE_PANEL, BOOKING_PANEL, SCHEDULE_PANEL","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"hanhuiice":5}},{"path":"src/main/java/seedu/trackbeau/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":1,"-":27}},{"path":"src/main/java/seedu/trackbeau/ui/ScheduleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":" * Panel containing the list of bookings.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"public class ScheduleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    private static final String FXML \u003d \"ScheduleListPanel.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd-MM\");","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleListPanel.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"    private ListView\u003cBooking\u003e bookingListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    private Label displayDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    private Label bookingCount;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code BookingListPanel} with the given {@code ObservableList} and {@code LocalDate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    public ScheduleListPanel(ObservableList\u003cBooking\u003e bookingList, LocalDate date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        super(FXML);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        bookingListView.setItems(bookingList);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        bookingListView.setCellFactory(listView -\u003e new BookingListViewCell());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        displayDate.setText(formatter.format(date));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"        if (isWeekend(date)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"            displayDate.getStyleClass().add(\"weekendLabel\");","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"            displayDate.getStyleClass().add(\"weekdayLabel\");","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        bookingCount.setText(bookingList.size() + \" booking(s)\");","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"    private boolean isWeekend(LocalDate date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        return date.getDayOfWeek() \u003d\u003d DayOfWeek.SATURDAY || date.getDayOfWeek() \u003d\u003d DayOfWeek.SUNDAY;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Booking} using a {@code BookingCard}.","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"    class BookingListViewCell extends ListCell\u003cBooking\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"        protected void updateItem(Booking booking, boolean empty) {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"            super.updateItem(booking, empty);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"            if (empty || booking \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"                setText(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"            } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"                setGraphic(new BookingCard(booking, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":72}},{"path":"src/main/java/seedu/trackbeau/ui/SchedulePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"public class SchedulePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"    private static final String FXML \u003d \"Schedule.fxml\";","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"    private static final int DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SchedulePanel.class);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"    private LocalDate startOfWeek;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"    private HBox weekView;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code Schedule} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"    public SchedulePanel(ObservableList\u003cBooking\u003e bookingList, LocalDate date) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        super(FXML);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"        this.startOfWeek \u003d date;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        while (startOfWeek.getDayOfWeek() !\u003d DayOfWeek.MONDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"            this.startOfWeek \u003d startOfWeek.minusDays(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_WEEK; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"            weekView.getChildren().add(dayView(bookingList, startOfWeek.plusDays(i)).getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    private ScheduleListPanel dayView(ObservableList\u003cBooking\u003e bookingList, LocalDate date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        return new ScheduleListPanel(bookingList.filtered(booking -\u003e isSameDate(booking, date)).sorted(), date);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    private boolean isSameDate(Booking booking, LocalDate date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        return booking.getBookingDateTime().value.toLocalDate().equals(date);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"hanhuiice":45}},{"path":"src/main/java/seedu/trackbeau/ui/ServiceCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"public class ServiceCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    private static final String FXML \u003d \"ServiceListCard.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Addressbook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"    public final Service service;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    private Label id;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    private Label name;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"    private Label price;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"    private Label duration;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"     * Creates a {@code ServiceCard} with the given {@code Service} and index to display.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"    public ServiceCard(Service service, int displayedIndex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"        super(FXML);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        this.service \u003d service;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        name.setText(service.getName().fullName);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // @@author flairekq-reused","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/2379221/how-to-format-decimals-in-a-currency-format","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Locale locale \u003d new Locale(\"en\", \"SG\");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        NumberFormat formatter \u003d NumberFormat.getCurrencyInstance(locale);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String priceString \u003d formatter.format(service.getPrice().value);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        price.setText(\"Price: \" + priceString);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int hours \u003d service.getDuration().value / 60;","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int minutes \u003d service.getDuration().value % 60;","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String displayDuration \u003d \"Duration: \";","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (hours \u003e 0) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            displayDuration +\u003d (hours + \"hr\");","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (minutes \u003e 0) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            displayDuration +\u003d (\" \" + minutes + \"mins\");","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        duration.setText(displayDuration);","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof ServiceCard)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ServiceCard card \u003d (ServiceCard) other;","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u0026\u0026 service.equals(card.service);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":49,"-":38}},{"path":"src/main/java/seedu/trackbeau/ui/ServiceListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"public class ServiceListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    private static final String FXML \u003d \"ServiceListPanel.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ServiceListPanel.class);","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"    private ListView\u003cService\u003e serviceListView;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    public ServiceListPanel(ObservableList\u003cService\u003e serviceList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"        super(FXML);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"        serviceListView.setItems(serviceList);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"        serviceListView.setCellFactory(listView -\u003e new ServiceListViewCell());","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Service} using a {@code ServiceCard}.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    class ServiceListViewCell extends ListCell\u003cService\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        protected void updateItem(Service service, boolean empty) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"            super.updateItem(service, empty);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"            if (empty || service \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"                setText(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"                setGraphic(new ServiceCard(service, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":49}},{"path":"src/main/java/seedu/trackbeau/ui/StatisticsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"public class StatisticsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    private static final String FXML \u003d \"StatisticsPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    private ListView\u003cCustomer\u003e statisticsView;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    public StatisticsPanel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"flairekq":17}},{"path":"src/main/java/seedu/trackbeau/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":27}},{"path":"src/main/java/seedu/trackbeau/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hanhuiice":1,"-":12}},{"path":"src/main/java/seedu/trackbeau/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.MainApp;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.util.StringUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.Logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/trackbeau_logo.png\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":5,"-":82,"isabelteo":1}},{"path":"src/main/java/seedu/trackbeau/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.MainApp;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hanhuiice":2,"-":86}},{"path":"src/main/java/seedu/trackbeau/ui/charts/MonthlyCustomerChartWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.ui.charts;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.ui.UiPart;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"public class MonthlyCustomerChartWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MonthlyCustomerChartWindow.class);","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    //FXML code is referenced from https://github.com/AY2021S1-CS2103T-T09-2 CalorieGraph.fxml","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    private static final String FXML \u003d \"LineChartWindow.fxml\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    private LineChart lineChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     * Creates a new Monthly Customer Chart Window.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @param root Stage to use as the root of the Monthly Customer Chart Window.","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    public MonthlyCustomerChartWindow(Stage root, int maxMonthlyCustomerCount,","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"                                      int totalCustomerCount) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        //code referenced from https://docs.oracle.com/javafx/2/charts/line-chart.htm","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        root.setTitle(\"Customer Gained This Year By Month\");","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        root.setWidth(500);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        root.setHeight(500);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        lineChart \u003d this.createBaseLineChart(maxMonthlyCustomerCount, totalCustomerCount);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        Scene scene \u003d new Scene(lineChart, 800, 600);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        root.setScene(scene);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"     * Creates a new MonthlyCustomerChartWindow.","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    public MonthlyCustomerChartWindow(int maxMonthlyCustomerCount, int totalCustomerCount) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        this(new Stage(), maxMonthlyCustomerCount, totalCustomerCount);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"     * Shows the MonthlyCustomerChart window.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"    public void show() {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        logger.fine(\"Showing monthly customer chart.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"    public LineChart getLineChart() {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        return this.lineChart;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"     * Creates a template for monthly customer chart with dummy data.","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"     * @param maxMonthlyCustomerCount which is the highest count of customer gained in a month","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"     * @param totalCustomerCount which is the total customers saved in TrackBeau (not limited to current year)","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"     * @return","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    public LineChart createBaseLineChart(int maxMonthlyCustomerCount, int totalCustomerCount) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"        //defining the axes","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        final NumberAxis xAxis \u003d new NumberAxis();","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"        //set 12 months on the x axis","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        xAxis.setAutoRanging(false);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"        xAxis.setLowerBound(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        xAxis.setUpperBound(12);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"        xAxis.setTickUnit(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        xAxis.setMinorTickVisible(false);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"        xAxis.setLabel(\"Month\");","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        final NumberAxis yAxis \u003d new NumberAxis();","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        yAxis.setAutoRanging(false);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"        yAxis.setLowerBound(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        //+ 1 to give space for easy viewing of chart values","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        yAxis.setUpperBound(maxMonthlyCustomerCount + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        yAxis.setTickUnit(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"        yAxis.setMinorTickVisible(false);","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"        //creating the chart","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        LineChart baseLineChart \u003d new LineChart\u003cNumber, Number\u003e(xAxis, yAxis);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"        baseLineChart.setTitle(String.format(\"Total Customers in TrackBeau: %d\", totalCustomerCount));","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"        XYChart.Series series \u003d new XYChart.Series();","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"        series.setName(\"Customers registered into the Salon\");","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"        baseLineChart.getData().add(series);","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"        return baseLineChart;","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"     * Returns true if the MonthlyCustomerChart window is currently being shown.","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"     * Hides the MonthlyCustomerChart window.","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"    public void hide() {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"     * Focuses on the MonthlyCustomerChart window.","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"    public void focus() {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"isabelteo":128}},{"path":"src/main/java/seedu/trackbeau/ui/charts/PieChartWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.ui.charts;","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.Group;","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.core.LogsCenter;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.ui.UiPart;","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"public class PieChartWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PieChartWindow.class);","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    private static final String FXML \u003d \"PieChartWindow.fxml\";","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    private final String loggingValue;","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    private PieChart pieChart;","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"     * Creates a new Allergy Chart Window.","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     *","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * @param root Stage to use as the root of the AllergyChartWindow.","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    public PieChartWindow(Stage root, String rootTitle, String chartTitle, String loggingValue) {","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        super(FXML, root);","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        this.loggingValue \u003d loggingValue;","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        //referenced from https://docs.oracle.com/javafx/2/charts/pie-chart.htm","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        Scene scene \u003d new Scene(new Group());","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        root.setTitle(rootTitle);","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        root.setWidth(500);","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        root.setHeight(500);","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        pieChart.setLabelLineLength(10);","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        pieChart.setTitle(chartTitle); (","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"                (Group) scene.getRoot()).getChildren().add(pieChart);","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        pieChart.setLegendVisible(false);","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        pieChart.setMinSize(500, 500);","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        root.setScene(scene);","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"     * Creates a new AllergyChartWindow.","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    public PieChartWindow(String rootTitle, String chartTitle, String loggingValue) {","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        this(new Stage(), rootTitle, chartTitle, loggingValue);","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"     * Shows the AllergyChart window.","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"    public void show() {","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        logger.fine(String.format(\"Showing %s chart.\", loggingValue));","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"        getRoot().show();","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"    public PieChart getPieChart() {","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        return this.pieChart;","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"     * Returns true if the AllergyChart window is currently being shown.","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"     * Hides the AllergyChart window.","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"    public void hide() {","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        getRoot().hide();","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"     * Focuses on the AllergyChart window.","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"    public void focus() {","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"isabelteo":96}},{"path":"src/main/resources/view/BookingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"\u003cHBox styleClass\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"            \u003cLabel fx:id\u003d\"service\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$service\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"            \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startTime\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"            \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endTime\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"            \u003cLabel fx:id\u003d\"feedback\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$feedback\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"hanhuiice":40}},{"path":"src/main/resources/view/BookingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    \u003cListView fx:id\u003d\"bookingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"flairekq":8}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"\u003cHBox styleClass\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"      \u003cVBox spacing\u003d\"8\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"      \u003cFlowPane fx:id\u003d\"staffs\" styleClass\u003d\"flow_pane\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"      \u003cFlowPane fx:id\u003d\"services\" styleClass\u003d\"flow_pane\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"      \u003cFlowPane fx:id\u003d\"allergies\" styleClass\u003d\"flow_pane\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"      \u003cLabel fx:id\u003d\"regDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$regDate\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"      \u003cLabel fx:id\u003d\"skinType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$skinType\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"      \u003cLabel fx:id\u003d\"hairType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$hairType\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"      \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"flairekq":1,"-":34,"isabelteo":9}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"  \u003cListView fx:id\u003d\"customerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"flairekq":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"    /* Used in the default.html file */","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"    background-color: #383838;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"    /* -fx-background-color: derive(#1d1d1d, 20%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"flairekq"},"content":".list-cell:filled:even, .list-cell:filled:odd {","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"flairekq"},"content":"    /* -fx-background-color: #3c3e3f; */","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"    -fx-border-insets: 0 10 10 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"    -fx-background-color: #f1ebf7;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"flairekq"},"content":".list-cell:filled:selected .cardPane {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"flairekq"},"content":"     /* -fx-background-color: derive(#815076, 20%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"     -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"flairekq"},"content":"     /*-fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"flairekq"},"content":"     -fx-border-color: derive(#1d1d1d, 10%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"flairekq"},"content":"     -fx-border-color: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: derive(#815076, 30%);","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"flairekq"},"content":"    /*","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"flairekq"},"content":"    -fx-border-color: derive(#1d1d1d, 30%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"flairekq"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"flairekq"},"content":"    /* -fx-background-color: derive(#815076, 30%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #815076;","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"flairekq"},"content":"    /* -fx-background-color: derive(#815076, 20%); */","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #815076;","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: derive(#815076, 20%);","lastModifiedDate":"2022-03-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: derive(#815076, 50%);","lastModifiedDate":"2022-03-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"flairekq"},"content":".cardPane {","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"flairekq"},"content":"    /* -fx-border-color: #383838 #383838 #ffffff #383838; */","lastModifiedDate":"2022-03-13"},{"lineNumber":335,"author":{"gitId":"flairekq"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":341,"author":{"gitId":"flairekq"},"content":"    -fx-prompt-text-fill: #615b5b;","lastModifiedDate":"2022-03-13"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"hanhuiice"},"content":"#filterField, #customerListPanel, #customerWebpage {","lastModifiedDate":"2022-03-14"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"flairekq"},"content":"    /* -fx-background-color: transparent, #383838, transparent, #383838; */","lastModifiedDate":"2022-03-13"},{"lineNumber":350,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"isabelteo"},"content":"#staffs {","lastModifiedDate":"2022-03-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"isabelteo"},"content":"#staffs .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":360,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":361,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #55cbcd;","lastModifiedDate":"2022-03-13"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":368,"author":{"gitId":"isabelteo"},"content":"#services {","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"isabelteo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"isabelteo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":372,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"isabelteo"},"content":"#services .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":374,"author":{"gitId":"isabelteo"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-09"},{"lineNumber":375,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #ffffb5;","lastModifiedDate":"2022-03-13"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":381,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"isabelteo"},"content":"#allergies {","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"isabelteo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"isabelteo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"isabelteo"},"content":"#allergies .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":388,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-13"},{"lineNumber":389,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #ff968a;","lastModifiedDate":"2022-03-13"},{"lineNumber":390,"author":{"gitId":"isabelteo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"isabelteo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"isabelteo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"isabelteo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"flairekq"},"content":".menu:hover, .menu:focused, .menu:showing {","lastModifiedDate":"2022-03-13"},{"lineNumber":397,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #5e3b57;","lastModifiedDate":"2022-03-13"},{"lineNumber":398,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":399,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":400,"author":{"gitId":"flairekq"},"content":".menu-item {","lastModifiedDate":"2022-03-13"},{"lineNumber":401,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #815076;","lastModifiedDate":"2022-03-13"},{"lineNumber":402,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":403,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":404,"author":{"gitId":"flairekq"},"content":"#sideBar {","lastModifiedDate":"2022-03-13"},{"lineNumber":405,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #815076;","lastModifiedDate":"2022-03-13"},{"lineNumber":406,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":407,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":408,"author":{"gitId":"flairekq"},"content":"#sideBar .label {","lastModifiedDate":"2022-03-13"},{"lineNumber":409,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":410,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":411,"author":{"gitId":"flairekq"},"content":"    -fx-pref-width: 150px;","lastModifiedDate":"2022-03-13"},{"lineNumber":412,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":413,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":414,"author":{"gitId":"flairekq"},"content":"#appNameLabel {","lastModifiedDate":"2022-03-13"},{"lineNumber":415,"author":{"gitId":"flairekq"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-13"},{"lineNumber":416,"author":{"gitId":"flairekq"},"content":"    -fx-font-family: \"Open Sans Bold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":417,"author":{"gitId":"flairekq"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-03-13"},{"lineNumber":418,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":419,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":420,"author":{"gitId":"flairekq"},"content":".sideBarToggleLabel {","lastModifiedDate":"2022-03-13"},{"lineNumber":421,"author":{"gitId":"flairekq"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-13"},{"lineNumber":422,"author":{"gitId":"flairekq"},"content":"    -fx-padding: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":423,"author":{"gitId":"flairekq"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":424,"author":{"gitId":"flairekq"},"content":"    -fx-border-insets: 0 0 0 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":425,"author":{"gitId":"flairekq"},"content":"    -fx-border-color: transparent transparent white transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":426,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":427,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":428,"author":{"gitId":"flairekq"},"content":".sideBarToggleLabel:hover {","lastModifiedDate":"2022-03-13"},{"lineNumber":429,"author":{"gitId":"flairekq"},"content":"    -fx-border-insets: 0 5 0 5;","lastModifiedDate":"2022-03-13"},{"lineNumber":430,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":431,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":432,"author":{"gitId":"flairekq"},"content":".sideBarToggleLabel.selected {","lastModifiedDate":"2022-03-13"},{"lineNumber":433,"author":{"gitId":"flairekq"},"content":"    -fx-border-width: 0 0 5 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":434,"author":{"gitId":"flairekq"},"content":"    -fx-border-insets: 0 5 0 5;","lastModifiedDate":"2022-03-13"},{"lineNumber":435,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":436,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":437,"author":{"gitId":"flairekq"},"content":"#logoContainer {","lastModifiedDate":"2022-03-13"},{"lineNumber":438,"author":{"gitId":"flairekq"},"content":"    -fx-padding: 20 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":439,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":440,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":441,"author":{"gitId":"flairekq"},"content":"#mainDisplay {","lastModifiedDate":"2022-03-13"},{"lineNumber":442,"author":{"gitId":"flairekq"},"content":"    -fx-background-color: #dac5d6;","lastModifiedDate":"2022-03-13"},{"lineNumber":443,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":444,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"hanhuiice"},"content":".weekdayLabel {","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"hanhuiice"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-28"},{"lineNumber":447,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":448,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":449,"author":{"gitId":"hanhuiice"},"content":".weekendLabel {","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"hanhuiice"},"content":"    -fx-text-fill: red;","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"hanhuiice":9,"flairekq":102,"-":311,"isabelteo":29}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"    -fx-text-fill: #d92502 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"    -fx-background: #dac5d6;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"flairekq":2,"-":18}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"/* Choose to use Open Sans instead of Roboto as there is some issues with loading the @font-face if it is a Roboto font */","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Bold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Bold.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"@font-face {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"flairekq"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"flairekq"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"flairekq":51}},{"path":"src/main/resources/view/LineChartWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.chart.LineChart?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.chart.CategoryAxis?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.chart.NumberAxis?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Line Chart\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"            \u003cLineChart fx:id\u003d\"graph\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefWidth\u003d\"725\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"                \u003cxAxis\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"                    \u003cCategoryAxis fx:id\u003d\"xAxis\" side\u003d\"BOTTOM\" tickLabelFill\u003d\"white\" maxWidth\u003d\"Infinity\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"                \u003c/xAxis\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"                \u003cyAxis\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"                    \u003cNumberAxis fx:id\u003d\"yAxis\" side\u003d\"LEFT\" tickLabelFill\u003d\"white\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"                \u003c/yAxis\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"            \u003c/LineChart\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"isabelteo":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"\u003cfx:root minHeight\u003d\"700\" minWidth\u003d\"1270\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TrackBeau\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        \u003cImage url\u003d\"@/images/trackbeau_logo.png\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Charts\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"monthlyCustomerChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotMonthlyCustomerChart\" text\u003d\"Customers per Month Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"staffChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotStaffChart\" text\u003d\"Staff Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"serviceChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotServiceChart\" text\u003d\"Service Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"allergyChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotAllergyChart\" text\u003d\"Allergy Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"skinChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotSkinChart\" text\u003d\"Skin Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                        \u003cMenuItem fx:id\u003d\"hairChart\" mnemonicParsing\u003d\"false\" onAction\u003d\"#plotHairChart\" text\u003d\"Hair Chart\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"                \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        \u003c!-- @@author flairekq-reused --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        \u003c!-- Reused from https://github.com/AY2122S1-CS2103T-F13-2/tp/blob/master/src/main/resources/view/MainWindow.fxml --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003c!-- with minor modifications for side bar --\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cVBox id\u003d\"sideBar\" minWidth\u003d\"150\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                \u003cStackPane id\u003d\"logoContainer\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                        \u003cImageView fitWidth\u003d\"80.0\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                            \u003cimage\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                                \u003cImage fx:id\u003d\"logo\" url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                                            \u003c/image\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                                        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                                \u003cLabel id\u003d\"appNameLabel\" text\u003d\"TrackBeau\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                \u003cLabel styleClass\u003d\"sideBarToggleLabel\" fx:id\u003d\"customersLabel\" text\u003d\"Customers\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                \u003cLabel styleClass\u003d\"sideBarToggleLabel\" fx:id\u003d\"servicesLabel\" text\u003d\"Services\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                \u003cLabel styleClass\u003d\"sideBarToggleLabel\" fx:id\u003d\"bookingsLabel\" text\u003d\"Bookings\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                \u003cLabel styleClass\u003d\"sideBarToggleLabel\" fx:id\u003d\"scheduleLabel\" text\u003d\"Schedule\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        \u003cVBox id\u003d\"mainDisplay\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                \u003cVBox fx:id\u003d\"detailsList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                    \u003cStackPane fx:id\u003d\"detailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hanhuiice":1,"flairekq":8,"-":100,"isabelteo":9}},{"path":"src/main/resources/view/PieChartWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Pie Chart\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"            \u003cPieChart id\u003d\"pieChartMain\" fx:id\u003d\"pieChart\" stylesheets\u003d\"@DarkTheme.css\"\u003e\u003c/PieChart\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"isabelteo":13}},{"path":"src/main/resources/view/Schedule.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"    \u003cHBox fx:id\u003d\"weekView\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"hanhuiice":8}},{"path":"src/main/resources/view/ScheduleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"\u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"                \u003cLabel fx:id\u003d\"displayDate\" text\u003d\"\\$date\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"                \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"                \u003cLabel alignment\u003d\"CENTER_RIGHT\" fx:id\u003d\"bookingCount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$count\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"        \u003cListView fx:id\u003d\"bookingListView\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":24}},{"path":"src/main/resources/view/ServiceListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"\u003cHBox styleClass\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"flairekq"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":"            \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"            \u003cLabel fx:id\u003d\"duration\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$duration\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"flairekq"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":33}},{"path":"src/main/resources/view/ServiceListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    \u003cListView fx:id\u003d\"serviceListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"flairekq":8}},{"path":"src/main/resources/view/StatisticsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flairekq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"flairekq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"    \u003cListView fx:id\u003d\"statisticsView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"flairekq":8}},{"path":"src/test/java/seedu/trackbeau/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"hanhuiice":1,"-":57}},{"path":"src/test/java/seedu/trackbeau/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"hanhuiice":1,"-":26}},{"path":"src/test/java/seedu/trackbeau/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":2,"-":133}},{"path":"src/test/java/seedu/trackbeau/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.core.index;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        final Index fifthCustomerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(fifthCustomerIndex.equals(fifthCustomerIndex));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(fifthCustomerIndex.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(fifthCustomerIndex.equals(5.0f));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(fifthCustomerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hanhuiice":9,"-":51}},{"path":"src/test/java/seedu/trackbeau/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"        assertNotNull(AppUtil.getImage(\"/images/trackbeau_logo.png\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"hanhuiice":2,"-":33,"isabelteo":1}},{"path":"src/test/java/seedu/trackbeau/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"hanhuiice":3,"-":105}},{"path":"src/test/java/seedu/trackbeau/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Config;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hanhuiice":4,"-":112}},{"path":"src/test/java/seedu/trackbeau/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":2,"-":21}},{"path":"src/test/java/seedu/trackbeau/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.SerializableTestClass;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.TestUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":3,"-":42}},{"path":"src/test/java/seedu/trackbeau/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.commons.util;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hanhuiice":2,"-":141}},{"path":"src/test/java/seedu/trackbeau/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.REG_DATE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.CommandResult;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.ListCustomersCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.JsonTrackBeauStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.storage.StorageManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        JsonTrackBeauStorage trackBeauStorage \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"            new JsonTrackBeauStorage(temporaryFolder.resolve(\"trackbeau.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        StorageManager storage \u003d new StorageManager(trackBeauStorage, userPrefsStorage);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"        String deleteCommand \u003d DeleteCustomerCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"        String listCommand \u003d ListCustomersCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"        assertCommandSuccess(listCommand, ListCustomersCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        JsonTrackBeauStorage trackBeauStorage \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"            new JsonTrackBeauIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        StorageManager storage \u003d new StorageManager(trackBeauStorage, userPrefsStorage);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"        String addCommand \u003d AddCustomerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"            + ADDRESS_DESC_AMY + BIRTHDATE_DESC_AMY + REG_DATE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withStaffs().withServices().withAllergies().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"hanhuiice"},"content":"    private static class JsonTrackBeauIoExceptionThrowingStub extends JsonTrackBeauStorage {","lastModifiedDate":"2022-02-25"},{"lineNumber":161,"author":{"gitId":"hanhuiice"},"content":"        private JsonTrackBeauIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"hanhuiice"},"content":"        public void saveTrackBeau(ReadOnlyTrackBeau trackBeau, Path filePath) throws IOException {","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hanhuiice":32,"flairekq":12,"-":119,"isabelteo":7}},{"path":"src/test/java/seedu/trackbeau/logic/commands/AddCustomerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCustomerCommand}.","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"public class AddCustomerCommandIntegrationTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    private Model model;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"    public void setUp() {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"flairekq"},"content":"        assertCommandSuccess(new AddCustomerCommand(validCustomer), model,","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"            String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer), expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        Customer customerInList \u003d model.getTrackBeau().getCustomerList().get(0);","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(new AddCustomerCommand(customerInList), model,","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":41,"kashing555":1,"flairekq":6}},{"path":"src/test/java/seedu/trackbeau/logic/commands/AddCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"public class AddCustomerCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCustomerCommand(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        CommandResult commandResult \u003d new AddCustomerCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        assertEquals(String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        AddCustomerCommand addCustomerCommand \u003d new AddCustomerCommand(validCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"            AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e addCustomerCommand.execute(modelStub));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"        AddCustomerCommand addAliceCommand \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"        AddCustomerCommand addBobCommand \u003d new AddCustomerCommand(bob);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"        AddCustomerCommand addAliceCommandCopy \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"        public Path getTrackBeauFilePath() {","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"hanhuiice"},"content":"        public void setTrackBeauFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"        public boolean hasBooking(Booking booking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"        public void addBooking(Booking booking) {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"kashing555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"        public void setBooking(Booking target, Booking editedBooking) {","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"hanhuiice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"hanhuiice"},"content":"        public void setTrackBeau(ReadOnlyTrackBeau newData) {","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"hanhuiice"},"content":"        public ReadOnlyTrackBeau getTrackBeau() {","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"hanhuiice"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"        @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"        public boolean hasAnotherCustomerWithClashingIdentity(Customer originalCustomer, Customer editedCustomer) {","lastModifiedDate":"2022-04-04"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-04"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":157,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"kashing555"},"content":"        public void deleteBooking(Booking target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"kashing555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"hanhuiice"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"        public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"kashing555"},"content":"        public ObservableList\u003cBooking\u003e getFilteredBookingList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"kashing555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"kashing555"},"content":"        public void updateFilteredBookingList(Predicate\u003cBooking\u003e predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"kashing555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"hanhuiice"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-02-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"hanhuiice"},"content":"        public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-02-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"kashing555"},"content":"        public void updateFilteredServiceList(Predicate\u003cService\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"kashing555"},"content":"        public boolean hasService(Service service) {","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"kashing555"},"content":"        public void deleteService(Service target) {","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"kashing555"},"content":"        public void addService(Service service) {","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"kashing555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"flairekq"},"content":"        public void setService(Service target, Service editedService) {","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"kashing555"},"content":"        public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"flairekq"},"content":"        public void updateServiceList(Predicate\u003cService\u003e predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"flairekq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"hanhuiice"},"content":"        public LocalDate getSelectedDate() {","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"hanhuiice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"hanhuiice"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"hanhuiice"},"content":"        public void setSelectedDate(LocalDate selectedDate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"hanhuiice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"hanhuiice"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2022-02-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"hanhuiice"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"hanhuiice"},"content":"        private final Customer customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"hanhuiice"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"hanhuiice"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":247,"author":{"gitId":"hanhuiice"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"hanhuiice"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":252,"author":{"gitId":"hanhuiice"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":253,"author":{"gitId":"flairekq"},"content":"            return this.customer.isSameItem(customer);","lastModifiedDate":"2022-03-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"hanhuiice"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2022-02-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"hanhuiice"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2022-03-14"},{"lineNumber":261,"author":{"gitId":"hanhuiice"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"hanhuiice"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":265,"author":{"gitId":"hanhuiice"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":266,"author":{"gitId":"flairekq"},"content":"            return customersAdded.stream().anyMatch(customer::isSameItem);","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"hanhuiice"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2022-02-26"},{"lineNumber":271,"author":{"gitId":"hanhuiice"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-02-25"},{"lineNumber":272,"author":{"gitId":"hanhuiice"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"hanhuiice"},"content":"        public ReadOnlyTrackBeau getTrackBeau() {","lastModifiedDate":"2022-02-26"},{"lineNumber":277,"author":{"gitId":"hanhuiice"},"content":"            return new TrackBeau();","lastModifiedDate":"2022-02-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hanhuiice":71,"kashing555":31,"flairekq":41,"-":133,"isabelteo":5}},{"path":"src/test/java/seedu/trackbeau/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"    public void execute_emptyTrackBeau_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    public void execute_nonEmptyTrackBeau_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        Model model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.setTrackBeau(new TrackBeau());","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hanhuiice":15,"-":18}},{"path":"src/test/java/seedu/trackbeau/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", Panel.NO_CHANGE)));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        assertTrue(commandResult.equals(","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"                new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"                        false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"                        false, false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"                        Panel.NO_CHANGE)));","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", Panel.NO_CHANGE)));","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"                false, Panel.NO_CHANGE)));","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                true, false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, Panel.NO_CHANGE)));","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", Panel.NO_CHANGE).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", Panel.NO_CHANGE).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"                false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, Panel.NO_CHANGE).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"                false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"                false, Panel.NO_CHANGE).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"hanhuiice":17,"-":42,"isabelteo":10}},{"path":"src/test/java/seedu/trackbeau/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_SKIN_TYPE_AMY \u003d \"Normal\";","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_SKIN_TYPE_BOB \u003d \"Oily\";","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_HAIR_TYPE_AMY \u003d \"Oily\";","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_HAIR_TYPE_BOB \u003d \"Dry\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"07-12-2001\";","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"02-10-1990\";","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_REG_DATE_AMY \u003d \"23-02-2022\";","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_REG_DATE_BOB \u003d \"02-10-2021\";","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_STAFF_AMY \u003d \"Jane\";","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_STAFF_BOB \u003d \"John\";","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_SERVICE_AMY \u003d \"Chemical Peel\";","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_SERVICE_BOB \u003d \"Acne treatment\";","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_ALLERGY_AMY \u003d \"Nickel\";","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"    public static final String VALID_ALLERGY_BOB \u003d \"Cocoa Butter\";","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"    public static final String SKIN_TYPE_DESC_AMY \u003d \" \" + PREFIX_SKINTYPE + VALID_SKIN_TYPE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"    public static final String SKIN_TYPE_DESC_BOB \u003d \" \" + PREFIX_SKINTYPE + VALID_SKIN_TYPE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"    public static final String HAIR_TYPE_DESC_AMY \u003d \" \" + PREFIX_HAIRTYPE + VALID_HAIR_TYPE_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"    public static final String HAIR_TYPE_DESC_BOB \u003d \" \" + PREFIX_HAIRTYPE + VALID_HAIR_TYPE_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"    public static final String REG_DATE_DESC_AMY \u003d \" \" + PREFIX_REGDATE + VALID_REG_DATE_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"    public static final String REG_DATE_DESC_BOB \u003d \" \" + PREFIX_REGDATE + VALID_REG_DATE_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"    public static final String STAFF_DESC_AMY \u003d \" \" + PREFIX_STAFFS + VALID_STAFF_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"    public static final String STAFF_DESC_BOB \u003d \" \" + PREFIX_STAFFS + VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"    public static final String SERVICE_DESC_AMY \u003d \" \" + PREFIX_SERVICES + VALID_SERVICE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"    public static final String SERVICE_DESC_BOB \u003d \" \" + PREFIX_SERVICES + VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"    public static final String ALLERGY_DESC_AMY \u003d \" \" + PREFIX_ALLERGIES + VALID_ALLERGY_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"    public static final String ALLERGY_DESC_BOB \u003d \" \" + PREFIX_ALLERGIES + VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"    public static final String VALID_DATE1 \u003d \" \" + PREFIX_DATE + VALID_REG_DATE_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"    public static final String VALID_DATE2 \u003d \" \" + PREFIX_DATE + VALID_REG_DATE_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"    public static final String INVALID_SKIN_TYPE_DESC \u003d \" \" + PREFIX_SKINTYPE; // empty string not allowed for skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"    public static final String INVALID_HAIR_TYPE_DESC \u003d \" \" + PREFIX_HAIRTYPE; // empty string not allowed for hair type","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"    public static final String INVALID_STAFFS_DESC \u003d \" \" + PREFIX_STAFFS; //empty string not allowed for tags","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"    public static final String INVALID_SERVICE_DESC \u003d \" \" + PREFIX_SERVICES; //empty string not allowed for tags","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"    public static final String INVALID_ALLERGY_DESC \u003d \" \" + PREFIX_ALLERGIES; //empty string not allowed for tags","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"    public static final String INVALID_DATE \u003d \" \" + PREFIX_DATE + \"10-10\"; //missing year","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"flairekq"},"content":"    public static final EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"flairekq"},"content":"    public static final EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"                .withSkinType(VALID_SKIN_TYPE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"                .withHairType(VALID_HAIR_TYPE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"                .withSkinType(VALID_SKIN_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"                .withHairType(VALID_HAIR_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"hanhuiice"},"content":"                                            Model expectedModel, Panel expectPanel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"hanhuiice"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, expectPanel);","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"hanhuiice"},"content":"     * - the trackBeau, filtered customer list and selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau expectedAddressBook \u003d new TrackBeau(actualModel.getTrackBeau());","lastModifiedDate":"2022-02-26"},{"lineNumber":183,"author":{"gitId":"hanhuiice"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2022-02-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":186,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedAddressBook, actualModel.getTrackBeau());","lastModifiedDate":"2022-02-26"},{"lineNumber":187,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2022-02-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":190,"author":{"gitId":"hanhuiice"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2022-02-25"},{"lineNumber":191,"author":{"gitId":"hanhuiice"},"content":"     * {@code model}\u0027s trackBeau.","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":193,"author":{"gitId":"hanhuiice"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2022-02-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":196,"author":{"gitId":"hanhuiice"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":197,"author":{"gitId":"hanhuiice"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-02-25"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(splitName[0]));","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"kashing555"},"content":"        model.updateFilteredCustomerList(new CustomerSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":203,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2022-02-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hanhuiice":34,"kashing555":4,"flairekq":3,"-":86,"isabelteo":79}},{"path":"src/test/java/seedu/trackbeau/logic/commands/DeleteCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":" * {@code DeleteCustomerCommand}.","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"flairekq"},"content":"public class DeleteCustomerCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    private Model model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(firstCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        sb.append(customerToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, sb);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e outOfBoundIndex \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"                add(Index.fromOneBased(model.getFilteredCustomerList().size() + 1));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"    public void execute_validMultipleIndexesUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        Customer customerToDelete1 \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        Customer customerToDelete2 \u003d model.getFilteredCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e customers \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(customers);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"        sb.append(customerToDelete1).append(\"\\n\");","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        sb.append(customerToDelete2).append(\"\\n\");","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, sb);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.deleteCustomer(customerToDelete1);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.deleteCustomer(customerToDelete2);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"    public void execute_invalidMultipleIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e customers \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"                add(Index.fromOneBased(model.getFilteredCustomerList().size() + 1));","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(customers);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(firstCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"        sb.append(customerToDelete).append(\"\\n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, sb);","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-02-26"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e outOfBoundIndex \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"hanhuiice"},"content":"        // ensures that outOfBoundIndex is still in bounds of trackBeau list","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(outOfBoundIndex.get(0).getZeroBased() \u003c model.getTrackBeau().getCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e secondCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteFirstCommand \u003d new DeleteCustomerCommand(firstCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteSecondCommand \u003d new DeleteCustomerCommand(secondCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand deleteFirstCommandCopy \u003d new DeleteCustomerCommand(firstCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"hanhuiice"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"hanhuiice"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"hanhuiice"},"content":"        model.updateFilteredCustomerList(p -\u003e false);","lastModifiedDate":"2022-02-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2022-02-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hanhuiice":104,"flairekq":18,"-":61}},{"path":"src/test/java/seedu/trackbeau/logic/commands/EditCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"flairekq"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCustomerCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"public class EditCustomerCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    private Model model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"            new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(new TrackBeau(model.getTrackBeau()), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"flairekq"},"content":"        Customer editedCustomer \u003d customerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(VALID_STAFF_AMY).withServices(VALID_SERVICE_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"            .withPhone(VALID_PHONE_BOB).withStaffs(VALID_STAFF_AMY).withServices(VALID_SERVICE_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(new TrackBeau(model.getTrackBeau()), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"flairekq"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"    public void execute_someFieldsSpecifiedRemovedUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"flairekq"},"content":"        Customer secondCustomer \u003d model.getFilteredCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(secondCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"        Customer editedCustomer \u003d customerInList.withServices().withStaffs().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withServices().withStaffs().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"        Model expectedModel \u003d new ModelManager(new TrackBeau(model.getTrackBeau()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"        expectedModel.setCustomer(secondCustomer, editedCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"flairekq"},"content":"            new EditCustomerCommand(INDEX_FIRST_CUSTOMER, new EditCustomerCommand.EditCustomerDescriptor());","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(new TrackBeau(model.getTrackBeau()), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"hanhuiice"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"hanhuiice"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"            new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"        Model expectedModel \u003d new ModelManager(new TrackBeau(model.getTrackBeau()), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"hanhuiice"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"flairekq"},"content":"            new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"hanhuiice"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"hanhuiice"},"content":"        // edit customer in filtered list into a duplicate trackBeau","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"hanhuiice"},"content":"        Customer customerInList \u003d model.getTrackBeau().getCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"hanhuiice"},"content":"            new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"hanhuiice"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"hanhuiice"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2022-02-26"},{"lineNumber":149,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"hanhuiice"},"content":"     * but smaller than size of trackBeau","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"hanhuiice"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"hanhuiice"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"hanhuiice"},"content":"        // ensures that outOfBoundIndex is still in bounds of trackBeau","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTrackBeau().getCustomerList().size());","lastModifiedDate":"2022-02-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"hanhuiice"},"content":"            new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"flairekq"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"flairekq"},"content":"        final EditCustomerCommand standardCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_AMY);","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand.EditCustomerDescriptor copyDescriptor \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand commandWithSameValues \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, copyDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"flairekq"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_SECOND_CUSTOMER, DESC_AMY)));","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"flairekq"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_BOB)));","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"hanhuiice":51,"flairekq":58,"-":84,"isabelteo":4}},{"path":"src/test/java/seedu/trackbeau/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptorWithSameValues \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        // different staffs -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withStaffs(VALID_STAFF_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"        // different services -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withServices(VALID_SERVICE_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        //different allergies -\u003e return false","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAllergies(VALID_ALLERGY_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"hanhuiice":14,"flairekq":1,"-":39,"isabelteo":16}},{"path":"src/test/java/seedu/trackbeau/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true,","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"                false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hanhuiice":7,"-":14,"isabelteo":2}},{"path":"src/test/java/seedu/trackbeau/logic/commands/FindCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.FindCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"flairekq"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCustomerCommand}.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"public class FindCustomerCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    private Model model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e firstPrefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e secondPrefixArr2 \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        firstPrefixArr.set(0, Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kashing555"},"content":"                new CustomerSearchContainsKeywordsPredicate(firstPrefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        secondPrefixArr2.set(0, Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"                new CustomerSearchContainsKeywordsPredicate(secondPrefixArr2);","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand findFirstCommand \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand findSecondCommand \u003d new FindCustomerCommand(secondPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand findFirstCommandCopy \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"    public void execute_zeroKeywords_noCustomerFound() {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand command \u003d new FindCustomerCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCustomerList());","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand command \u003d new FindCustomerCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"    private CustomerSearchContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"kashing555"},"content":"        return new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hanhuiice":24,"kashing555":12,"flairekq":8,"-":44,"isabelteo":9}},{"path":"src/test/java/seedu/trackbeau/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"                false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"                false, false, false, Panel.NO_CHANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hanhuiice":7,"-":14,"isabelteo":2}},{"path":"src/test/java/seedu/trackbeau/logic/commands/ListCustomersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.ListCustomersCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.ui.Panel;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCustomersCommand.","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"public class ListCustomersCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        model \u003d new ModelManager(getTypicalTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        expectedModel \u003d new ModelManager(model.getTrackBeau(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(new ListCustomersCommand(), model, ListCustomersCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"                Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        assertCommandSuccess(new ListCustomersCommand(), model, ListCustomersCommand.MESSAGE_SUCCESS, expectedModel,","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"            Panel.CUSTOMER_PANEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hanhuiice":16,"flairekq":3,"-":24}},{"path":"src/test/java/seedu/trackbeau/logic/parser/AddCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ALLERGY_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ALLERGY_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.BIRTHDATE_DESC_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.HAIR_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.HAIR_TYPE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_ALLERGY_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_HAIR_TYPE_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_SERVICE_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_SKIN_TYPE_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_STAFFS_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.REG_DATE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.REG_DATE_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SERVICE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SERVICE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SKIN_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SKIN_TYPE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.STAFF_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.STAFF_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_HAIR_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser.EMPTY_SKIN_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.AddCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"public class AddCustomerCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"    private AddCustomerCommandParser parser \u003d new AddCustomerCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_BOB).withAllergies(VALID_ALLERGY_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"                + SERVICE_DESC_BOB + ALLERGY_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"                + REG_DATE_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"                + REG_DATE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"flairekq"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"                + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"                + ALLERGY_DESC_BOB + BIRTHDATE_DESC_BOB , new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"        // multiple skin types - last skin type accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_AMY + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"flairekq"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"        // multiple hair types - last hair type accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"flairekq"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"        // multiple staffs tags - all accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomerMultipleStaffs \u003d new CustomerBuilder(BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_AMY, VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_BOB).withAllergies(VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_AMY + STAFF_DESC_BOB + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"flairekq"},"content":"                + SERVICE_DESC_BOB + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomerMultipleStaffs));","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"        // multiple services tags - all accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomerMultipleServices \u003d new CustomerBuilder(BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_AMY,","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB + STAFF_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"                + SERVICE_DESC_AMY + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"                + BIRTHDATE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"                + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomerMultipleServices));","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"        // multiple allergy tags - all accepted","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomerMultipleAllergies \u003d new CustomerBuilder(BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_AMY, VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + BIRTHDATE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_AMY + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"                + ALLERGY_DESC_BOB, new AddCustomerCommand(expectedCustomerMultipleAllergies));","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"    public void parse_optionalSkinTypeMissing_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"        // no skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withSkinType(EMPTY_SKIN_TYPE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"                        + HAIR_TYPE_DESC_AMY + STAFF_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"                        + SERVICE_DESC_AMY + ALLERGY_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"                        + REG_DATE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"flairekq"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"    public void parse_optionalHairTypeMissing_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"        // no hair type","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withHairType(EMPTY_HAIR_TYPE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"                        + SKIN_TYPE_DESC_AMY + BIRTHDATE_DESC_AMY + STAFF_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"                        + SERVICE_DESC_AMY + ALLERGY_DESC_AMY + REG_DATE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"flairekq"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"    public void parse_optionalStaffsMissing_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"        // zero staffs","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withStaffs().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"isabelteo"},"content":"                        + SKIN_TYPE_DESC_AMY + HAIR_TYPE_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"isabelteo"},"content":"                        + SERVICE_DESC_AMY + ALLERGY_DESC_AMY + REG_DATE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"flairekq"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"isabelteo"},"content":"    public void parse_optionalServicesMissing_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"        // zero services","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withServices().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"                        + SKIN_TYPE_DESC_AMY + HAIR_TYPE_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"                        + STAFF_DESC_AMY + ALLERGY_DESC_AMY + REG_DATE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"flairekq"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"isabelteo"},"content":"    public void parse_optionalAllergiesMissing_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"isabelteo"},"content":"        // zero allergies","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"hanhuiice"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withAllergies().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"isabelteo"},"content":"                        + SKIN_TYPE_DESC_AMY + HAIR_TYPE_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"isabelteo"},"content":"                        + STAFF_DESC_AMY + SERVICE_DESC_AMY + REG_DATE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"flairekq"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"flairekq"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"isabelteo"},"content":"                        + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"isabelteo"},"content":"        // missing address prefix","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"isabelteo"},"content":"                        + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidName_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":248,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"isabelteo"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidPhone_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"isabelteo"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"isabelteo"},"content":"                + BIRTHDATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":264,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":266,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidEmail_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":269,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"isabelteo"},"content":"                + ADDRESS_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidAddress_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"isabelteo"},"content":"        // invalid address","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"isabelteo"},"content":"                + INVALID_ADDRESS_DESC + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"isabelteo"},"content":"    public void parse_twoInvalidValues_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"isabelteo"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"isabelteo"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"isabelteo"},"content":"                        + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"isabelteo"},"content":"                        + STAFF_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"isabelteo"},"content":"                        + ALLERGY_DESC_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"isabelteo"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"isabelteo"},"content":"    public void parse_nonEmptyPreamble_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"isabelteo"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"isabelteo"},"content":"                        + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"isabelteo"},"content":"                        + STAFF_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"isabelteo"},"content":"                        + ALLERGY_DESC_BOB + REG_DATE_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"flairekq"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":305,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidSkinType_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"isabelteo"},"content":"        // invalid skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":311,"author":{"gitId":"isabelteo"},"content":"                + INVALID_SKIN_TYPE_DESC + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, SkinType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":316,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidHairType_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"isabelteo"},"content":"        // invalid hair type","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + INVALID_HAIR_TYPE_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + SERVICE_DESC_BOB + REG_DATE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB, HairType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":323,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":324,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":326,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidStaff_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":327,"author":{"gitId":"isabelteo"},"content":"        // invalid staff","lastModifiedDate":"2022-03-09"},{"lineNumber":328,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":329,"author":{"gitId":"isabelteo"},"content":"                        + ADDRESS_DESC_BOB + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"isabelteo"},"content":"                        + INVALID_STAFFS_DESC + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"isabelteo"},"content":"                        + REG_DATE_DESC_BOB + ALLERGY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"isabelteo"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":333,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":335,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidService_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"isabelteo"},"content":"        // invalid service","lastModifiedDate":"2022-03-09"},{"lineNumber":338,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + INVALID_SERVICE_DESC","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"isabelteo"},"content":"                + REG_DATE_DESC_BOB + ALLERGY_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":344,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"isabelteo"},"content":"    public void parse_invalidAllergy_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":346,"author":{"gitId":"isabelteo"},"content":"        // invalid allergy","lastModifiedDate":"2022-03-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":348,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_BOB + HAIR_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"isabelteo"},"content":"                + STAFF_DESC_BOB + REG_DATE_DESC_BOB + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"isabelteo"},"content":"                + INVALID_ALLERGY_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":352,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"hanhuiice":39,"kashing555":3,"flairekq":20,"-":56,"isabelteo":235}},{"path":"src/test/java/seedu/trackbeau/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"hanhuiice":1,"-":149}},{"path":"src/test/java/seedu/trackbeau/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.Command;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"hanhuiice":3,"-":35}},{"path":"src/test/java/seedu/trackbeau/logic/parser/DeleteCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.DeleteCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":" * outside of the DeleteCustomerCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":" * same path through the DeleteCustomerCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"public class DeleteCustomerCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"    private DeleteCustomerCommandParser parser \u003d new DeleteCustomerCommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCustomerCommand(firstCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"    public void parse_validMultipleArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        assertParseSuccess(parser, \"1,2\", new DeleteCustomerCommand(firstCustomer));","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"flairekq"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"flairekq"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"    public void parse_invalidMultipleArgs_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"flairekq"},"content":"        assertParseFailure(parser, \"1,a\",","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"hanhuiice":29,"kashing555":1,"flairekq":11,"-":20}},{"path":"src/test/java/seedu/trackbeau/logic/parser/EditCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ALLERGY_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.ALLERGY_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.HAIR_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.HAIR_TYPE_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_HAIR_TYPE_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_SKIN_TYPE_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SERVICE_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SERVICE_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SKIN_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.SKIN_TYPE_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.STAFF_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.STAFF_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_HAIR_TYPE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_HAIR_TYPE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SKIN_TYPE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SKIN_TYPE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.EditCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"flairekq"},"content":"public class EditCustomerCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"    private static final String STAFFS_EMPTY \u003d \" \" + PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"    private static final String SERVICES_EMPTY \u003d \" \" + PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"    private static final String ALLERGY_EMPTY \u003d \" \" + PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"flairekq"},"content":"    private EditCustomerCommandParser parser \u003d new EditCustomerCommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"flairekq"},"content":"        assertParseFailure(parser, \"1\", EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SKIN_TYPE_DESC, SkinType.MESSAGE_CONSTRAINTS); //invalid skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HAIR_TYPE_DESC, HairType.MESSAGE_CONSTRAINTS); //invalid hair type","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"        //no invalid tags because e.g. for staffs stp/ clears the tags in edit, but note : it is invalid in add","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        // while parsing {@code PREFIX_STAFF} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + STAFF_DESC_AMY + STAFF_DESC_BOB + STAFFS_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + STAFF_DESC_AMY + STAFFS_EMPTY + STAFF_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + STAFFS_EMPTY + STAFF_DESC_AMY + STAFF_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"        // while parsing {@code PREFIX_SERVICE} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + SERVICE_DESC_AMY + SERVICE_DESC_BOB","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"                + SERVICES_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + SERVICE_DESC_AMY","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"                + SERVICES_EMPTY + SERVICE_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + SERVICES_EMPTY","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"                + SERVICE_DESC_AMY + SERVICE_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        // while parsing {@code PREFIX_ALLERGY} alone will reset the tags of the","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"        // {@code Customer} being edited, parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"                        + ALLERGY_DESC_BOB + ALLERGY_DESC_AMY + ALLERGY_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"                        + ALLERGY_DESC_BOB + ALLERGY_EMPTY + ALLERGY_DESC_AMY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_EMPTY","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_BOB + ALLERGY_DESC_AMY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"                        + ADDRESS_DESC_AMY + PHONE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"        Index targetIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + STAFF_DESC_BOB + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + STAFF_DESC_AMY + SERVICE_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"                + ALLERGY_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"                .withSkinType(VALID_SKIN_TYPE_BOB).withHairType(VALID_HAIR_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_BOB, VALID_STAFF_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_BOB, VALID_SERVICE_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_BOB, VALID_ALLERGY_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"hanhuiice"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"hanhuiice"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"isabelteo"},"content":"        // address","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"isabelteo"},"content":"        // skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"isabelteo"},"content":"        userInput \u003d targetIndex.getOneBased() + SKIN_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withSkinType(VALID_SKIN_TYPE_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"isabelteo"},"content":"        // hair type","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"isabelteo"},"content":"        userInput \u003d targetIndex.getOneBased() + HAIR_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withHairType(VALID_HAIR_TYPE_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"isabelteo"},"content":"        // staff","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"isabelteo"},"content":"        userInput \u003d targetIndex.getOneBased() + STAFF_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"isabelteo"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withStaffs(VALID_STAFF_AMY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":234,"author":{"gitId":"isabelteo"},"content":"        // service","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"isabelteo"},"content":"        userInput \u003d targetIndex.getOneBased() + SERVICE_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"isabelteo"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withServices(VALID_SERVICE_AMY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"isabelteo"},"content":"        // allergy","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"isabelteo"},"content":"        userInput \u003d targetIndex.getOneBased() + ALLERGY_DESC_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"isabelteo"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAllergies(VALID_ALLERGY_AMY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"isabelteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":250,"author":{"gitId":"isabelteo"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":252,"author":{"gitId":"isabelteo"},"content":"                + SKIN_TYPE_DESC_AMY + HAIR_TYPE_DESC_AMY + STAFF_DESC_AMY","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"isabelteo"},"content":"                + SERVICE_DESC_AMY + ALLERGY_DESC_AMY","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"isabelteo"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + SKIN_TYPE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"isabelteo"},"content":"                + HAIR_TYPE_DESC_BOB + STAFF_DESC_BOB + SERVICE_DESC_BOB + ALLERGY_DESC_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":258,"author":{"gitId":"isabelteo"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"isabelteo"},"content":"                .withSkinType(VALID_SKIN_TYPE_BOB).withHairType(VALID_HAIR_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_AMY, VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"isabelteo"},"content":"                .withServices(VALID_SERVICE_AMY, VALID_SERVICE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"isabelteo"},"content":"                .withAllergies(VALID_ALLERGY_AMY, VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"hanhuiice"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":275,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"hanhuiice"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":277,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":283,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"flairekq"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":291,"author":{"gitId":"hanhuiice"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":292,"author":{"gitId":"isabelteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + STAFFS_EMPTY;","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withStaffs().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":295,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"hanhuiice":40,"kashing555":1,"flairekq":22,"-":117,"isabelteo":119}},{"path":"src/test/java/seedu/trackbeau/logic/parser/FindCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.FindCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.logic.parser.customer.FindCustomerCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"public class FindCustomerCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"    private FindCustomerCommandParser parser \u003d new FindCustomerCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"kashing555"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"                FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        // Find name with no leading and trailing whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(new String[]{\"alex\", \"yeoh\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(1, Arrays.asList(new String[]{\"87438807\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(2, Arrays.asList(new String[]{\"alex@example.com\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(3, Arrays.asList(new String[]{\"geylang\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(4, Arrays.asList(new String[]{\"oily\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(5, Arrays.asList(new String[]{\"dry\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(6, Arrays.asList(new String[]{\"jason\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(7, Arrays.asList(new String[]{\"acne\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(8, Arrays.asList(new String[]{\"nickel\"}));","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand expectedFindNameCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"kashing555"},"content":"                new FindCustomerCommand(new CustomerSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kashing555"},"content":"        assertParseSuccess(parser, \"name n/alex yeoh p/87438807 e/alex@example.com\"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"kashing555"},"content":"                + \" a/geylang s/oily h/dry stp/jason sep/acne al/nickel\", expectedFindNameCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"kashing555"},"content":"        // Find name with multiple whitespaces between keywords","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"kashing555"},"content":"        assertParseSuccess(parser, \"name \\n n/alex \\n \\t yeoh p/87438807 e/alex@example.com\\\" +\"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"kashing555"},"content":"                + \" a/geylang s/oily h/dry stp/jason sep/acne al/nickel\\t\", expectedFindNameCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"hanhuiice":4,"kashing555":16,"flairekq":4,"-":19,"isabelteo":11}},{"path":"src/test/java/seedu/trackbeau/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_SKIN_TYPE \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_HAIR_TYPE \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_STAFF \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_SERVICE \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_ALLERGY \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_SKIN_TYPE \u003d \"Oily\";","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_HAIR_TYPE \u003d \"Dry\";","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_STAFF_1 \u003d \"Jane\";","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_STAFF_2 \u003d \"John\";","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_SERVICE_1 \u003d \"Chemical Peel\";","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_SERVICE_2 \u003d \"Acne Treatment\";","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_ALLERGY_1 \u003d \"Nickel\";","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_ALLERGY_2 \u003d \"Cocoa Butter\";","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"    public void parseSkinType_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSkinType((String) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"    public void parseSkinType_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSkinType(INVALID_SKIN_TYPE));","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"    public void parseSkinType_validValueWithoutWhitespace_returnsSkinType() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"        SkinType expectedSkin \u003d new SkinType(VALID_SKIN_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedSkin, ParserUtil.parseSkinType(VALID_SKIN_TYPE));","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"    public void parseSkinType_validValueWithWhitespace_returnsTrimmedSkinType() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"        String skinTypeWithWhitespace \u003d WHITESPACE + VALID_SKIN_TYPE + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"        SkinType expectedSkin \u003d new SkinType(VALID_SKIN_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedSkin, ParserUtil.parseSkinType(skinTypeWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"    public void parseHairType_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHairType((String) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"    public void parseHairType_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseHairType(INVALID_HAIR_TYPE));","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"    public void parseHairType_validValueWithoutWhitespace_returnsHairType() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"        HairType expectedHair \u003d new HairType(VALID_HAIR_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedHair, ParserUtil.parseHairType(VALID_HAIR_TYPE));","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"    public void parseHairType_validValueWithWhitespace_returnsTrimmedHairType() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"        String hairTypeWithWhitespace \u003d WHITESPACE + VALID_HAIR_TYPE + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"        HairType expectedHairType \u003d new HairType(VALID_HAIR_TYPE);","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedHairType, ParserUtil.parseHairType(hairTypeWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"isabelteo"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"isabelteo"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"isabelteo"},"content":"    public void parseStaff_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_STAFF));","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"isabelteo"},"content":"    public void parseService_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_SERVICE));","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"isabelteo"},"content":"    public void parseAllergy_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_ALLERGY));","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"isabelteo"},"content":"    public void parseStaff_validValueWithoutWhitespace_returnsStaff() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"isabelteo"},"content":"        Tag expectedStaff \u003d new Tag(VALID_STAFF_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedStaff, ParserUtil.parseTag(VALID_STAFF_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"isabelteo"},"content":"    public void parseService_validValueWithoutWhitespace_returnsStaff() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"isabelteo"},"content":"        Tag expectedService \u003d new Tag(VALID_SERVICE_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedService, ParserUtil.parseTag(VALID_SERVICE_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"isabelteo"},"content":"    public void parseAllergy_validValueWithoutWhitespace_returnsStaff() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"isabelteo"},"content":"        Tag expectedAllergy \u003d new Tag(VALID_ALLERGY_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedAllergy, ParserUtil.parseTag(VALID_ALLERGY_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"isabelteo"},"content":"    public void parseStaff_validValueWithWhitespace_returnsTrimmedStaff() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"isabelteo"},"content":"        String staffWithWhitespace \u003d WHITESPACE + VALID_STAFF_1 + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"isabelteo"},"content":"        Tag expectedStaff \u003d new Tag(VALID_STAFF_1);","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedStaff, ParserUtil.parseTag(staffWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"isabelteo"},"content":"    public void parseService_validValueWithWhitespace_returnsTrimmedService() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"isabelteo"},"content":"        String serviceWithWhitespace \u003d WHITESPACE + VALID_SERVICE_1 + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"isabelteo"},"content":"        Tag expectedService \u003d new Tag(VALID_SERVICE_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedService, ParserUtil.parseTag(serviceWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"isabelteo"},"content":"    public void parseAllergy_validValueWithWhitespace_returnsTrimmedAllergy() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"isabelteo"},"content":"        String allergyWithWhitespace \u003d WHITESPACE + VALID_ALLERGY_1 + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"isabelteo"},"content":"        Tag expectedAllergy \u003d new Tag(VALID_ALLERGY_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedAllergy, ParserUtil.parseTag(allergyWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"isabelteo"},"content":"    public void parseStaffs_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_STAFF_1, INVALID_STAFF)));","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"isabelteo"},"content":"    public void parseServices_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_SERVICE_1, INVALID_SERVICE)));","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"isabelteo"},"content":"    public void parseAllergies_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"isabelteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_ALLERGY_1, INVALID_ALLERGY)));","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":290,"author":{"gitId":"isabelteo"},"content":"    public void parseStaffs_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e actualStaffSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_STAFF_1, VALID_STAFF_2));","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e expectedStaffSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_STAFF_1), new Tag(VALID_STAFF_2)));","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":294,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedStaffSet, actualStaffSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":296,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"isabelteo"},"content":"    public void parseServices_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e actualServiceSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_SERVICE_1,","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"isabelteo"},"content":"                VALID_SERVICE_2));","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e expectedServiceSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_SERVICE_1),","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"isabelteo"},"content":"                new Tag(VALID_SERVICE_2)));","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedServiceSet, actualServiceSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"isabelteo"},"content":"    public void parseAllergies_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e actualAllergySet \u003d ParserUtil.parseTags(Arrays","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"isabelteo"},"content":"                .asList(VALID_ALLERGY_1, VALID_ALLERGY_2));","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e expectedAllergySet \u003d new HashSet\u003cTag\u003e(Arrays","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"isabelteo"},"content":"                .asList(new Tag(VALID_ALLERGY_1), new Tag(VALID_ALLERGY_2)));","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"isabelteo"},"content":"        assertEquals(expectedAllergySet, actualAllergySet);","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"hanhuiice":12,"-":162,"isabelteo":143}},{"path":"src/test/java/seedu/trackbeau/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.INVALID_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_DATE1;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_DATE2;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_REG_DATE_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanhuiice"},"content":"    public void parse_validDate_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"        LocalDate expectedDate \u003d LocalDate.parse(VALID_REG_DATE_AMY, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_DATE1, new ScheduleCommand(expectedDate));","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"        assertParseSuccess(parser, VALID_DATE2 + VALID_DATE1, new ScheduleCommand(expectedDate));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"    public void parse_missingDate_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    public void parse_invalidDate_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        assertParseFailure(parser, INVALID_DATE, parser.MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"    public void parse_nonEmptyPreamble_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + VALID_DATE1,","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanhuiice":52}},{"path":"src/test/java/seedu/trackbeau/logic/parser/TrackBeauParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ClearCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.ExitCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.commands.HelpCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.DeleteCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.FindCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.ListCustomersCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"public class TrackBeauParserTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    private final TrackBeauParser parser \u003d new TrackBeauParser();","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"flairekq"},"content":"        AddCustomerCommand command \u003d (AddCustomerCommand) parser.parseCommand(CustomerUtil.getAddCommand(customer));","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"flairekq"},"content":"        assertEquals(new AddCustomerCommand(customer), command);","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        DeleteCustomerCommand command \u003d (DeleteCustomerCommand) parser.parseCommand(","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"flairekq"},"content":"            DeleteCustomerCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CUSTOMER.getOneBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"        ArrayList\u003cIndex\u003e firstCustomer \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"            {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"                add(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"        };","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"flairekq"},"content":"        assertEquals(new DeleteCustomerCommand(firstCustomer), command);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand command \u003d (EditCustomerCommand) parser.parseCommand(EditCustomerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"flairekq"},"content":"            + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"flairekq"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"flairekq"},"content":"        assertEquals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor), command);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, keywords);","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"flairekq"},"content":"        FindCustomerCommand command \u003d (FindCustomerCommand) parser.parseCommand(","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"flairekq"},"content":"            FindCustomerCommand.COMMAND_WORD + \" /n\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"kashing555"},"content":"        assertEquals(new FindCustomerCommand(new CustomerSearchContainsKeywordsPredicate(prefixArr)), command);","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"        assertTrue(parser.parseCommand(ListCustomersCommand.COMMAND_WORD) instanceof ListCustomersCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"        assertTrue(parser.parseCommand(ListCustomersCommand.COMMAND_WORD + \" 3\") instanceof ListCustomersCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hanhuiice":24,"kashing555":4,"flairekq":21,"-":63,"isabelteo":3}},{"path":"src/test/java/seedu/trackbeau/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"kashing555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.testutil.TrackBeauBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(new TrackBeau(), new TrackBeau(modelManager.getTrackBeau()));","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        userPrefs.setTrackBeauFilePath(Paths.get(\"trackbeau/book/file/path\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        userPrefs.setTrackBeauFilePath(Paths.get(\"new/trackbeau/book/file/path\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"    public void setTrackBeauFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTrackBeauFilePath(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"    public void setTrackBeauFilePath_validPath_setsTrackBeauFilePath() {","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        Path path \u003d Paths.get(\"trackbeau/book/file/path\");","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"        modelManager.setTrackBeauFilePath(path);","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(path, modelManager.getTrackBeauFilePath());","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_customerNotInTrackBeau_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_customerInTrackBeau_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"hanhuiice"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"hanhuiice"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau trackBeau \u003d new TrackBeauBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau differentTrackBeau \u003d new TrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"        modelManager \u003d new ModelManager(trackBeau, userPrefs);","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(trackBeau, userPrefs);","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"        // different trackBeau -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTrackBeau, userPrefs)));","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(keywords));","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"kashing555"},"content":"        modelManager.updateFilteredCustomerList(new CustomerSearchContainsKeywordsPredicate(prefixArr));","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(modelManager.equals(new ModelManager(trackBeau, userPrefs)));","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"hanhuiice"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"        differentUserPrefs.setTrackBeauFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(modelManager.equals(new ModelManager(trackBeau, differentUserPrefs)));","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"hanhuiice":31,"kashing555":6,"-":95,"isabelteo":7}},{"path":"src/test/java/seedu/trackbeau/model/TrackBeauTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"kashing555"},"content":"import seedu.trackbeau.model.booking.Booking;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.service.Service;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"public class TrackBeauTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private final TrackBeau trackBeau \u003d new TrackBeau();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        assertEquals(Collections.emptyList(), trackBeau.getCustomerList());","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e trackBeau.resetData(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"    public void resetData_withValidReadOnlyTrackBeau_replacesData() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau newData \u003d getTypicalTrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        trackBeau.resetData(newData);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        assertEquals(newData, trackBeau);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"flairekq"},"content":"        List\u003cService\u003e services \u003d Arrays.asList();","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"flairekq"},"content":"        TrackBeauStub newData \u003d new TrackBeauStub(newCustomers, services);","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"flairekq"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e trackBeau.resetData(newData));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e trackBeau.hasCustomer(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_customerNotInTrackBeau_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        assertFalse(trackBeau.hasCustomer(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    public void hasCustomer_customerInTrackBeau_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        trackBeau.addCustomer(ALICE);","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        assertTrue(trackBeau.hasCustomer(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInTrackBeau_returnsTrue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"        trackBeau.addCustomer(ALICE);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"        assertTrue(trackBeau.hasCustomer(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e trackBeau.getCustomerList().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"kashing555"},"content":"     * A stub ReadOnlyTrackBeau whose customer list, booking list, service list can violate interface constraints.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"    private static class TrackBeauStub implements ReadOnlyTrackBeau {","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"flairekq"},"content":"        private final ObservableList\u003cService\u003e services \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"kashing555"},"content":"        private final ObservableList\u003cBooking\u003e bookings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"flairekq"},"content":"        TrackBeauStub(Collection\u003cCustomer\u003e customers, Collection\u003cService\u003e services) {","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"flairekq"},"content":"            this.services.setAll(services);","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"            return customers;","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"flairekq"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"flairekq"},"content":"        public ObservableList\u003cService\u003e getServiceList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"flairekq"},"content":"            return services;","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"flairekq"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"kashing555"},"content":"        public Integer getCustomerIndex(Customer customer) {","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"kashing555"},"content":"            return customers.indexOf(customer);","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"kashing555"},"content":"        public Integer getServiceIndex(Service service) {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"kashing555"},"content":"            return services.indexOf(service);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"kashing555"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"kashing555"},"content":"        public ObservableList\u003cBooking\u003e getBookingList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"kashing555"},"content":"            return bookings;","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"kashing555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"hanhuiice":18,"kashing555":18,"flairekq":12,"-":58,"isabelteo":22}},{"path":"src/test/java/seedu/trackbeau/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"    public void setTrackBeauFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTrackBeauFilePath(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hanhuiice":3,"-":17,"isabelteo":1}},{"path":"src/test/java/seedu/trackbeau/model/customer/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long trackbeau","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hanhuiice":3,"-":33}},{"path":"src/test/java/seedu/trackbeau/model/customer/CustomerSearchContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kashing555"},"content":"import static seedu.trackbeau.model.customer.CustomerSearchContainsKeywordsPredicate.FIND_ATTRIBUTE_COUNT;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"kashing555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"kashing555"},"content":"public class CustomerSearchContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e firstPrefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e secondPrefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        firstPrefixArr.set(0, firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kashing555"},"content":"                new CustomerSearchContainsKeywordsPredicate(firstPrefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        secondPrefixArr.set(0, secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kashing555"},"content":"                new CustomerSearchContainsKeywordsPredicate(secondPrefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kashing555"},"content":"                new CustomerSearchContainsKeywordsPredicate(firstPrefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"kashing555"},"content":"        predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"kashing555"},"content":"        predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"kashing555"},"content":"        predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cList\u003cString\u003e\u003e prefixArr \u003d new ArrayList\u003cList\u003cString\u003e\u003e(Collections","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"                .nCopies(FIND_ATTRIBUTE_COUNT, null));","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"kashing555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"kashing555"},"content":"        CustomerSearchContainsKeywordsPredicate predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"kashing555"},"content":"        predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"        prefixArr.set(0, Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"kashing555"},"content":"        predicate \u003d new CustomerSearchContainsKeywordsPredicate(prefixArr);","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hanhuiice":10,"kashing555":17,"-":53,"isabelteo":17}},{"path":"src/test/java/seedu/trackbeau/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_HAIR_TYPE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SKIN_TYPE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"public class CustomerTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getStaffs().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"flairekq"},"content":"        assertTrue(ALICE.isSameItem(ALICE));","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"flairekq"},"content":"        assertFalse(ALICE.isSameItem(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                .withAddress(VALID_ADDRESS_BOB).withStaffs(VALID_STAFF_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"flairekq"},"content":"        assertTrue(ALICE.isSameItem(editedAlice));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        // different phone, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                .build();","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"flairekq"},"content":"        assertFalse(ALICE.isSameItem(editedAlice));","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"        // different skin type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_SKIN_TYPE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        // different hair type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_HAIR_TYPE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        // different staffs -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withStaffs(VALID_STAFF_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        // different services -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withServices(VALID_SERVICE_AMY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAllergies(VALID_ALLERGY_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"hanhuiice":19,"flairekq":4,"-":50,"isabelteo":31}},{"path":"src/test/java/seedu/trackbeau/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hanhuiice":2,"-":66}},{"path":"src/test/java/seedu/trackbeau/model/customer/HairTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class HairTypeTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new HairType(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public void constructor_invalidHairType_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        String invalidHairType \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HairType(invalidHairType));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    public void isValidHairType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        // null HairType","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e HairType.isValidHairType(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        // invalid HairTypes","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        assertFalse(HairType.isValidHairType(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        assertFalse(HairType.isValidHairType(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        // valid HairTypes","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        assertTrue(HairType.isValidHairType(\"Oily\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        assertTrue(HairType.isValidHairType(\"o\")); // one character","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        assertTrue(HairType.isValidHairType(\"2B curly hair and oily\")); // detailed hair type","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"isabelteo":36}},{"path":"src/test/java/seedu/trackbeau/model/customer/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hanhuiice":2,"-":38}},{"path":"src/test/java/seedu/trackbeau/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hanhuiice":2,"-":38}},{"path":"src/test/java/seedu/trackbeau/model/customer/SkinTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class SkinTypeTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SkinType(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public void constructor_invalidSkinType_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        String invalidSkinType \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SkinType(invalidSkinType));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    public void isValidSkinType() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        // null SkinType","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e SkinType.isValidSkinType(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        // invalid SkinTypes","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        assertFalse(SkinType.isValidSkinType(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        assertFalse(SkinType.isValidSkinType(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        // valid SkinTypes","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        assertTrue(SkinType.isValidSkinType(\"Oily\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        assertTrue(SkinType.isValidSkinType(\"o\")); // one character","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        assertTrue(SkinType.isValidSkinType(\"normal but has psoriasis\")); // detailed skin type","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"isabelteo":36}},{"path":"src/test/java/seedu/trackbeau/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.UniqueList;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.model.uniquelist.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"flairekq"},"content":"    private final UniqueList\u003cCustomer\u003e uniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"    public void contains_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    public void contains_customerNotInList_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    public void contains_customerInList_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"hanhuiice"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"    public void add_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"    public void add_duplicateCustomer_throwsDuplicateCustomerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"flairekq"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_nullTargetCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"flairekq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setItem(null, ALICE));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_nullEditedCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"flairekq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setItem(ALICE, null));","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_targetCustomerNotInList_throwsCustomerNotFoundException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"flairekq"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueCustomerList.setItem(ALICE, ALICE));","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_editedCustomerIsSameCustomer_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"flairekq"},"content":"        uniqueCustomerList.setItem(ALICE, ALICE);","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"hanhuiice"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"                .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"flairekq"},"content":"        uniqueCustomerList.setItem(ALICE, editedAlice);","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_editedCustomerHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"flairekq"},"content":"        uniqueCustomerList.setItem(ALICE, BOB);","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomer_editedCustomerHasNonUniqueIdentity_throwsDuplicateCustomerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"flairekq"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueCustomerList.setItem(ALICE, BOB));","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"    public void remove_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.remove(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"hanhuiice"},"content":"    public void remove_customerDoesNotExist_throwsCustomerNotFoundException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"flairekq"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueCustomerList.remove(ALICE));","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"hanhuiice"},"content":"    public void remove_existingCustomer_removesCustomer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.remove(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":128,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers_nullUniqueCustomerList_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"flairekq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setItems((UniqueList\u003cCustomer\u003e) null));","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers_uniqueCustomerList_replacesOwnListWithProvidedUniqueCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":140,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"hanhuiice"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-02-26"},{"lineNumber":142,"author":{"gitId":"flairekq"},"content":"        uniqueCustomerList.setItems(expectedUniqueCustomerList);","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"flairekq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setItems((List\u003cCustomer\u003e) null));","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"hanhuiice"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"hanhuiice"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"flairekq"},"content":"        uniqueCustomerList.setItems(customerList);","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"flairekq"},"content":"        UniqueList\u003cCustomer\u003e expectedUniqueCustomerList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"hanhuiice"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-02-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"hanhuiice"},"content":"    public void setCustomers_listWithDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"hanhuiice"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-02-25"},{"lineNumber":164,"author":{"gitId":"flairekq"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"flairekq"},"content":"                uniqueCustomerList.setItems(listWithDuplicateCustomers));","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"hanhuiice"},"content":"            -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-02-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"hanhuiice":57,"flairekq":25,"-":85,"isabelteo":6}},{"path":"src/test/java/seedu/trackbeau/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.model.tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"hanhuiice":2,"-":24}},{"path":"src/test/java/seedu/trackbeau/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_SKIN_TYPE \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_HAIR_TYPE \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_STAFF \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_SERVICE \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_ALLERGY \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"30-02-2016\";","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    private static final String INVALID_REG_DATE \u003d \"30-02-2016\";","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_SKIN_TYPE \u003d BENSON.getSkinType().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_HAIR_TYPE \u003d BENSON.getHairType().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthdate().toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    private static final String VALID_REG_DATE \u003d BENSON.getRegDate().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_STAFFS \u003d BENSON.getStaffs().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_SERVICES \u003d BENSON.getServices().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_ALLERGIES \u003d BENSON.getAllergies().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"                        VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES, VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_PHONE,","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"                VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"                VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"                        VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"                        VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, null,","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"                VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"                VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"                        VALID_ADDRESS, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"                VALID_ADDRESS, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"                VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"                VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"                        INVALID_ADDRESS, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"                null, VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"                VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"                VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidSkinType_throwsIllegalValueException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"                        VALID_ADDRESS, INVALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"        String expectedMessage \u003d SkinType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidHairType_throwsIllegalValueException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"hanhuiice"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"                        VALID_ADDRESS, VALID_SKIN_TYPE, INVALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"        String expectedMessage \u003d HairType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidStaffs_throwsIllegalValueException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"        List\u003cJsonAdaptedTag\u003e invalidStaffs \u003d new ArrayList\u003c\u003e(VALID_STAFFS);","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"        invalidStaffs.add(new JsonAdaptedTag(INVALID_STAFF));","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"                        VALID_SKIN_TYPE, VALID_HAIR_TYPE, invalidStaffs,","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidServices_throwsIllegalValueException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"        List\u003cJsonAdaptedTag\u003e invalidServices \u003d new ArrayList\u003c\u003e(VALID_SERVICES);","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"        invalidServices.add(new JsonAdaptedTag(INVALID_SERVICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"                        VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"isabelteo"},"content":"                        invalidServices, VALID_ALLERGIES,","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidAllergies_throwsIllegalValueException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"isabelteo"},"content":"        List\u003cJsonAdaptedTag\u003e invalidAllergies \u003d new ArrayList\u003c\u003e(VALID_ALLERGIES);","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"isabelteo"},"content":"        invalidAllergies.add(new JsonAdaptedTag(INVALID_ALLERGY));","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"isabelteo"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"isabelteo"},"content":"                        VALID_SKIN_TYPE, VALID_HAIR_TYPE, VALID_STAFFS,","lastModifiedDate":"2022-03-09"},{"lineNumber":196,"author":{"gitId":"isabelteo"},"content":"                        VALID_SERVICES, invalidAllergies,","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"                        VALID_BIRTHDATE, VALID_REG_DATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hanhuiice":32,"-":69,"isabelteo":100}},{"path":"src/test/java/seedu/trackbeau/storage/JsonSerializableTrackBeauTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.util.JsonUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.testutil.TypicalCustomers;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"public class JsonSerializableTrackBeauTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTrackBeauTest\");","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersTrackBeau.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerTrackBeau.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerTrackBeau.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_typicalCustomerFile_success() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        JsonSerializableTrackBeau dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"                JsonSerializableTrackBeau.class).get();","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        TrackBeau trackBeauFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        TrackBeau typicalCustomersTrackBeau \u003d TypicalCustomers.getTypicalTrackBeau();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        assertEquals(trackBeauFromFile, typicalCustomersTrackBeau);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        JsonSerializableTrackBeau dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"                JsonSerializableTrackBeau.class).get();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        JsonSerializableTrackBeau dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"                JsonSerializableTrackBeau.class).get();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTrackBeau.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"isabelteo":47}},{"path":"src/test/java/seedu/trackbeau/storage/JsonTrackBeauStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"hanhuiice"},"content":"public class JsonTrackBeauStorageTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTrackBeauStorageTest\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    public void readTrackBeau_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTrackBeau(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"    private java.util.Optional\u003cReadOnlyTrackBeau\u003e readTrackBeau(String filePath) throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        return new JsonTrackBeauStorage(Paths.get(filePath)).readTrackBeau(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"        assertFalse(readTrackBeau(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackBeau(\"notJsonFormatTrackBeau.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    public void readTrackBeau_invalidCustomerTrackBeau_throwDataConversionException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackBeau(\"invalidCustomerTrackBeau.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    public void readTrackBeau_invalidAndValidCustomerTrackBeau_throwDataConversionException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrackBeau(\"invalidAndValidCustomerTrackBeau.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"    public void readAndSaveTrackBeau_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTrackBeau.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau original \u003d getTypicalTrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"hanhuiice"},"content":"        JsonTrackBeauStorage jsonTrackBeauStorage \u003d new JsonTrackBeauStorage(filePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"        jsonTrackBeauStorage.saveTrackBeau(original, filePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"        ReadOnlyTrackBeau readBack \u003d jsonTrackBeauStorage.readTrackBeau(filePath).get();","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(original, new TrackBeau(readBack));","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"        original.removeCustomer(ALICE);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"        jsonTrackBeauStorage.saveTrackBeau(original, filePath);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"hanhuiice"},"content":"        readBack \u003d jsonTrackBeauStorage.readTrackBeau(filePath).get();","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(original, new TrackBeau(readBack));","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"hanhuiice"},"content":"        jsonTrackBeauStorage.saveTrackBeau(original); // file path not specified","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"        readBack \u003d jsonTrackBeauStorage.readTrackBeau().get(); // file path not specified","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(original, new TrackBeau(readBack));","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"    public void saveTrackBeau_nullTrackBeau_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrackBeau(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"     * Saves {@code trackBeau} at the specified {@code filePath}.","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"    private void saveTrackBeau(ReadOnlyTrackBeau trackBeau, String filePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"            new JsonTrackBeauStorage(Paths.get(filePath))","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"                    .saveTrackBeau(trackBeau, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"    public void saveTrackBeau_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrackBeau(new TrackBeau(), null));","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hanhuiice":29,"-":63,"isabelteo":20}},{"path":"src/test/java/seedu/trackbeau/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"        userPrefs.setTrackBeauFilePath(Paths.get(\"trackbeau.json\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hanhuiice":6,"-":117}},{"path":"src/test/java/seedu/trackbeau/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.storage;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.TypicalCustomers.getTypicalTrackBeau;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.GuiSettings;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.ReadOnlyTrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"        JsonTrackBeauStorage addressBookStorage \u003d new JsonTrackBeauStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"hanhuiice"},"content":"    public void trackBeauReadSave() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau original \u003d getTypicalTrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        storageManager.saveTrackBeau(original);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        ReadOnlyTrackBeau retrieved \u003d storageManager.readTrackBeau().get();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"        assertEquals(original, new TrackBeau(retrieved));","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"    public void getTrackBeauFilePath() {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"        assertNotNull(storageManager.getTrackBeauFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":11,"-":54,"isabelteo":3}},{"path":"src/test/java/seedu/trackbeau/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"hanhuiice":1,"-":33}},{"path":"src/test/java/seedu/trackbeau/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.RegistrationDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.util.SampleDataUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"public class CustomerBuilder {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    private static final String DEFAULT_SKIN_TYPE \u003d \"Normal\";","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    private static final String DEFAULT_HAIR_TYPE \u003d \"Normal\";","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    private static final String DEFAULT_BIRTHDATE \u003d \"07-12-2001\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    private static final String DEFAULT_REGDATE \u003d \"23-03-2022\";","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    private Birthdate birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    private RegistrationDate regDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    private SkinType skinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    private HairType hairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    private Set\u003cTag\u003e staffs;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    private Set\u003cTag\u003e services;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    private Set\u003cTag\u003e allergies;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"        skinType \u003d new SkinType(DEFAULT_SKIN_TYPE);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        hairType \u003d new HairType(DEFAULT_HAIR_TYPE);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"        birthdate \u003d new Birthdate(DEFAULT_BIRTHDATE);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"        regDate \u003d new RegistrationDate(DEFAULT_REGDATE);","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        staffs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        services \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"        allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"hanhuiice"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"hanhuiice"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"        address \u003d customerToCopy.getAddress();","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"        skinType \u003d customerToCopy.getSkinType();","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        hairType \u003d customerToCopy.getHairType();","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        birthdate \u003d customerToCopy.getBirthdate();","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        regDate \u003d customerToCopy.getRegDate();","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        staffs \u003d new HashSet\u003c\u003e(customerToCopy.getStaffs());","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"        services \u003d new HashSet\u003c\u003e(customerToCopy.getServices());","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        allergies \u003d new HashSet\u003c\u003e(customerToCopy.getAllergies());","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code staffs} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withStaffs(String ... staffs) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        this.staffs \u003d SampleDataUtil.getTagSet(staffs);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code services} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withServices(String ... services) {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"        this.services \u003d SampleDataUtil.getTagSet(services);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withAllergies(String ... allergies) {","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"        this.allergies \u003d SampleDataUtil.getTagSet(allergies);","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Skin Type} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withSkinType(String skinType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"        this.skinType \u003d new SkinType(skinType);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Hair Type} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"hanhuiice"},"content":"    public CustomerBuilder withHairType(String hairType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"        this.hairType \u003d new HairType(hairType);","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"     * Sets the {@code Birthdate} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"    public CustomerBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"        this.birthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"     * Sets the {@code RegistrationDate} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"    public CustomerBuilder withRegistrationDate(String regDate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"        this.regDate \u003d new RegistrationDate(regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"     * Builds a customer.","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"hanhuiice"},"content":"    public Customer build() {","lastModifiedDate":"2022-02-25"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"        return new Customer(name, phone, email, address, skinType,","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"                hairType, staffs, services, allergies, birthdate, regDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"hanhuiice":37,"-":62,"isabelteo":76}},{"path":"src/test/java/seedu/trackbeau/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_ALLERGIES;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_HAIRTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_REGDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SERVICES;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_SKINTYPE;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.parser.CliSyntax.PREFIX_STAFFS;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.AddCustomerCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"hanhuiice"},"content":" * A utility class for Customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"public class CustomerUtil {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"flairekq"},"content":"        return AddCustomerCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanhuiice"},"content":"        sb.append(PREFIX_ADDRESS + customer.getAddress().value + \" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        sb.append(PREFIX_SKINTYPE + customer.getSkinType().value + \" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        sb.append(PREFIX_HAIRTYPE + customer.getHairType().value + \" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        sb.append(PREFIX_BIRTHDATE + customer.getBirthdate().toString() + \" \");","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        sb.append(PREFIX_REGDATE + customer.getRegDate().toString() + \" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"        customer.getStaffs().stream().forEach(","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            s -\u003e sb.append(PREFIX_STAFFS + s.tagName + \" \")","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        customer.getServices().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                .forEach(s -\u003e sb.append(PREFIX_SERVICES + s.tagName + \" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"        customer.getAllergies().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"                .forEach(s -\u003e sb.append(PREFIX_ALLERGIES + s.tagName + \" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"flairekq"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"        descriptor.getSkinType().ifPresent(skinType -\u003e sb.append(PREFIX_SKINTYPE).append(skinType.value).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"        descriptor.getHairType().ifPresent(hairType -\u003e sb.append(PREFIX_HAIRTYPE).append(hairType.value).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"        descriptor.getBirthdate().ifPresent(birthdate -\u003e sb.append(PREFIX_BIRTHDATE)","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"                .append(birthdate.toString()).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        descriptor.getRegistrationDate().ifPresent(regDate -\u003e sb.append(PREFIX_REGDATE)","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"                .append(regDate.toString()).append(\" \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"        if (descriptor.getStaffs().isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getStaffs().get();","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"flairekq"},"content":"                sb.append(PREFIX_STAFFS + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_STAFFS).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"        if (descriptor.getServices().isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getServices().get();","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"flairekq"},"content":"                sb.append(PREFIX_SERVICES + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"            } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_SERVICES).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"        if (descriptor.getAllergies().isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getAllergies().get();","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"flairekq"},"content":"                sb.append(PREFIX_ALLERGIES + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"            } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_ALLERGIES).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"hanhuiice":18,"flairekq":7,"-":33,"isabelteo":40}},{"path":"src/test/java/seedu/trackbeau/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"flairekq"},"content":"import seedu.trackbeau.logic.commands.customer.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Birthdate;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.HairType;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.SkinType;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"hanhuiice"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"hanhuiice"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"flairekq"},"content":"    private EditCustomerDescriptor descriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"        this.descriptor \u003d new EditCustomerDescriptor(descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanhuiice"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"hanhuiice"},"content":"        descriptor.setAddress(customer.getAddress());","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        descriptor.setSkinType(customer.getSkinType());","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        descriptor.setHairType(customer.getHairType());","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        descriptor.setStaffs(customer.getStaffs());","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        descriptor.setServices(customer.getServices());","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        descriptor.setAllergies(customer.getAllergies());","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"flairekq"},"content":"        descriptor.setBirthdate(customer.getBirthdate());","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"flairekq"},"content":"        descriptor.setRegistrationDate(customer.getRegDate());","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Name} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Phone} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Email} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Address} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Skin Type} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withSkinType(String skinType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        descriptor.setSkinType(new SkinType(skinType));","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"hanhuiice"},"content":"     * Sets the {@code Hair Type} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withHairType(String hairType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        descriptor.setHairType(new HairType(hairType));","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"     * Sets the {@code Birthdate} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"    public EditCustomerDescriptorBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"        descriptor.setBirthdate(new Birthdate(birthdate));","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code staffs} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"     * that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withStaffs(String... staffs) {","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(staffs).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"        descriptor.setStaffs(tagSet);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code services} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"     * that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withServices(String... services) {","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(services).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        descriptor.setServices(tagSet);","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"hanhuiice"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptorBuilder withAllergies(String... allergies) {","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(allergies).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"        descriptor.setAllergies(tagSet);","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"hanhuiice"},"content":"    public EditCustomerDescriptor build() {","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"hanhuiice":39,"flairekq":4,"-":51,"isabelteo":46}},{"path":"src/test/java/seedu/trackbeau/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":1,"-":71}},{"path":"src/test/java/seedu/trackbeau/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"hanhuiice"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"hanhuiice"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hanhuiice":10,"-":44,"isabelteo":1}},{"path":"src/test/java/seedu/trackbeau/testutil/TrackBeauBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * A utility class to help with building Trackbeau objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" *     {@code TrackBeau tb \u003d new TrackBeauBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public class TrackBeauBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    private TrackBeau trackBeau;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    public TrackBeauBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"        trackBeau \u003d new TrackBeau();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public TrackBeauBuilder(TrackBeau trackBeau) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        this.trackBeau \u003d trackBeau;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * Adds a new {@code Customer} to the {@code TrackBeau} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    public TrackBeauBuilder withCustomer(Customer customer) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        trackBeau.addCustomer(customer);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    public TrackBeau build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        return trackBeau;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"isabelteo":34}},{"path":"src/test/java/seedu/trackbeau/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_ALLERGY_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_HAIR_TYPE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_HAIR_TYPE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_REG_DATE_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_REG_DATE_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SERVICE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SKIN_TYPE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_SKIN_TYPE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import static seedu.trackbeau.logic.commands.CommandTestUtil.VALID_STAFF_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanhuiice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanhuiice"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"hanhuiice"},"content":"import java.util.List;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.TrackBeau;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.model.customer.Customer;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanhuiice"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanhuiice"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"hanhuiice"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"hanhuiice"},"content":"public class TypicalCustomers {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"hanhuiice"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"            .withPhone(\"94351253\").withSkinType(\"oily\").withHairType(\"dry\")","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(\"Jason\").withAllergies(\"Nickel\").withServices(\"Acne treatment\")","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"            .withBirthdate(\"01-01-2000\").withRegistrationDate(\"23-03-2022\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"hanhuiice"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"hanhuiice"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\")","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(\"Jason\").withServices(\"Chemical Peel\")","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            .withBirthdate(\"01-01-2000\").withRegistrationDate(\"23-03-2022\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\").withBirthdate(\"01-05-2000\")","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(\"23-03-2022\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\").withAllergies(\"Cocoa Butter\")","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"            .withBirthdate(\"01-01-1990\")","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(\"23-03-2022\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\")","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(\"23-03-2022\").withBirthdate(\"01-01-2000\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\")","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(\"23-03-2022\").withBirthdate(\"01-01-2000\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(\"oily\").withHairType(\"dry\").withBirthdate(\"01-01-2000\")","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(\"23-03-2022\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"hanhuiice"},"content":"    // Manually added","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"hanhuiice"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"hanhuiice"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"hanhuiice"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(VALID_SKIN_TYPE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"            .withHairType(VALID_HAIR_TYPE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"            .withBirthdate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(VALID_REG_DATE_AMY)","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(VALID_STAFF_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"            .withServices(VALID_SERVICE_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"            .withAllergies(VALID_ALLERGY_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"hanhuiice"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"            .withSkinType(VALID_SKIN_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"            .withHairType(VALID_HAIR_TYPE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"            .withBirthdate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"            .withRegistrationDate(VALID_REG_DATE_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"            .withStaffs(VALID_STAFF_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"            .withServices(VALID_SERVICE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"            .withAllergies(VALID_ALLERGY_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"hanhuiice"},"content":"            .build();","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"hanhuiice"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"hanhuiice"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"hanhuiice"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"hanhuiice"},"content":"     * Returns an {@code TrackBeau} with all the typical customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"hanhuiice"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"hanhuiice"},"content":"    public static TrackBeau getTypicalTrackBeau() {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"hanhuiice"},"content":"        TrackBeau tb \u003d new TrackBeau();","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"hanhuiice"},"content":"        for (Customer customer : getTypicalCustomers()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"hanhuiice"},"content":"            tb.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"hanhuiice"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"hanhuiice"},"content":"        return tb;","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"hanhuiice"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"hanhuiice"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"hanhuiice"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"hanhuiice"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"hanhuiice"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanhuiice":64,"isabelteo":55}},{"path":"src/test/java/seedu/trackbeau/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.testutil;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.commons.core.index.Index;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"hanhuiice"},"content":"    public static final Index INDEX_FIRST_CUSTOMER \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hanhuiice"},"content":"    public static final Index INDEX_SECOND_CUSTOMER \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"hanhuiice"},"content":"    public static final Index INDEX_THIRD_CUSTOMER \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"hanhuiice":5,"-":7}},{"path":"src/test/java/seedu/trackbeau/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hanhuiice":1,"-":34}},{"path":"src/test/java/seedu/trackbeau/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanhuiice"},"content":"package seedu.trackbeau.ui;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hanhuiice"},"content":"import static seedu.trackbeau.testutil.Assert.assertThrows;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"hanhuiice"},"content":"import seedu.trackbeau.MainApp;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hanhuiice":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"\u003c?import seedu.trackbeau.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hanhuiice":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"hanhuiice"},"content":"\u003cfx:root type\u003d\"seedu.trackbeau.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hanhuiice":1,"-":5}}]
